/*! For license information please see main.js.LICENSE.txt */
(()=>{"use strict";var e={967:(e,t,r)=>{var s,a=Object.create,i=Object.defineProperty,n=Object.getOwnPropertyDescriptor,o=Object.getOwnPropertyNames,l=Object.getPrototypeOf,c=Object.prototype.hasOwnProperty,u=(e,t)=>function(){return t||(0,e[o(e)[0]])((t={exports:{}}).exports,t),t.exports},p=(e,t,r,s)=>{if(t&&"object"==typeof t||"function"==typeof t)for(let a of o(t))c.call(e,a)||a===r||i(e,a,{get:()=>t[a],enumerable:!(s=n(t,a))||s.enumerable});return e},h=(e,t,r)=>(r=null!=e?a(l(e)):{},p(!t&&e&&e.__esModule?r:i(r,"default",{value:e,enumerable:!0}),e)),d=u({"../../node_modules/html-entities/lib/named-references.js"(e){Object.defineProperty(e,"__esModule",{value:!0}),e.bodyRegExps={xml:/&(?:#\d+|#[xX][\da-fA-F]+|[0-9a-zA-Z]+);?/g,html4:/&(?:nbsp|iexcl|cent|pound|curren|yen|brvbar|sect|uml|copy|ordf|laquo|not|shy|reg|macr|deg|plusmn|sup2|sup3|acute|micro|para|middot|cedil|sup1|ordm|raquo|frac14|frac12|frac34|iquest|Agrave|Aacute|Acirc|Atilde|Auml|Aring|AElig|Ccedil|Egrave|Eacute|Ecirc|Euml|Igrave|Iacute|Icirc|Iuml|ETH|Ntilde|Ograve|Oacute|Ocirc|Otilde|Ouml|times|Oslash|Ugrave|Uacute|Ucirc|Uuml|Yacute|THORN|szlig|agrave|aacute|acirc|atilde|auml|aring|aelig|ccedil|egrave|eacute|ecirc|euml|igrave|iacute|icirc|iuml|eth|ntilde|ograve|oacute|ocirc|otilde|ouml|divide|oslash|ugrave|uacute|ucirc|uuml|yacute|thorn|yuml|quot|amp|lt|gt|#\d+|#[xX][\da-fA-F]+|[0-9a-zA-Z]+);?/g,html5:/&(?:AElig|AMP|Aacute|Acirc|Agrave|Aring|Atilde|Auml|COPY|Ccedil|ETH|Eacute|Ecirc|Egrave|Euml|GT|Iacute|Icirc|Igrave|Iuml|LT|Ntilde|Oacute|Ocirc|Ograve|Oslash|Otilde|Ouml|QUOT|REG|THORN|Uacute|Ucirc|Ugrave|Uuml|Yacute|aacute|acirc|acute|aelig|agrave|amp|aring|atilde|auml|brvbar|ccedil|cedil|cent|copy|curren|deg|divide|eacute|ecirc|egrave|eth|euml|frac12|frac14|frac34|gt|iacute|icirc|iexcl|igrave|iquest|iuml|laquo|lt|macr|micro|middot|nbsp|not|ntilde|oacute|ocirc|ograve|ordf|ordm|oslash|otilde|ouml|para|plusmn|pound|quot|raquo|reg|sect|shy|sup1|sup2|sup3|szlig|thorn|times|uacute|ucirc|ugrave|uml|uuml|yacute|yen|yuml|#\d+|#[xX][\da-fA-F]+|[0-9a-zA-Z]+);?/g},e.namedReferences={xml:{entities:{"&lt;":"<","&gt;":">","&quot;":'"',"&apos;":"'","&amp;":"&"},characters:{"<":"&lt;",">":"&gt;",'"':"&quot;","'":"&apos;","&":"&amp;"}},html4:{entities:{"&apos;":"'","&nbsp":" ","&nbsp;":" ","&iexcl":"¡","&iexcl;":"¡","&cent":"¢","&cent;":"¢","&pound":"£","&pound;":"£","&curren":"¤","&curren;":"¤","&yen":"¥","&yen;":"¥","&brvbar":"¦","&brvbar;":"¦","&sect":"§","&sect;":"§","&uml":"¨","&uml;":"¨","&copy":"©","&copy;":"©","&ordf":"ª","&ordf;":"ª","&laquo":"«","&laquo;":"«","&not":"¬","&not;":"¬","&shy":"­","&shy;":"­","&reg":"®","&reg;":"®","&macr":"¯","&macr;":"¯","&deg":"°","&deg;":"°","&plusmn":"±","&plusmn;":"±","&sup2":"²","&sup2;":"²","&sup3":"³","&sup3;":"³","&acute":"´","&acute;":"´","&micro":"µ","&micro;":"µ","&para":"¶","&para;":"¶","&middot":"·","&middot;":"·","&cedil":"¸","&cedil;":"¸","&sup1":"¹","&sup1;":"¹","&ordm":"º","&ordm;":"º","&raquo":"»","&raquo;":"»","&frac14":"¼","&frac14;":"¼","&frac12":"½","&frac12;":"½","&frac34":"¾","&frac34;":"¾","&iquest":"¿","&iquest;":"¿","&Agrave":"À","&Agrave;":"À","&Aacute":"Á","&Aacute;":"Á","&Acirc":"Â","&Acirc;":"Â","&Atilde":"Ã","&Atilde;":"Ã","&Auml":"Ä","&Auml;":"Ä","&Aring":"Å","&Aring;":"Å","&AElig":"Æ","&AElig;":"Æ","&Ccedil":"Ç","&Ccedil;":"Ç","&Egrave":"È","&Egrave;":"È","&Eacute":"É","&Eacute;":"É","&Ecirc":"Ê","&Ecirc;":"Ê","&Euml":"Ë","&Euml;":"Ë","&Igrave":"Ì","&Igrave;":"Ì","&Iacute":"Í","&Iacute;":"Í","&Icirc":"Î","&Icirc;":"Î","&Iuml":"Ï","&Iuml;":"Ï","&ETH":"Ð","&ETH;":"Ð","&Ntilde":"Ñ","&Ntilde;":"Ñ","&Ograve":"Ò","&Ograve;":"Ò","&Oacute":"Ó","&Oacute;":"Ó","&Ocirc":"Ô","&Ocirc;":"Ô","&Otilde":"Õ","&Otilde;":"Õ","&Ouml":"Ö","&Ouml;":"Ö","&times":"×","&times;":"×","&Oslash":"Ø","&Oslash;":"Ø","&Ugrave":"Ù","&Ugrave;":"Ù","&Uacute":"Ú","&Uacute;":"Ú","&Ucirc":"Û","&Ucirc;":"Û","&Uuml":"Ü","&Uuml;":"Ü","&Yacute":"Ý","&Yacute;":"Ý","&THORN":"Þ","&THORN;":"Þ","&szlig":"ß","&szlig;":"ß","&agrave":"à","&agrave;":"à","&aacute":"á","&aacute;":"á","&acirc":"â","&acirc;":"â","&atilde":"ã","&atilde;":"ã","&auml":"ä","&auml;":"ä","&aring":"å","&aring;":"å","&aelig":"æ","&aelig;":"æ","&ccedil":"ç","&ccedil;":"ç","&egrave":"è","&egrave;":"è","&eacute":"é","&eacute;":"é","&ecirc":"ê","&ecirc;":"ê","&euml":"ë","&euml;":"ë","&igrave":"ì","&igrave;":"ì","&iacute":"í","&iacute;":"í","&icirc":"î","&icirc;":"î","&iuml":"ï","&iuml;":"ï","&eth":"ð","&eth;":"ð","&ntilde":"ñ","&ntilde;":"ñ","&ograve":"ò","&ograve;":"ò","&oacute":"ó","&oacute;":"ó","&ocirc":"ô","&ocirc;":"ô","&otilde":"õ","&otilde;":"õ","&ouml":"ö","&ouml;":"ö","&divide":"÷","&divide;":"÷","&oslash":"ø","&oslash;":"ø","&ugrave":"ù","&ugrave;":"ù","&uacute":"ú","&uacute;":"ú","&ucirc":"û","&ucirc;":"û","&uuml":"ü","&uuml;":"ü","&yacute":"ý","&yacute;":"ý","&thorn":"þ","&thorn;":"þ","&yuml":"ÿ","&yuml;":"ÿ","&quot":'"',"&quot;":'"',"&amp":"&","&amp;":"&","&lt":"<","&lt;":"<","&gt":">","&gt;":">","&OElig;":"Œ","&oelig;":"œ","&Scaron;":"Š","&scaron;":"š","&Yuml;":"Ÿ","&circ;":"ˆ","&tilde;":"˜","&ensp;":" ","&emsp;":" ","&thinsp;":" ","&zwnj;":"‌","&zwj;":"‍","&lrm;":"‎","&rlm;":"‏","&ndash;":"–","&mdash;":"—","&lsquo;":"‘","&rsquo;":"’","&sbquo;":"‚","&ldquo;":"“","&rdquo;":"”","&bdquo;":"„","&dagger;":"†","&Dagger;":"‡","&permil;":"‰","&lsaquo;":"‹","&rsaquo;":"›","&euro;":"€","&fnof;":"ƒ","&Alpha;":"Α","&Beta;":"Β","&Gamma;":"Γ","&Delta;":"Δ","&Epsilon;":"Ε","&Zeta;":"Ζ","&Eta;":"Η","&Theta;":"Θ","&Iota;":"Ι","&Kappa;":"Κ","&Lambda;":"Λ","&Mu;":"Μ","&Nu;":"Ν","&Xi;":"Ξ","&Omicron;":"Ο","&Pi;":"Π","&Rho;":"Ρ","&Sigma;":"Σ","&Tau;":"Τ","&Upsilon;":"Υ","&Phi;":"Φ","&Chi;":"Χ","&Psi;":"Ψ","&Omega;":"Ω","&alpha;":"α","&beta;":"β","&gamma;":"γ","&delta;":"δ","&epsilon;":"ε","&zeta;":"ζ","&eta;":"η","&theta;":"θ","&iota;":"ι","&kappa;":"κ","&lambda;":"λ","&mu;":"μ","&nu;":"ν","&xi;":"ξ","&omicron;":"ο","&pi;":"π","&rho;":"ρ","&sigmaf;":"ς","&sigma;":"σ","&tau;":"τ","&upsilon;":"υ","&phi;":"φ","&chi;":"χ","&psi;":"ψ","&omega;":"ω","&thetasym;":"ϑ","&upsih;":"ϒ","&piv;":"ϖ","&bull;":"•","&hellip;":"…","&prime;":"′","&Prime;":"″","&oline;":"‾","&frasl;":"⁄","&weierp;":"℘","&image;":"ℑ","&real;":"ℜ","&trade;":"™","&alefsym;":"ℵ","&larr;":"←","&uarr;":"↑","&rarr;":"→","&darr;":"↓","&harr;":"↔","&crarr;":"↵","&lArr;":"⇐","&uArr;":"⇑","&rArr;":"⇒","&dArr;":"⇓","&hArr;":"⇔","&forall;":"∀","&part;":"∂","&exist;":"∃","&empty;":"∅","&nabla;":"∇","&isin;":"∈","&notin;":"∉","&ni;":"∋","&prod;":"∏","&sum;":"∑","&minus;":"−","&lowast;":"∗","&radic;":"√","&prop;":"∝","&infin;":"∞","&ang;":"∠","&and;":"∧","&or;":"∨","&cap;":"∩","&cup;":"∪","&int;":"∫","&there4;":"∴","&sim;":"∼","&cong;":"≅","&asymp;":"≈","&ne;":"≠","&equiv;":"≡","&le;":"≤","&ge;":"≥","&sub;":"⊂","&sup;":"⊃","&nsub;":"⊄","&sube;":"⊆","&supe;":"⊇","&oplus;":"⊕","&otimes;":"⊗","&perp;":"⊥","&sdot;":"⋅","&lceil;":"⌈","&rceil;":"⌉","&lfloor;":"⌊","&rfloor;":"⌋","&lang;":"〈","&rang;":"〉","&loz;":"◊","&spades;":"♠","&clubs;":"♣","&hearts;":"♥","&diams;":"♦"},characters:{"'":"&apos;"," ":"&nbsp;","¡":"&iexcl;","¢":"&cent;","£":"&pound;","¤":"&curren;","¥":"&yen;","¦":"&brvbar;","§":"&sect;","¨":"&uml;","©":"&copy;",ª:"&ordf;","«":"&laquo;","¬":"&not;","­":"&shy;","®":"&reg;","¯":"&macr;","°":"&deg;","±":"&plusmn;","²":"&sup2;","³":"&sup3;","´":"&acute;",µ:"&micro;","¶":"&para;","·":"&middot;","¸":"&cedil;","¹":"&sup1;",º:"&ordm;","»":"&raquo;","¼":"&frac14;","½":"&frac12;","¾":"&frac34;","¿":"&iquest;",À:"&Agrave;",Á:"&Aacute;",Â:"&Acirc;",Ã:"&Atilde;",Ä:"&Auml;",Å:"&Aring;",Æ:"&AElig;",Ç:"&Ccedil;",È:"&Egrave;",É:"&Eacute;",Ê:"&Ecirc;",Ë:"&Euml;",Ì:"&Igrave;",Í:"&Iacute;",Î:"&Icirc;",Ï:"&Iuml;",Ð:"&ETH;",Ñ:"&Ntilde;",Ò:"&Ograve;",Ó:"&Oacute;",Ô:"&Ocirc;",Õ:"&Otilde;",Ö:"&Ouml;","×":"&times;",Ø:"&Oslash;",Ù:"&Ugrave;",Ú:"&Uacute;",Û:"&Ucirc;",Ü:"&Uuml;",Ý:"&Yacute;",Þ:"&THORN;",ß:"&szlig;",à:"&agrave;",á:"&aacute;",â:"&acirc;",ã:"&atilde;",ä:"&auml;",å:"&aring;",æ:"&aelig;",ç:"&ccedil;",è:"&egrave;",é:"&eacute;",ê:"&ecirc;",ë:"&euml;",ì:"&igrave;",í:"&iacute;",î:"&icirc;",ï:"&iuml;",ð:"&eth;",ñ:"&ntilde;",ò:"&ograve;",ó:"&oacute;",ô:"&ocirc;",õ:"&otilde;",ö:"&ouml;","÷":"&divide;",ø:"&oslash;",ù:"&ugrave;",ú:"&uacute;",û:"&ucirc;",ü:"&uuml;",ý:"&yacute;",þ:"&thorn;",ÿ:"&yuml;",'"':"&quot;","&":"&amp;","<":"&lt;",">":"&gt;",Œ:"&OElig;",œ:"&oelig;",Š:"&Scaron;",š:"&scaron;",Ÿ:"&Yuml;",ˆ:"&circ;","˜":"&tilde;"," ":"&ensp;"," ":"&emsp;"," ":"&thinsp;","‌":"&zwnj;","‍":"&zwj;","‎":"&lrm;","‏":"&rlm;","–":"&ndash;","—":"&mdash;","‘":"&lsquo;","’":"&rsquo;","‚":"&sbquo;","“":"&ldquo;","”":"&rdquo;","„":"&bdquo;","†":"&dagger;","‡":"&Dagger;","‰":"&permil;","‹":"&lsaquo;","›":"&rsaquo;","€":"&euro;",ƒ:"&fnof;",Α:"&Alpha;",Β:"&Beta;",Γ:"&Gamma;",Δ:"&Delta;",Ε:"&Epsilon;",Ζ:"&Zeta;",Η:"&Eta;",Θ:"&Theta;",Ι:"&Iota;",Κ:"&Kappa;",Λ:"&Lambda;",Μ:"&Mu;",Ν:"&Nu;",Ξ:"&Xi;",Ο:"&Omicron;",Π:"&Pi;",Ρ:"&Rho;",Σ:"&Sigma;",Τ:"&Tau;",Υ:"&Upsilon;",Φ:"&Phi;",Χ:"&Chi;",Ψ:"&Psi;",Ω:"&Omega;",α:"&alpha;",β:"&beta;",γ:"&gamma;",δ:"&delta;",ε:"&epsilon;",ζ:"&zeta;",η:"&eta;",θ:"&theta;",ι:"&iota;",κ:"&kappa;",λ:"&lambda;",μ:"&mu;",ν:"&nu;",ξ:"&xi;",ο:"&omicron;",π:"&pi;",ρ:"&rho;",ς:"&sigmaf;",σ:"&sigma;",τ:"&tau;",υ:"&upsilon;",φ:"&phi;",χ:"&chi;",ψ:"&psi;",ω:"&omega;",ϑ:"&thetasym;",ϒ:"&upsih;",ϖ:"&piv;","•":"&bull;","…":"&hellip;","′":"&prime;","″":"&Prime;","‾":"&oline;","⁄":"&frasl;",℘:"&weierp;",ℑ:"&image;",ℜ:"&real;","™":"&trade;",ℵ:"&alefsym;","←":"&larr;","↑":"&uarr;","→":"&rarr;","↓":"&darr;","↔":"&harr;","↵":"&crarr;","⇐":"&lArr;","⇑":"&uArr;","⇒":"&rArr;","⇓":"&dArr;","⇔":"&hArr;","∀":"&forall;","∂":"&part;","∃":"&exist;","∅":"&empty;","∇":"&nabla;","∈":"&isin;","∉":"&notin;","∋":"&ni;","∏":"&prod;","∑":"&sum;","−":"&minus;","∗":"&lowast;","√":"&radic;","∝":"&prop;","∞":"&infin;","∠":"&ang;","∧":"&and;","∨":"&or;","∩":"&cap;","∪":"&cup;","∫":"&int;","∴":"&there4;","∼":"&sim;","≅":"&cong;","≈":"&asymp;","≠":"&ne;","≡":"&equiv;","≤":"&le;","≥":"&ge;","⊂":"&sub;","⊃":"&sup;","⊄":"&nsub;","⊆":"&sube;","⊇":"&supe;","⊕":"&oplus;","⊗":"&otimes;","⊥":"&perp;","⋅":"&sdot;","⌈":"&lceil;","⌉":"&rceil;","⌊":"&lfloor;","⌋":"&rfloor;","〈":"&lang;","〉":"&rang;","◊":"&loz;","♠":"&spades;","♣":"&clubs;","♥":"&hearts;","♦":"&diams;"}},html5:{entities:{"&AElig":"Æ","&AElig;":"Æ","&AMP":"&","&AMP;":"&","&Aacute":"Á","&Aacute;":"Á","&Abreve;":"Ă","&Acirc":"Â","&Acirc;":"Â","&Acy;":"А","&Afr;":"𝔄","&Agrave":"À","&Agrave;":"À","&Alpha;":"Α","&Amacr;":"Ā","&And;":"⩓","&Aogon;":"Ą","&Aopf;":"𝔸","&ApplyFunction;":"⁡","&Aring":"Å","&Aring;":"Å","&Ascr;":"𝒜","&Assign;":"≔","&Atilde":"Ã","&Atilde;":"Ã","&Auml":"Ä","&Auml;":"Ä","&Backslash;":"∖","&Barv;":"⫧","&Barwed;":"⌆","&Bcy;":"Б","&Because;":"∵","&Bernoullis;":"ℬ","&Beta;":"Β","&Bfr;":"𝔅","&Bopf;":"𝔹","&Breve;":"˘","&Bscr;":"ℬ","&Bumpeq;":"≎","&CHcy;":"Ч","&COPY":"©","&COPY;":"©","&Cacute;":"Ć","&Cap;":"⋒","&CapitalDifferentialD;":"ⅅ","&Cayleys;":"ℭ","&Ccaron;":"Č","&Ccedil":"Ç","&Ccedil;":"Ç","&Ccirc;":"Ĉ","&Cconint;":"∰","&Cdot;":"Ċ","&Cedilla;":"¸","&CenterDot;":"·","&Cfr;":"ℭ","&Chi;":"Χ","&CircleDot;":"⊙","&CircleMinus;":"⊖","&CirclePlus;":"⊕","&CircleTimes;":"⊗","&ClockwiseContourIntegral;":"∲","&CloseCurlyDoubleQuote;":"”","&CloseCurlyQuote;":"’","&Colon;":"∷","&Colone;":"⩴","&Congruent;":"≡","&Conint;":"∯","&ContourIntegral;":"∮","&Copf;":"ℂ","&Coproduct;":"∐","&CounterClockwiseContourIntegral;":"∳","&Cross;":"⨯","&Cscr;":"𝒞","&Cup;":"⋓","&CupCap;":"≍","&DD;":"ⅅ","&DDotrahd;":"⤑","&DJcy;":"Ђ","&DScy;":"Ѕ","&DZcy;":"Џ","&Dagger;":"‡","&Darr;":"↡","&Dashv;":"⫤","&Dcaron;":"Ď","&Dcy;":"Д","&Del;":"∇","&Delta;":"Δ","&Dfr;":"𝔇","&DiacriticalAcute;":"´","&DiacriticalDot;":"˙","&DiacriticalDoubleAcute;":"˝","&DiacriticalGrave;":"`","&DiacriticalTilde;":"˜","&Diamond;":"⋄","&DifferentialD;":"ⅆ","&Dopf;":"𝔻","&Dot;":"¨","&DotDot;":"⃜","&DotEqual;":"≐","&DoubleContourIntegral;":"∯","&DoubleDot;":"¨","&DoubleDownArrow;":"⇓","&DoubleLeftArrow;":"⇐","&DoubleLeftRightArrow;":"⇔","&DoubleLeftTee;":"⫤","&DoubleLongLeftArrow;":"⟸","&DoubleLongLeftRightArrow;":"⟺","&DoubleLongRightArrow;":"⟹","&DoubleRightArrow;":"⇒","&DoubleRightTee;":"⊨","&DoubleUpArrow;":"⇑","&DoubleUpDownArrow;":"⇕","&DoubleVerticalBar;":"∥","&DownArrow;":"↓","&DownArrowBar;":"⤓","&DownArrowUpArrow;":"⇵","&DownBreve;":"̑","&DownLeftRightVector;":"⥐","&DownLeftTeeVector;":"⥞","&DownLeftVector;":"↽","&DownLeftVectorBar;":"⥖","&DownRightTeeVector;":"⥟","&DownRightVector;":"⇁","&DownRightVectorBar;":"⥗","&DownTee;":"⊤","&DownTeeArrow;":"↧","&Downarrow;":"⇓","&Dscr;":"𝒟","&Dstrok;":"Đ","&ENG;":"Ŋ","&ETH":"Ð","&ETH;":"Ð","&Eacute":"É","&Eacute;":"É","&Ecaron;":"Ě","&Ecirc":"Ê","&Ecirc;":"Ê","&Ecy;":"Э","&Edot;":"Ė","&Efr;":"𝔈","&Egrave":"È","&Egrave;":"È","&Element;":"∈","&Emacr;":"Ē","&EmptySmallSquare;":"◻","&EmptyVerySmallSquare;":"▫","&Eogon;":"Ę","&Eopf;":"𝔼","&Epsilon;":"Ε","&Equal;":"⩵","&EqualTilde;":"≂","&Equilibrium;":"⇌","&Escr;":"ℰ","&Esim;":"⩳","&Eta;":"Η","&Euml":"Ë","&Euml;":"Ë","&Exists;":"∃","&ExponentialE;":"ⅇ","&Fcy;":"Ф","&Ffr;":"𝔉","&FilledSmallSquare;":"◼","&FilledVerySmallSquare;":"▪","&Fopf;":"𝔽","&ForAll;":"∀","&Fouriertrf;":"ℱ","&Fscr;":"ℱ","&GJcy;":"Ѓ","&GT":">","&GT;":">","&Gamma;":"Γ","&Gammad;":"Ϝ","&Gbreve;":"Ğ","&Gcedil;":"Ģ","&Gcirc;":"Ĝ","&Gcy;":"Г","&Gdot;":"Ġ","&Gfr;":"𝔊","&Gg;":"⋙","&Gopf;":"𝔾","&GreaterEqual;":"≥","&GreaterEqualLess;":"⋛","&GreaterFullEqual;":"≧","&GreaterGreater;":"⪢","&GreaterLess;":"≷","&GreaterSlantEqual;":"⩾","&GreaterTilde;":"≳","&Gscr;":"𝒢","&Gt;":"≫","&HARDcy;":"Ъ","&Hacek;":"ˇ","&Hat;":"^","&Hcirc;":"Ĥ","&Hfr;":"ℌ","&HilbertSpace;":"ℋ","&Hopf;":"ℍ","&HorizontalLine;":"─","&Hscr;":"ℋ","&Hstrok;":"Ħ","&HumpDownHump;":"≎","&HumpEqual;":"≏","&IEcy;":"Е","&IJlig;":"Ĳ","&IOcy;":"Ё","&Iacute":"Í","&Iacute;":"Í","&Icirc":"Î","&Icirc;":"Î","&Icy;":"И","&Idot;":"İ","&Ifr;":"ℑ","&Igrave":"Ì","&Igrave;":"Ì","&Im;":"ℑ","&Imacr;":"Ī","&ImaginaryI;":"ⅈ","&Implies;":"⇒","&Int;":"∬","&Integral;":"∫","&Intersection;":"⋂","&InvisibleComma;":"⁣","&InvisibleTimes;":"⁢","&Iogon;":"Į","&Iopf;":"𝕀","&Iota;":"Ι","&Iscr;":"ℐ","&Itilde;":"Ĩ","&Iukcy;":"І","&Iuml":"Ï","&Iuml;":"Ï","&Jcirc;":"Ĵ","&Jcy;":"Й","&Jfr;":"𝔍","&Jopf;":"𝕁","&Jscr;":"𝒥","&Jsercy;":"Ј","&Jukcy;":"Є","&KHcy;":"Х","&KJcy;":"Ќ","&Kappa;":"Κ","&Kcedil;":"Ķ","&Kcy;":"К","&Kfr;":"𝔎","&Kopf;":"𝕂","&Kscr;":"𝒦","&LJcy;":"Љ","&LT":"<","&LT;":"<","&Lacute;":"Ĺ","&Lambda;":"Λ","&Lang;":"⟪","&Laplacetrf;":"ℒ","&Larr;":"↞","&Lcaron;":"Ľ","&Lcedil;":"Ļ","&Lcy;":"Л","&LeftAngleBracket;":"⟨","&LeftArrow;":"←","&LeftArrowBar;":"⇤","&LeftArrowRightArrow;":"⇆","&LeftCeiling;":"⌈","&LeftDoubleBracket;":"⟦","&LeftDownTeeVector;":"⥡","&LeftDownVector;":"⇃","&LeftDownVectorBar;":"⥙","&LeftFloor;":"⌊","&LeftRightArrow;":"↔","&LeftRightVector;":"⥎","&LeftTee;":"⊣","&LeftTeeArrow;":"↤","&LeftTeeVector;":"⥚","&LeftTriangle;":"⊲","&LeftTriangleBar;":"⧏","&LeftTriangleEqual;":"⊴","&LeftUpDownVector;":"⥑","&LeftUpTeeVector;":"⥠","&LeftUpVector;":"↿","&LeftUpVectorBar;":"⥘","&LeftVector;":"↼","&LeftVectorBar;":"⥒","&Leftarrow;":"⇐","&Leftrightarrow;":"⇔","&LessEqualGreater;":"⋚","&LessFullEqual;":"≦","&LessGreater;":"≶","&LessLess;":"⪡","&LessSlantEqual;":"⩽","&LessTilde;":"≲","&Lfr;":"𝔏","&Ll;":"⋘","&Lleftarrow;":"⇚","&Lmidot;":"Ŀ","&LongLeftArrow;":"⟵","&LongLeftRightArrow;":"⟷","&LongRightArrow;":"⟶","&Longleftarrow;":"⟸","&Longleftrightarrow;":"⟺","&Longrightarrow;":"⟹","&Lopf;":"𝕃","&LowerLeftArrow;":"↙","&LowerRightArrow;":"↘","&Lscr;":"ℒ","&Lsh;":"↰","&Lstrok;":"Ł","&Lt;":"≪","&Map;":"⤅","&Mcy;":"М","&MediumSpace;":" ","&Mellintrf;":"ℳ","&Mfr;":"𝔐","&MinusPlus;":"∓","&Mopf;":"𝕄","&Mscr;":"ℳ","&Mu;":"Μ","&NJcy;":"Њ","&Nacute;":"Ń","&Ncaron;":"Ň","&Ncedil;":"Ņ","&Ncy;":"Н","&NegativeMediumSpace;":"​","&NegativeThickSpace;":"​","&NegativeThinSpace;":"​","&NegativeVeryThinSpace;":"​","&NestedGreaterGreater;":"≫","&NestedLessLess;":"≪","&NewLine;":"\n","&Nfr;":"𝔑","&NoBreak;":"⁠","&NonBreakingSpace;":" ","&Nopf;":"ℕ","&Not;":"⫬","&NotCongruent;":"≢","&NotCupCap;":"≭","&NotDoubleVerticalBar;":"∦","&NotElement;":"∉","&NotEqual;":"≠","&NotEqualTilde;":"≂̸","&NotExists;":"∄","&NotGreater;":"≯","&NotGreaterEqual;":"≱","&NotGreaterFullEqual;":"≧̸","&NotGreaterGreater;":"≫̸","&NotGreaterLess;":"≹","&NotGreaterSlantEqual;":"⩾̸","&NotGreaterTilde;":"≵","&NotHumpDownHump;":"≎̸","&NotHumpEqual;":"≏̸","&NotLeftTriangle;":"⋪","&NotLeftTriangleBar;":"⧏̸","&NotLeftTriangleEqual;":"⋬","&NotLess;":"≮","&NotLessEqual;":"≰","&NotLessGreater;":"≸","&NotLessLess;":"≪̸","&NotLessSlantEqual;":"⩽̸","&NotLessTilde;":"≴","&NotNestedGreaterGreater;":"⪢̸","&NotNestedLessLess;":"⪡̸","&NotPrecedes;":"⊀","&NotPrecedesEqual;":"⪯̸","&NotPrecedesSlantEqual;":"⋠","&NotReverseElement;":"∌","&NotRightTriangle;":"⋫","&NotRightTriangleBar;":"⧐̸","&NotRightTriangleEqual;":"⋭","&NotSquareSubset;":"⊏̸","&NotSquareSubsetEqual;":"⋢","&NotSquareSuperset;":"⊐̸","&NotSquareSupersetEqual;":"⋣","&NotSubset;":"⊂⃒","&NotSubsetEqual;":"⊈","&NotSucceeds;":"⊁","&NotSucceedsEqual;":"⪰̸","&NotSucceedsSlantEqual;":"⋡","&NotSucceedsTilde;":"≿̸","&NotSuperset;":"⊃⃒","&NotSupersetEqual;":"⊉","&NotTilde;":"≁","&NotTildeEqual;":"≄","&NotTildeFullEqual;":"≇","&NotTildeTilde;":"≉","&NotVerticalBar;":"∤","&Nscr;":"𝒩","&Ntilde":"Ñ","&Ntilde;":"Ñ","&Nu;":"Ν","&OElig;":"Œ","&Oacute":"Ó","&Oacute;":"Ó","&Ocirc":"Ô","&Ocirc;":"Ô","&Ocy;":"О","&Odblac;":"Ő","&Ofr;":"𝔒","&Ograve":"Ò","&Ograve;":"Ò","&Omacr;":"Ō","&Omega;":"Ω","&Omicron;":"Ο","&Oopf;":"𝕆","&OpenCurlyDoubleQuote;":"“","&OpenCurlyQuote;":"‘","&Or;":"⩔","&Oscr;":"𝒪","&Oslash":"Ø","&Oslash;":"Ø","&Otilde":"Õ","&Otilde;":"Õ","&Otimes;":"⨷","&Ouml":"Ö","&Ouml;":"Ö","&OverBar;":"‾","&OverBrace;":"⏞","&OverBracket;":"⎴","&OverParenthesis;":"⏜","&PartialD;":"∂","&Pcy;":"П","&Pfr;":"𝔓","&Phi;":"Φ","&Pi;":"Π","&PlusMinus;":"±","&Poincareplane;":"ℌ","&Popf;":"ℙ","&Pr;":"⪻","&Precedes;":"≺","&PrecedesEqual;":"⪯","&PrecedesSlantEqual;":"≼","&PrecedesTilde;":"≾","&Prime;":"″","&Product;":"∏","&Proportion;":"∷","&Proportional;":"∝","&Pscr;":"𝒫","&Psi;":"Ψ","&QUOT":'"',"&QUOT;":'"',"&Qfr;":"𝔔","&Qopf;":"ℚ","&Qscr;":"𝒬","&RBarr;":"⤐","&REG":"®","&REG;":"®","&Racute;":"Ŕ","&Rang;":"⟫","&Rarr;":"↠","&Rarrtl;":"⤖","&Rcaron;":"Ř","&Rcedil;":"Ŗ","&Rcy;":"Р","&Re;":"ℜ","&ReverseElement;":"∋","&ReverseEquilibrium;":"⇋","&ReverseUpEquilibrium;":"⥯","&Rfr;":"ℜ","&Rho;":"Ρ","&RightAngleBracket;":"⟩","&RightArrow;":"→","&RightArrowBar;":"⇥","&RightArrowLeftArrow;":"⇄","&RightCeiling;":"⌉","&RightDoubleBracket;":"⟧","&RightDownTeeVector;":"⥝","&RightDownVector;":"⇂","&RightDownVectorBar;":"⥕","&RightFloor;":"⌋","&RightTee;":"⊢","&RightTeeArrow;":"↦","&RightTeeVector;":"⥛","&RightTriangle;":"⊳","&RightTriangleBar;":"⧐","&RightTriangleEqual;":"⊵","&RightUpDownVector;":"⥏","&RightUpTeeVector;":"⥜","&RightUpVector;":"↾","&RightUpVectorBar;":"⥔","&RightVector;":"⇀","&RightVectorBar;":"⥓","&Rightarrow;":"⇒","&Ropf;":"ℝ","&RoundImplies;":"⥰","&Rrightarrow;":"⇛","&Rscr;":"ℛ","&Rsh;":"↱","&RuleDelayed;":"⧴","&SHCHcy;":"Щ","&SHcy;":"Ш","&SOFTcy;":"Ь","&Sacute;":"Ś","&Sc;":"⪼","&Scaron;":"Š","&Scedil;":"Ş","&Scirc;":"Ŝ","&Scy;":"С","&Sfr;":"𝔖","&ShortDownArrow;":"↓","&ShortLeftArrow;":"←","&ShortRightArrow;":"→","&ShortUpArrow;":"↑","&Sigma;":"Σ","&SmallCircle;":"∘","&Sopf;":"𝕊","&Sqrt;":"√","&Square;":"□","&SquareIntersection;":"⊓","&SquareSubset;":"⊏","&SquareSubsetEqual;":"⊑","&SquareSuperset;":"⊐","&SquareSupersetEqual;":"⊒","&SquareUnion;":"⊔","&Sscr;":"𝒮","&Star;":"⋆","&Sub;":"⋐","&Subset;":"⋐","&SubsetEqual;":"⊆","&Succeeds;":"≻","&SucceedsEqual;":"⪰","&SucceedsSlantEqual;":"≽","&SucceedsTilde;":"≿","&SuchThat;":"∋","&Sum;":"∑","&Sup;":"⋑","&Superset;":"⊃","&SupersetEqual;":"⊇","&Supset;":"⋑","&THORN":"Þ","&THORN;":"Þ","&TRADE;":"™","&TSHcy;":"Ћ","&TScy;":"Ц","&Tab;":"\t","&Tau;":"Τ","&Tcaron;":"Ť","&Tcedil;":"Ţ","&Tcy;":"Т","&Tfr;":"𝔗","&Therefore;":"∴","&Theta;":"Θ","&ThickSpace;":"  ","&ThinSpace;":" ","&Tilde;":"∼","&TildeEqual;":"≃","&TildeFullEqual;":"≅","&TildeTilde;":"≈","&Topf;":"𝕋","&TripleDot;":"⃛","&Tscr;":"𝒯","&Tstrok;":"Ŧ","&Uacute":"Ú","&Uacute;":"Ú","&Uarr;":"↟","&Uarrocir;":"⥉","&Ubrcy;":"Ў","&Ubreve;":"Ŭ","&Ucirc":"Û","&Ucirc;":"Û","&Ucy;":"У","&Udblac;":"Ű","&Ufr;":"𝔘","&Ugrave":"Ù","&Ugrave;":"Ù","&Umacr;":"Ū","&UnderBar;":"_","&UnderBrace;":"⏟","&UnderBracket;":"⎵","&UnderParenthesis;":"⏝","&Union;":"⋃","&UnionPlus;":"⊎","&Uogon;":"Ų","&Uopf;":"𝕌","&UpArrow;":"↑","&UpArrowBar;":"⤒","&UpArrowDownArrow;":"⇅","&UpDownArrow;":"↕","&UpEquilibrium;":"⥮","&UpTee;":"⊥","&UpTeeArrow;":"↥","&Uparrow;":"⇑","&Updownarrow;":"⇕","&UpperLeftArrow;":"↖","&UpperRightArrow;":"↗","&Upsi;":"ϒ","&Upsilon;":"Υ","&Uring;":"Ů","&Uscr;":"𝒰","&Utilde;":"Ũ","&Uuml":"Ü","&Uuml;":"Ü","&VDash;":"⊫","&Vbar;":"⫫","&Vcy;":"В","&Vdash;":"⊩","&Vdashl;":"⫦","&Vee;":"⋁","&Verbar;":"‖","&Vert;":"‖","&VerticalBar;":"∣","&VerticalLine;":"|","&VerticalSeparator;":"❘","&VerticalTilde;":"≀","&VeryThinSpace;":" ","&Vfr;":"𝔙","&Vopf;":"𝕍","&Vscr;":"𝒱","&Vvdash;":"⊪","&Wcirc;":"Ŵ","&Wedge;":"⋀","&Wfr;":"𝔚","&Wopf;":"𝕎","&Wscr;":"𝒲","&Xfr;":"𝔛","&Xi;":"Ξ","&Xopf;":"𝕏","&Xscr;":"𝒳","&YAcy;":"Я","&YIcy;":"Ї","&YUcy;":"Ю","&Yacute":"Ý","&Yacute;":"Ý","&Ycirc;":"Ŷ","&Ycy;":"Ы","&Yfr;":"𝔜","&Yopf;":"𝕐","&Yscr;":"𝒴","&Yuml;":"Ÿ","&ZHcy;":"Ж","&Zacute;":"Ź","&Zcaron;":"Ž","&Zcy;":"З","&Zdot;":"Ż","&ZeroWidthSpace;":"​","&Zeta;":"Ζ","&Zfr;":"ℨ","&Zopf;":"ℤ","&Zscr;":"𝒵","&aacute":"á","&aacute;":"á","&abreve;":"ă","&ac;":"∾","&acE;":"∾̳","&acd;":"∿","&acirc":"â","&acirc;":"â","&acute":"´","&acute;":"´","&acy;":"а","&aelig":"æ","&aelig;":"æ","&af;":"⁡","&afr;":"𝔞","&agrave":"à","&agrave;":"à","&alefsym;":"ℵ","&aleph;":"ℵ","&alpha;":"α","&amacr;":"ā","&amalg;":"⨿","&amp":"&","&amp;":"&","&and;":"∧","&andand;":"⩕","&andd;":"⩜","&andslope;":"⩘","&andv;":"⩚","&ang;":"∠","&ange;":"⦤","&angle;":"∠","&angmsd;":"∡","&angmsdaa;":"⦨","&angmsdab;":"⦩","&angmsdac;":"⦪","&angmsdad;":"⦫","&angmsdae;":"⦬","&angmsdaf;":"⦭","&angmsdag;":"⦮","&angmsdah;":"⦯","&angrt;":"∟","&angrtvb;":"⊾","&angrtvbd;":"⦝","&angsph;":"∢","&angst;":"Å","&angzarr;":"⍼","&aogon;":"ą","&aopf;":"𝕒","&ap;":"≈","&apE;":"⩰","&apacir;":"⩯","&ape;":"≊","&apid;":"≋","&apos;":"'","&approx;":"≈","&approxeq;":"≊","&aring":"å","&aring;":"å","&ascr;":"𝒶","&ast;":"*","&asymp;":"≈","&asympeq;":"≍","&atilde":"ã","&atilde;":"ã","&auml":"ä","&auml;":"ä","&awconint;":"∳","&awint;":"⨑","&bNot;":"⫭","&backcong;":"≌","&backepsilon;":"϶","&backprime;":"‵","&backsim;":"∽","&backsimeq;":"⋍","&barvee;":"⊽","&barwed;":"⌅","&barwedge;":"⌅","&bbrk;":"⎵","&bbrktbrk;":"⎶","&bcong;":"≌","&bcy;":"б","&bdquo;":"„","&becaus;":"∵","&because;":"∵","&bemptyv;":"⦰","&bepsi;":"϶","&bernou;":"ℬ","&beta;":"β","&beth;":"ℶ","&between;":"≬","&bfr;":"𝔟","&bigcap;":"⋂","&bigcirc;":"◯","&bigcup;":"⋃","&bigodot;":"⨀","&bigoplus;":"⨁","&bigotimes;":"⨂","&bigsqcup;":"⨆","&bigstar;":"★","&bigtriangledown;":"▽","&bigtriangleup;":"△","&biguplus;":"⨄","&bigvee;":"⋁","&bigwedge;":"⋀","&bkarow;":"⤍","&blacklozenge;":"⧫","&blacksquare;":"▪","&blacktriangle;":"▴","&blacktriangledown;":"▾","&blacktriangleleft;":"◂","&blacktriangleright;":"▸","&blank;":"␣","&blk12;":"▒","&blk14;":"░","&blk34;":"▓","&block;":"█","&bne;":"=⃥","&bnequiv;":"≡⃥","&bnot;":"⌐","&bopf;":"𝕓","&bot;":"⊥","&bottom;":"⊥","&bowtie;":"⋈","&boxDL;":"╗","&boxDR;":"╔","&boxDl;":"╖","&boxDr;":"╓","&boxH;":"═","&boxHD;":"╦","&boxHU;":"╩","&boxHd;":"╤","&boxHu;":"╧","&boxUL;":"╝","&boxUR;":"╚","&boxUl;":"╜","&boxUr;":"╙","&boxV;":"║","&boxVH;":"╬","&boxVL;":"╣","&boxVR;":"╠","&boxVh;":"╫","&boxVl;":"╢","&boxVr;":"╟","&boxbox;":"⧉","&boxdL;":"╕","&boxdR;":"╒","&boxdl;":"┐","&boxdr;":"┌","&boxh;":"─","&boxhD;":"╥","&boxhU;":"╨","&boxhd;":"┬","&boxhu;":"┴","&boxminus;":"⊟","&boxplus;":"⊞","&boxtimes;":"⊠","&boxuL;":"╛","&boxuR;":"╘","&boxul;":"┘","&boxur;":"└","&boxv;":"│","&boxvH;":"╪","&boxvL;":"╡","&boxvR;":"╞","&boxvh;":"┼","&boxvl;":"┤","&boxvr;":"├","&bprime;":"‵","&breve;":"˘","&brvbar":"¦","&brvbar;":"¦","&bscr;":"𝒷","&bsemi;":"⁏","&bsim;":"∽","&bsime;":"⋍","&bsol;":"\\","&bsolb;":"⧅","&bsolhsub;":"⟈","&bull;":"•","&bullet;":"•","&bump;":"≎","&bumpE;":"⪮","&bumpe;":"≏","&bumpeq;":"≏","&cacute;":"ć","&cap;":"∩","&capand;":"⩄","&capbrcup;":"⩉","&capcap;":"⩋","&capcup;":"⩇","&capdot;":"⩀","&caps;":"∩︀","&caret;":"⁁","&caron;":"ˇ","&ccaps;":"⩍","&ccaron;":"č","&ccedil":"ç","&ccedil;":"ç","&ccirc;":"ĉ","&ccups;":"⩌","&ccupssm;":"⩐","&cdot;":"ċ","&cedil":"¸","&cedil;":"¸","&cemptyv;":"⦲","&cent":"¢","&cent;":"¢","&centerdot;":"·","&cfr;":"𝔠","&chcy;":"ч","&check;":"✓","&checkmark;":"✓","&chi;":"χ","&cir;":"○","&cirE;":"⧃","&circ;":"ˆ","&circeq;":"≗","&circlearrowleft;":"↺","&circlearrowright;":"↻","&circledR;":"®","&circledS;":"Ⓢ","&circledast;":"⊛","&circledcirc;":"⊚","&circleddash;":"⊝","&cire;":"≗","&cirfnint;":"⨐","&cirmid;":"⫯","&cirscir;":"⧂","&clubs;":"♣","&clubsuit;":"♣","&colon;":":","&colone;":"≔","&coloneq;":"≔","&comma;":",","&commat;":"@","&comp;":"∁","&compfn;":"∘","&complement;":"∁","&complexes;":"ℂ","&cong;":"≅","&congdot;":"⩭","&conint;":"∮","&copf;":"𝕔","&coprod;":"∐","&copy":"©","&copy;":"©","&copysr;":"℗","&crarr;":"↵","&cross;":"✗","&cscr;":"𝒸","&csub;":"⫏","&csube;":"⫑","&csup;":"⫐","&csupe;":"⫒","&ctdot;":"⋯","&cudarrl;":"⤸","&cudarrr;":"⤵","&cuepr;":"⋞","&cuesc;":"⋟","&cularr;":"↶","&cularrp;":"⤽","&cup;":"∪","&cupbrcap;":"⩈","&cupcap;":"⩆","&cupcup;":"⩊","&cupdot;":"⊍","&cupor;":"⩅","&cups;":"∪︀","&curarr;":"↷","&curarrm;":"⤼","&curlyeqprec;":"⋞","&curlyeqsucc;":"⋟","&curlyvee;":"⋎","&curlywedge;":"⋏","&curren":"¤","&curren;":"¤","&curvearrowleft;":"↶","&curvearrowright;":"↷","&cuvee;":"⋎","&cuwed;":"⋏","&cwconint;":"∲","&cwint;":"∱","&cylcty;":"⌭","&dArr;":"⇓","&dHar;":"⥥","&dagger;":"†","&daleth;":"ℸ","&darr;":"↓","&dash;":"‐","&dashv;":"⊣","&dbkarow;":"⤏","&dblac;":"˝","&dcaron;":"ď","&dcy;":"д","&dd;":"ⅆ","&ddagger;":"‡","&ddarr;":"⇊","&ddotseq;":"⩷","&deg":"°","&deg;":"°","&delta;":"δ","&demptyv;":"⦱","&dfisht;":"⥿","&dfr;":"𝔡","&dharl;":"⇃","&dharr;":"⇂","&diam;":"⋄","&diamond;":"⋄","&diamondsuit;":"♦","&diams;":"♦","&die;":"¨","&digamma;":"ϝ","&disin;":"⋲","&div;":"÷","&divide":"÷","&divide;":"÷","&divideontimes;":"⋇","&divonx;":"⋇","&djcy;":"ђ","&dlcorn;":"⌞","&dlcrop;":"⌍","&dollar;":"$","&dopf;":"𝕕","&dot;":"˙","&doteq;":"≐","&doteqdot;":"≑","&dotminus;":"∸","&dotplus;":"∔","&dotsquare;":"⊡","&doublebarwedge;":"⌆","&downarrow;":"↓","&downdownarrows;":"⇊","&downharpoonleft;":"⇃","&downharpoonright;":"⇂","&drbkarow;":"⤐","&drcorn;":"⌟","&drcrop;":"⌌","&dscr;":"𝒹","&dscy;":"ѕ","&dsol;":"⧶","&dstrok;":"đ","&dtdot;":"⋱","&dtri;":"▿","&dtrif;":"▾","&duarr;":"⇵","&duhar;":"⥯","&dwangle;":"⦦","&dzcy;":"џ","&dzigrarr;":"⟿","&eDDot;":"⩷","&eDot;":"≑","&eacute":"é","&eacute;":"é","&easter;":"⩮","&ecaron;":"ě","&ecir;":"≖","&ecirc":"ê","&ecirc;":"ê","&ecolon;":"≕","&ecy;":"э","&edot;":"ė","&ee;":"ⅇ","&efDot;":"≒","&efr;":"𝔢","&eg;":"⪚","&egrave":"è","&egrave;":"è","&egs;":"⪖","&egsdot;":"⪘","&el;":"⪙","&elinters;":"⏧","&ell;":"ℓ","&els;":"⪕","&elsdot;":"⪗","&emacr;":"ē","&empty;":"∅","&emptyset;":"∅","&emptyv;":"∅","&emsp13;":" ","&emsp14;":" ","&emsp;":" ","&eng;":"ŋ","&ensp;":" ","&eogon;":"ę","&eopf;":"𝕖","&epar;":"⋕","&eparsl;":"⧣","&eplus;":"⩱","&epsi;":"ε","&epsilon;":"ε","&epsiv;":"ϵ","&eqcirc;":"≖","&eqcolon;":"≕","&eqsim;":"≂","&eqslantgtr;":"⪖","&eqslantless;":"⪕","&equals;":"=","&equest;":"≟","&equiv;":"≡","&equivDD;":"⩸","&eqvparsl;":"⧥","&erDot;":"≓","&erarr;":"⥱","&escr;":"ℯ","&esdot;":"≐","&esim;":"≂","&eta;":"η","&eth":"ð","&eth;":"ð","&euml":"ë","&euml;":"ë","&euro;":"€","&excl;":"!","&exist;":"∃","&expectation;":"ℰ","&exponentiale;":"ⅇ","&fallingdotseq;":"≒","&fcy;":"ф","&female;":"♀","&ffilig;":"ﬃ","&fflig;":"ﬀ","&ffllig;":"ﬄ","&ffr;":"𝔣","&filig;":"ﬁ","&fjlig;":"fj","&flat;":"♭","&fllig;":"ﬂ","&fltns;":"▱","&fnof;":"ƒ","&fopf;":"𝕗","&forall;":"∀","&fork;":"⋔","&forkv;":"⫙","&fpartint;":"⨍","&frac12":"½","&frac12;":"½","&frac13;":"⅓","&frac14":"¼","&frac14;":"¼","&frac15;":"⅕","&frac16;":"⅙","&frac18;":"⅛","&frac23;":"⅔","&frac25;":"⅖","&frac34":"¾","&frac34;":"¾","&frac35;":"⅗","&frac38;":"⅜","&frac45;":"⅘","&frac56;":"⅚","&frac58;":"⅝","&frac78;":"⅞","&frasl;":"⁄","&frown;":"⌢","&fscr;":"𝒻","&gE;":"≧","&gEl;":"⪌","&gacute;":"ǵ","&gamma;":"γ","&gammad;":"ϝ","&gap;":"⪆","&gbreve;":"ğ","&gcirc;":"ĝ","&gcy;":"г","&gdot;":"ġ","&ge;":"≥","&gel;":"⋛","&geq;":"≥","&geqq;":"≧","&geqslant;":"⩾","&ges;":"⩾","&gescc;":"⪩","&gesdot;":"⪀","&gesdoto;":"⪂","&gesdotol;":"⪄","&gesl;":"⋛︀","&gesles;":"⪔","&gfr;":"𝔤","&gg;":"≫","&ggg;":"⋙","&gimel;":"ℷ","&gjcy;":"ѓ","&gl;":"≷","&glE;":"⪒","&gla;":"⪥","&glj;":"⪤","&gnE;":"≩","&gnap;":"⪊","&gnapprox;":"⪊","&gne;":"⪈","&gneq;":"⪈","&gneqq;":"≩","&gnsim;":"⋧","&gopf;":"𝕘","&grave;":"`","&gscr;":"ℊ","&gsim;":"≳","&gsime;":"⪎","&gsiml;":"⪐","&gt":">","&gt;":">","&gtcc;":"⪧","&gtcir;":"⩺","&gtdot;":"⋗","&gtlPar;":"⦕","&gtquest;":"⩼","&gtrapprox;":"⪆","&gtrarr;":"⥸","&gtrdot;":"⋗","&gtreqless;":"⋛","&gtreqqless;":"⪌","&gtrless;":"≷","&gtrsim;":"≳","&gvertneqq;":"≩︀","&gvnE;":"≩︀","&hArr;":"⇔","&hairsp;":" ","&half;":"½","&hamilt;":"ℋ","&hardcy;":"ъ","&harr;":"↔","&harrcir;":"⥈","&harrw;":"↭","&hbar;":"ℏ","&hcirc;":"ĥ","&hearts;":"♥","&heartsuit;":"♥","&hellip;":"…","&hercon;":"⊹","&hfr;":"𝔥","&hksearow;":"⤥","&hkswarow;":"⤦","&hoarr;":"⇿","&homtht;":"∻","&hookleftarrow;":"↩","&hookrightarrow;":"↪","&hopf;":"𝕙","&horbar;":"―","&hscr;":"𝒽","&hslash;":"ℏ","&hstrok;":"ħ","&hybull;":"⁃","&hyphen;":"‐","&iacute":"í","&iacute;":"í","&ic;":"⁣","&icirc":"î","&icirc;":"î","&icy;":"и","&iecy;":"е","&iexcl":"¡","&iexcl;":"¡","&iff;":"⇔","&ifr;":"𝔦","&igrave":"ì","&igrave;":"ì","&ii;":"ⅈ","&iiiint;":"⨌","&iiint;":"∭","&iinfin;":"⧜","&iiota;":"℩","&ijlig;":"ĳ","&imacr;":"ī","&image;":"ℑ","&imagline;":"ℐ","&imagpart;":"ℑ","&imath;":"ı","&imof;":"⊷","&imped;":"Ƶ","&in;":"∈","&incare;":"℅","&infin;":"∞","&infintie;":"⧝","&inodot;":"ı","&int;":"∫","&intcal;":"⊺","&integers;":"ℤ","&intercal;":"⊺","&intlarhk;":"⨗","&intprod;":"⨼","&iocy;":"ё","&iogon;":"į","&iopf;":"𝕚","&iota;":"ι","&iprod;":"⨼","&iquest":"¿","&iquest;":"¿","&iscr;":"𝒾","&isin;":"∈","&isinE;":"⋹","&isindot;":"⋵","&isins;":"⋴","&isinsv;":"⋳","&isinv;":"∈","&it;":"⁢","&itilde;":"ĩ","&iukcy;":"і","&iuml":"ï","&iuml;":"ï","&jcirc;":"ĵ","&jcy;":"й","&jfr;":"𝔧","&jmath;":"ȷ","&jopf;":"𝕛","&jscr;":"𝒿","&jsercy;":"ј","&jukcy;":"є","&kappa;":"κ","&kappav;":"ϰ","&kcedil;":"ķ","&kcy;":"к","&kfr;":"𝔨","&kgreen;":"ĸ","&khcy;":"х","&kjcy;":"ќ","&kopf;":"𝕜","&kscr;":"𝓀","&lAarr;":"⇚","&lArr;":"⇐","&lAtail;":"⤛","&lBarr;":"⤎","&lE;":"≦","&lEg;":"⪋","&lHar;":"⥢","&lacute;":"ĺ","&laemptyv;":"⦴","&lagran;":"ℒ","&lambda;":"λ","&lang;":"⟨","&langd;":"⦑","&langle;":"⟨","&lap;":"⪅","&laquo":"«","&laquo;":"«","&larr;":"←","&larrb;":"⇤","&larrbfs;":"⤟","&larrfs;":"⤝","&larrhk;":"↩","&larrlp;":"↫","&larrpl;":"⤹","&larrsim;":"⥳","&larrtl;":"↢","&lat;":"⪫","&latail;":"⤙","&late;":"⪭","&lates;":"⪭︀","&lbarr;":"⤌","&lbbrk;":"❲","&lbrace;":"{","&lbrack;":"[","&lbrke;":"⦋","&lbrksld;":"⦏","&lbrkslu;":"⦍","&lcaron;":"ľ","&lcedil;":"ļ","&lceil;":"⌈","&lcub;":"{","&lcy;":"л","&ldca;":"⤶","&ldquo;":"“","&ldquor;":"„","&ldrdhar;":"⥧","&ldrushar;":"⥋","&ldsh;":"↲","&le;":"≤","&leftarrow;":"←","&leftarrowtail;":"↢","&leftharpoondown;":"↽","&leftharpoonup;":"↼","&leftleftarrows;":"⇇","&leftrightarrow;":"↔","&leftrightarrows;":"⇆","&leftrightharpoons;":"⇋","&leftrightsquigarrow;":"↭","&leftthreetimes;":"⋋","&leg;":"⋚","&leq;":"≤","&leqq;":"≦","&leqslant;":"⩽","&les;":"⩽","&lescc;":"⪨","&lesdot;":"⩿","&lesdoto;":"⪁","&lesdotor;":"⪃","&lesg;":"⋚︀","&lesges;":"⪓","&lessapprox;":"⪅","&lessdot;":"⋖","&lesseqgtr;":"⋚","&lesseqqgtr;":"⪋","&lessgtr;":"≶","&lesssim;":"≲","&lfisht;":"⥼","&lfloor;":"⌊","&lfr;":"𝔩","&lg;":"≶","&lgE;":"⪑","&lhard;":"↽","&lharu;":"↼","&lharul;":"⥪","&lhblk;":"▄","&ljcy;":"љ","&ll;":"≪","&llarr;":"⇇","&llcorner;":"⌞","&llhard;":"⥫","&lltri;":"◺","&lmidot;":"ŀ","&lmoust;":"⎰","&lmoustache;":"⎰","&lnE;":"≨","&lnap;":"⪉","&lnapprox;":"⪉","&lne;":"⪇","&lneq;":"⪇","&lneqq;":"≨","&lnsim;":"⋦","&loang;":"⟬","&loarr;":"⇽","&lobrk;":"⟦","&longleftarrow;":"⟵","&longleftrightarrow;":"⟷","&longmapsto;":"⟼","&longrightarrow;":"⟶","&looparrowleft;":"↫","&looparrowright;":"↬","&lopar;":"⦅","&lopf;":"𝕝","&loplus;":"⨭","&lotimes;":"⨴","&lowast;":"∗","&lowbar;":"_","&loz;":"◊","&lozenge;":"◊","&lozf;":"⧫","&lpar;":"(","&lparlt;":"⦓","&lrarr;":"⇆","&lrcorner;":"⌟","&lrhar;":"⇋","&lrhard;":"⥭","&lrm;":"‎","&lrtri;":"⊿","&lsaquo;":"‹","&lscr;":"𝓁","&lsh;":"↰","&lsim;":"≲","&lsime;":"⪍","&lsimg;":"⪏","&lsqb;":"[","&lsquo;":"‘","&lsquor;":"‚","&lstrok;":"ł","&lt":"<","&lt;":"<","&ltcc;":"⪦","&ltcir;":"⩹","&ltdot;":"⋖","&lthree;":"⋋","&ltimes;":"⋉","&ltlarr;":"⥶","&ltquest;":"⩻","&ltrPar;":"⦖","&ltri;":"◃","&ltrie;":"⊴","&ltrif;":"◂","&lurdshar;":"⥊","&luruhar;":"⥦","&lvertneqq;":"≨︀","&lvnE;":"≨︀","&mDDot;":"∺","&macr":"¯","&macr;":"¯","&male;":"♂","&malt;":"✠","&maltese;":"✠","&map;":"↦","&mapsto;":"↦","&mapstodown;":"↧","&mapstoleft;":"↤","&mapstoup;":"↥","&marker;":"▮","&mcomma;":"⨩","&mcy;":"м","&mdash;":"—","&measuredangle;":"∡","&mfr;":"𝔪","&mho;":"℧","&micro":"µ","&micro;":"µ","&mid;":"∣","&midast;":"*","&midcir;":"⫰","&middot":"·","&middot;":"·","&minus;":"−","&minusb;":"⊟","&minusd;":"∸","&minusdu;":"⨪","&mlcp;":"⫛","&mldr;":"…","&mnplus;":"∓","&models;":"⊧","&mopf;":"𝕞","&mp;":"∓","&mscr;":"𝓂","&mstpos;":"∾","&mu;":"μ","&multimap;":"⊸","&mumap;":"⊸","&nGg;":"⋙̸","&nGt;":"≫⃒","&nGtv;":"≫̸","&nLeftarrow;":"⇍","&nLeftrightarrow;":"⇎","&nLl;":"⋘̸","&nLt;":"≪⃒","&nLtv;":"≪̸","&nRightarrow;":"⇏","&nVDash;":"⊯","&nVdash;":"⊮","&nabla;":"∇","&nacute;":"ń","&nang;":"∠⃒","&nap;":"≉","&napE;":"⩰̸","&napid;":"≋̸","&napos;":"ŉ","&napprox;":"≉","&natur;":"♮","&natural;":"♮","&naturals;":"ℕ","&nbsp":" ","&nbsp;":" ","&nbump;":"≎̸","&nbumpe;":"≏̸","&ncap;":"⩃","&ncaron;":"ň","&ncedil;":"ņ","&ncong;":"≇","&ncongdot;":"⩭̸","&ncup;":"⩂","&ncy;":"н","&ndash;":"–","&ne;":"≠","&neArr;":"⇗","&nearhk;":"⤤","&nearr;":"↗","&nearrow;":"↗","&nedot;":"≐̸","&nequiv;":"≢","&nesear;":"⤨","&nesim;":"≂̸","&nexist;":"∄","&nexists;":"∄","&nfr;":"𝔫","&ngE;":"≧̸","&nge;":"≱","&ngeq;":"≱","&ngeqq;":"≧̸","&ngeqslant;":"⩾̸","&nges;":"⩾̸","&ngsim;":"≵","&ngt;":"≯","&ngtr;":"≯","&nhArr;":"⇎","&nharr;":"↮","&nhpar;":"⫲","&ni;":"∋","&nis;":"⋼","&nisd;":"⋺","&niv;":"∋","&njcy;":"њ","&nlArr;":"⇍","&nlE;":"≦̸","&nlarr;":"↚","&nldr;":"‥","&nle;":"≰","&nleftarrow;":"↚","&nleftrightarrow;":"↮","&nleq;":"≰","&nleqq;":"≦̸","&nleqslant;":"⩽̸","&nles;":"⩽̸","&nless;":"≮","&nlsim;":"≴","&nlt;":"≮","&nltri;":"⋪","&nltrie;":"⋬","&nmid;":"∤","&nopf;":"𝕟","&not":"¬","&not;":"¬","&notin;":"∉","&notinE;":"⋹̸","&notindot;":"⋵̸","&notinva;":"∉","&notinvb;":"⋷","&notinvc;":"⋶","&notni;":"∌","&notniva;":"∌","&notnivb;":"⋾","&notnivc;":"⋽","&npar;":"∦","&nparallel;":"∦","&nparsl;":"⫽⃥","&npart;":"∂̸","&npolint;":"⨔","&npr;":"⊀","&nprcue;":"⋠","&npre;":"⪯̸","&nprec;":"⊀","&npreceq;":"⪯̸","&nrArr;":"⇏","&nrarr;":"↛","&nrarrc;":"⤳̸","&nrarrw;":"↝̸","&nrightarrow;":"↛","&nrtri;":"⋫","&nrtrie;":"⋭","&nsc;":"⊁","&nsccue;":"⋡","&nsce;":"⪰̸","&nscr;":"𝓃","&nshortmid;":"∤","&nshortparallel;":"∦","&nsim;":"≁","&nsime;":"≄","&nsimeq;":"≄","&nsmid;":"∤","&nspar;":"∦","&nsqsube;":"⋢","&nsqsupe;":"⋣","&nsub;":"⊄","&nsubE;":"⫅̸","&nsube;":"⊈","&nsubset;":"⊂⃒","&nsubseteq;":"⊈","&nsubseteqq;":"⫅̸","&nsucc;":"⊁","&nsucceq;":"⪰̸","&nsup;":"⊅","&nsupE;":"⫆̸","&nsupe;":"⊉","&nsupset;":"⊃⃒","&nsupseteq;":"⊉","&nsupseteqq;":"⫆̸","&ntgl;":"≹","&ntilde":"ñ","&ntilde;":"ñ","&ntlg;":"≸","&ntriangleleft;":"⋪","&ntrianglelefteq;":"⋬","&ntriangleright;":"⋫","&ntrianglerighteq;":"⋭","&nu;":"ν","&num;":"#","&numero;":"№","&numsp;":" ","&nvDash;":"⊭","&nvHarr;":"⤄","&nvap;":"≍⃒","&nvdash;":"⊬","&nvge;":"≥⃒","&nvgt;":">⃒","&nvinfin;":"⧞","&nvlArr;":"⤂","&nvle;":"≤⃒","&nvlt;":"<⃒","&nvltrie;":"⊴⃒","&nvrArr;":"⤃","&nvrtrie;":"⊵⃒","&nvsim;":"∼⃒","&nwArr;":"⇖","&nwarhk;":"⤣","&nwarr;":"↖","&nwarrow;":"↖","&nwnear;":"⤧","&oS;":"Ⓢ","&oacute":"ó","&oacute;":"ó","&oast;":"⊛","&ocir;":"⊚","&ocirc":"ô","&ocirc;":"ô","&ocy;":"о","&odash;":"⊝","&odblac;":"ő","&odiv;":"⨸","&odot;":"⊙","&odsold;":"⦼","&oelig;":"œ","&ofcir;":"⦿","&ofr;":"𝔬","&ogon;":"˛","&ograve":"ò","&ograve;":"ò","&ogt;":"⧁","&ohbar;":"⦵","&ohm;":"Ω","&oint;":"∮","&olarr;":"↺","&olcir;":"⦾","&olcross;":"⦻","&oline;":"‾","&olt;":"⧀","&omacr;":"ō","&omega;":"ω","&omicron;":"ο","&omid;":"⦶","&ominus;":"⊖","&oopf;":"𝕠","&opar;":"⦷","&operp;":"⦹","&oplus;":"⊕","&or;":"∨","&orarr;":"↻","&ord;":"⩝","&order;":"ℴ","&orderof;":"ℴ","&ordf":"ª","&ordf;":"ª","&ordm":"º","&ordm;":"º","&origof;":"⊶","&oror;":"⩖","&orslope;":"⩗","&orv;":"⩛","&oscr;":"ℴ","&oslash":"ø","&oslash;":"ø","&osol;":"⊘","&otilde":"õ","&otilde;":"õ","&otimes;":"⊗","&otimesas;":"⨶","&ouml":"ö","&ouml;":"ö","&ovbar;":"⌽","&par;":"∥","&para":"¶","&para;":"¶","&parallel;":"∥","&parsim;":"⫳","&parsl;":"⫽","&part;":"∂","&pcy;":"п","&percnt;":"%","&period;":".","&permil;":"‰","&perp;":"⊥","&pertenk;":"‱","&pfr;":"𝔭","&phi;":"φ","&phiv;":"ϕ","&phmmat;":"ℳ","&phone;":"☎","&pi;":"π","&pitchfork;":"⋔","&piv;":"ϖ","&planck;":"ℏ","&planckh;":"ℎ","&plankv;":"ℏ","&plus;":"+","&plusacir;":"⨣","&plusb;":"⊞","&pluscir;":"⨢","&plusdo;":"∔","&plusdu;":"⨥","&pluse;":"⩲","&plusmn":"±","&plusmn;":"±","&plussim;":"⨦","&plustwo;":"⨧","&pm;":"±","&pointint;":"⨕","&popf;":"𝕡","&pound":"£","&pound;":"£","&pr;":"≺","&prE;":"⪳","&prap;":"⪷","&prcue;":"≼","&pre;":"⪯","&prec;":"≺","&precapprox;":"⪷","&preccurlyeq;":"≼","&preceq;":"⪯","&precnapprox;":"⪹","&precneqq;":"⪵","&precnsim;":"⋨","&precsim;":"≾","&prime;":"′","&primes;":"ℙ","&prnE;":"⪵","&prnap;":"⪹","&prnsim;":"⋨","&prod;":"∏","&profalar;":"⌮","&profline;":"⌒","&profsurf;":"⌓","&prop;":"∝","&propto;":"∝","&prsim;":"≾","&prurel;":"⊰","&pscr;":"𝓅","&psi;":"ψ","&puncsp;":" ","&qfr;":"𝔮","&qint;":"⨌","&qopf;":"𝕢","&qprime;":"⁗","&qscr;":"𝓆","&quaternions;":"ℍ","&quatint;":"⨖","&quest;":"?","&questeq;":"≟","&quot":'"',"&quot;":'"',"&rAarr;":"⇛","&rArr;":"⇒","&rAtail;":"⤜","&rBarr;":"⤏","&rHar;":"⥤","&race;":"∽̱","&racute;":"ŕ","&radic;":"√","&raemptyv;":"⦳","&rang;":"⟩","&rangd;":"⦒","&range;":"⦥","&rangle;":"⟩","&raquo":"»","&raquo;":"»","&rarr;":"→","&rarrap;":"⥵","&rarrb;":"⇥","&rarrbfs;":"⤠","&rarrc;":"⤳","&rarrfs;":"⤞","&rarrhk;":"↪","&rarrlp;":"↬","&rarrpl;":"⥅","&rarrsim;":"⥴","&rarrtl;":"↣","&rarrw;":"↝","&ratail;":"⤚","&ratio;":"∶","&rationals;":"ℚ","&rbarr;":"⤍","&rbbrk;":"❳","&rbrace;":"}","&rbrack;":"]","&rbrke;":"⦌","&rbrksld;":"⦎","&rbrkslu;":"⦐","&rcaron;":"ř","&rcedil;":"ŗ","&rceil;":"⌉","&rcub;":"}","&rcy;":"р","&rdca;":"⤷","&rdldhar;":"⥩","&rdquo;":"”","&rdquor;":"”","&rdsh;":"↳","&real;":"ℜ","&realine;":"ℛ","&realpart;":"ℜ","&reals;":"ℝ","&rect;":"▭","&reg":"®","&reg;":"®","&rfisht;":"⥽","&rfloor;":"⌋","&rfr;":"𝔯","&rhard;":"⇁","&rharu;":"⇀","&rharul;":"⥬","&rho;":"ρ","&rhov;":"ϱ","&rightarrow;":"→","&rightarrowtail;":"↣","&rightharpoondown;":"⇁","&rightharpoonup;":"⇀","&rightleftarrows;":"⇄","&rightleftharpoons;":"⇌","&rightrightarrows;":"⇉","&rightsquigarrow;":"↝","&rightthreetimes;":"⋌","&ring;":"˚","&risingdotseq;":"≓","&rlarr;":"⇄","&rlhar;":"⇌","&rlm;":"‏","&rmoust;":"⎱","&rmoustache;":"⎱","&rnmid;":"⫮","&roang;":"⟭","&roarr;":"⇾","&robrk;":"⟧","&ropar;":"⦆","&ropf;":"𝕣","&roplus;":"⨮","&rotimes;":"⨵","&rpar;":")","&rpargt;":"⦔","&rppolint;":"⨒","&rrarr;":"⇉","&rsaquo;":"›","&rscr;":"𝓇","&rsh;":"↱","&rsqb;":"]","&rsquo;":"’","&rsquor;":"’","&rthree;":"⋌","&rtimes;":"⋊","&rtri;":"▹","&rtrie;":"⊵","&rtrif;":"▸","&rtriltri;":"⧎","&ruluhar;":"⥨","&rx;":"℞","&sacute;":"ś","&sbquo;":"‚","&sc;":"≻","&scE;":"⪴","&scap;":"⪸","&scaron;":"š","&sccue;":"≽","&sce;":"⪰","&scedil;":"ş","&scirc;":"ŝ","&scnE;":"⪶","&scnap;":"⪺","&scnsim;":"⋩","&scpolint;":"⨓","&scsim;":"≿","&scy;":"с","&sdot;":"⋅","&sdotb;":"⊡","&sdote;":"⩦","&seArr;":"⇘","&searhk;":"⤥","&searr;":"↘","&searrow;":"↘","&sect":"§","&sect;":"§","&semi;":";","&seswar;":"⤩","&setminus;":"∖","&setmn;":"∖","&sext;":"✶","&sfr;":"𝔰","&sfrown;":"⌢","&sharp;":"♯","&shchcy;":"щ","&shcy;":"ш","&shortmid;":"∣","&shortparallel;":"∥","&shy":"­","&shy;":"­","&sigma;":"σ","&sigmaf;":"ς","&sigmav;":"ς","&sim;":"∼","&simdot;":"⩪","&sime;":"≃","&simeq;":"≃","&simg;":"⪞","&simgE;":"⪠","&siml;":"⪝","&simlE;":"⪟","&simne;":"≆","&simplus;":"⨤","&simrarr;":"⥲","&slarr;":"←","&smallsetminus;":"∖","&smashp;":"⨳","&smeparsl;":"⧤","&smid;":"∣","&smile;":"⌣","&smt;":"⪪","&smte;":"⪬","&smtes;":"⪬︀","&softcy;":"ь","&sol;":"/","&solb;":"⧄","&solbar;":"⌿","&sopf;":"𝕤","&spades;":"♠","&spadesuit;":"♠","&spar;":"∥","&sqcap;":"⊓","&sqcaps;":"⊓︀","&sqcup;":"⊔","&sqcups;":"⊔︀","&sqsub;":"⊏","&sqsube;":"⊑","&sqsubset;":"⊏","&sqsubseteq;":"⊑","&sqsup;":"⊐","&sqsupe;":"⊒","&sqsupset;":"⊐","&sqsupseteq;":"⊒","&squ;":"□","&square;":"□","&squarf;":"▪","&squf;":"▪","&srarr;":"→","&sscr;":"𝓈","&ssetmn;":"∖","&ssmile;":"⌣","&sstarf;":"⋆","&star;":"☆","&starf;":"★","&straightepsilon;":"ϵ","&straightphi;":"ϕ","&strns;":"¯","&sub;":"⊂","&subE;":"⫅","&subdot;":"⪽","&sube;":"⊆","&subedot;":"⫃","&submult;":"⫁","&subnE;":"⫋","&subne;":"⊊","&subplus;":"⪿","&subrarr;":"⥹","&subset;":"⊂","&subseteq;":"⊆","&subseteqq;":"⫅","&subsetneq;":"⊊","&subsetneqq;":"⫋","&subsim;":"⫇","&subsub;":"⫕","&subsup;":"⫓","&succ;":"≻","&succapprox;":"⪸","&succcurlyeq;":"≽","&succeq;":"⪰","&succnapprox;":"⪺","&succneqq;":"⪶","&succnsim;":"⋩","&succsim;":"≿","&sum;":"∑","&sung;":"♪","&sup1":"¹","&sup1;":"¹","&sup2":"²","&sup2;":"²","&sup3":"³","&sup3;":"³","&sup;":"⊃","&supE;":"⫆","&supdot;":"⪾","&supdsub;":"⫘","&supe;":"⊇","&supedot;":"⫄","&suphsol;":"⟉","&suphsub;":"⫗","&suplarr;":"⥻","&supmult;":"⫂","&supnE;":"⫌","&supne;":"⊋","&supplus;":"⫀","&supset;":"⊃","&supseteq;":"⊇","&supseteqq;":"⫆","&supsetneq;":"⊋","&supsetneqq;":"⫌","&supsim;":"⫈","&supsub;":"⫔","&supsup;":"⫖","&swArr;":"⇙","&swarhk;":"⤦","&swarr;":"↙","&swarrow;":"↙","&swnwar;":"⤪","&szlig":"ß","&szlig;":"ß","&target;":"⌖","&tau;":"τ","&tbrk;":"⎴","&tcaron;":"ť","&tcedil;":"ţ","&tcy;":"т","&tdot;":"⃛","&telrec;":"⌕","&tfr;":"𝔱","&there4;":"∴","&therefore;":"∴","&theta;":"θ","&thetasym;":"ϑ","&thetav;":"ϑ","&thickapprox;":"≈","&thicksim;":"∼","&thinsp;":" ","&thkap;":"≈","&thksim;":"∼","&thorn":"þ","&thorn;":"þ","&tilde;":"˜","&times":"×","&times;":"×","&timesb;":"⊠","&timesbar;":"⨱","&timesd;":"⨰","&tint;":"∭","&toea;":"⤨","&top;":"⊤","&topbot;":"⌶","&topcir;":"⫱","&topf;":"𝕥","&topfork;":"⫚","&tosa;":"⤩","&tprime;":"‴","&trade;":"™","&triangle;":"▵","&triangledown;":"▿","&triangleleft;":"◃","&trianglelefteq;":"⊴","&triangleq;":"≜","&triangleright;":"▹","&trianglerighteq;":"⊵","&tridot;":"◬","&trie;":"≜","&triminus;":"⨺","&triplus;":"⨹","&trisb;":"⧍","&tritime;":"⨻","&trpezium;":"⏢","&tscr;":"𝓉","&tscy;":"ц","&tshcy;":"ћ","&tstrok;":"ŧ","&twixt;":"≬","&twoheadleftarrow;":"↞","&twoheadrightarrow;":"↠","&uArr;":"⇑","&uHar;":"⥣","&uacute":"ú","&uacute;":"ú","&uarr;":"↑","&ubrcy;":"ў","&ubreve;":"ŭ","&ucirc":"û","&ucirc;":"û","&ucy;":"у","&udarr;":"⇅","&udblac;":"ű","&udhar;":"⥮","&ufisht;":"⥾","&ufr;":"𝔲","&ugrave":"ù","&ugrave;":"ù","&uharl;":"↿","&uharr;":"↾","&uhblk;":"▀","&ulcorn;":"⌜","&ulcorner;":"⌜","&ulcrop;":"⌏","&ultri;":"◸","&umacr;":"ū","&uml":"¨","&uml;":"¨","&uogon;":"ų","&uopf;":"𝕦","&uparrow;":"↑","&updownarrow;":"↕","&upharpoonleft;":"↿","&upharpoonright;":"↾","&uplus;":"⊎","&upsi;":"υ","&upsih;":"ϒ","&upsilon;":"υ","&upuparrows;":"⇈","&urcorn;":"⌝","&urcorner;":"⌝","&urcrop;":"⌎","&uring;":"ů","&urtri;":"◹","&uscr;":"𝓊","&utdot;":"⋰","&utilde;":"ũ","&utri;":"▵","&utrif;":"▴","&uuarr;":"⇈","&uuml":"ü","&uuml;":"ü","&uwangle;":"⦧","&vArr;":"⇕","&vBar;":"⫨","&vBarv;":"⫩","&vDash;":"⊨","&vangrt;":"⦜","&varepsilon;":"ϵ","&varkappa;":"ϰ","&varnothing;":"∅","&varphi;":"ϕ","&varpi;":"ϖ","&varpropto;":"∝","&varr;":"↕","&varrho;":"ϱ","&varsigma;":"ς","&varsubsetneq;":"⊊︀","&varsubsetneqq;":"⫋︀","&varsupsetneq;":"⊋︀","&varsupsetneqq;":"⫌︀","&vartheta;":"ϑ","&vartriangleleft;":"⊲","&vartriangleright;":"⊳","&vcy;":"в","&vdash;":"⊢","&vee;":"∨","&veebar;":"⊻","&veeeq;":"≚","&vellip;":"⋮","&verbar;":"|","&vert;":"|","&vfr;":"𝔳","&vltri;":"⊲","&vnsub;":"⊂⃒","&vnsup;":"⊃⃒","&vopf;":"𝕧","&vprop;":"∝","&vrtri;":"⊳","&vscr;":"𝓋","&vsubnE;":"⫋︀","&vsubne;":"⊊︀","&vsupnE;":"⫌︀","&vsupne;":"⊋︀","&vzigzag;":"⦚","&wcirc;":"ŵ","&wedbar;":"⩟","&wedge;":"∧","&wedgeq;":"≙","&weierp;":"℘","&wfr;":"𝔴","&wopf;":"𝕨","&wp;":"℘","&wr;":"≀","&wreath;":"≀","&wscr;":"𝓌","&xcap;":"⋂","&xcirc;":"◯","&xcup;":"⋃","&xdtri;":"▽","&xfr;":"𝔵","&xhArr;":"⟺","&xharr;":"⟷","&xi;":"ξ","&xlArr;":"⟸","&xlarr;":"⟵","&xmap;":"⟼","&xnis;":"⋻","&xodot;":"⨀","&xopf;":"𝕩","&xoplus;":"⨁","&xotime;":"⨂","&xrArr;":"⟹","&xrarr;":"⟶","&xscr;":"𝓍","&xsqcup;":"⨆","&xuplus;":"⨄","&xutri;":"△","&xvee;":"⋁","&xwedge;":"⋀","&yacute":"ý","&yacute;":"ý","&yacy;":"я","&ycirc;":"ŷ","&ycy;":"ы","&yen":"¥","&yen;":"¥","&yfr;":"𝔶","&yicy;":"ї","&yopf;":"𝕪","&yscr;":"𝓎","&yucy;":"ю","&yuml":"ÿ","&yuml;":"ÿ","&zacute;":"ź","&zcaron;":"ž","&zcy;":"з","&zdot;":"ż","&zeetrf;":"ℨ","&zeta;":"ζ","&zfr;":"𝔷","&zhcy;":"ж","&zigrarr;":"⇝","&zopf;":"𝕫","&zscr;":"𝓏","&zwj;":"‍","&zwnj;":"‌"},characters:{Æ:"&AElig;","&":"&amp;",Á:"&Aacute;",Ă:"&Abreve;",Â:"&Acirc;",А:"&Acy;",𝔄:"&Afr;",À:"&Agrave;",Α:"&Alpha;",Ā:"&Amacr;","⩓":"&And;",Ą:"&Aogon;",𝔸:"&Aopf;","⁡":"&af;",Å:"&angst;",𝒜:"&Ascr;","≔":"&coloneq;",Ã:"&Atilde;",Ä:"&Auml;","∖":"&ssetmn;","⫧":"&Barv;","⌆":"&doublebarwedge;",Б:"&Bcy;","∵":"&because;",ℬ:"&bernou;",Β:"&Beta;",𝔅:"&Bfr;",𝔹:"&Bopf;","˘":"&breve;","≎":"&bump;",Ч:"&CHcy;","©":"&copy;",Ć:"&Cacute;","⋒":"&Cap;",ⅅ:"&DD;",ℭ:"&Cfr;",Č:"&Ccaron;",Ç:"&Ccedil;",Ĉ:"&Ccirc;","∰":"&Cconint;",Ċ:"&Cdot;","¸":"&cedil;","·":"&middot;",Χ:"&Chi;","⊙":"&odot;","⊖":"&ominus;","⊕":"&oplus;","⊗":"&otimes;","∲":"&cwconint;","”":"&rdquor;","’":"&rsquor;","∷":"&Proportion;","⩴":"&Colone;","≡":"&equiv;","∯":"&DoubleContourIntegral;","∮":"&oint;",ℂ:"&complexes;","∐":"&coprod;","∳":"&awconint;","⨯":"&Cross;",𝒞:"&Cscr;","⋓":"&Cup;","≍":"&asympeq;","⤑":"&DDotrahd;",Ђ:"&DJcy;",Ѕ:"&DScy;",Џ:"&DZcy;","‡":"&ddagger;","↡":"&Darr;","⫤":"&DoubleLeftTee;",Ď:"&Dcaron;",Д:"&Dcy;","∇":"&nabla;",Δ:"&Delta;",𝔇:"&Dfr;","´":"&acute;","˙":"&dot;","˝":"&dblac;","`":"&grave;","˜":"&tilde;","⋄":"&diamond;",ⅆ:"&dd;",𝔻:"&Dopf;","¨":"&uml;","⃜":"&DotDot;","≐":"&esdot;","⇓":"&dArr;","⇐":"&lArr;","⇔":"&iff;","⟸":"&xlArr;","⟺":"&xhArr;","⟹":"&xrArr;","⇒":"&rArr;","⊨":"&vDash;","⇑":"&uArr;","⇕":"&vArr;","∥":"&spar;","↓":"&downarrow;","⤓":"&DownArrowBar;","⇵":"&duarr;","̑":"&DownBreve;","⥐":"&DownLeftRightVector;","⥞":"&DownLeftTeeVector;","↽":"&lhard;","⥖":"&DownLeftVectorBar;","⥟":"&DownRightTeeVector;","⇁":"&rightharpoondown;","⥗":"&DownRightVectorBar;","⊤":"&top;","↧":"&mapstodown;",𝒟:"&Dscr;",Đ:"&Dstrok;",Ŋ:"&ENG;",Ð:"&ETH;",É:"&Eacute;",Ě:"&Ecaron;",Ê:"&Ecirc;",Э:"&Ecy;",Ė:"&Edot;",𝔈:"&Efr;",È:"&Egrave;","∈":"&isinv;",Ē:"&Emacr;","◻":"&EmptySmallSquare;","▫":"&EmptyVerySmallSquare;",Ę:"&Eogon;",𝔼:"&Eopf;",Ε:"&Epsilon;","⩵":"&Equal;","≂":"&esim;","⇌":"&rlhar;",ℰ:"&expectation;","⩳":"&Esim;",Η:"&Eta;",Ë:"&Euml;","∃":"&exist;",ⅇ:"&exponentiale;",Ф:"&Fcy;",𝔉:"&Ffr;","◼":"&FilledSmallSquare;","▪":"&squf;",𝔽:"&Fopf;","∀":"&forall;",ℱ:"&Fscr;",Ѓ:"&GJcy;",">":"&gt;",Γ:"&Gamma;",Ϝ:"&Gammad;",Ğ:"&Gbreve;",Ģ:"&Gcedil;",Ĝ:"&Gcirc;",Г:"&Gcy;",Ġ:"&Gdot;",𝔊:"&Gfr;","⋙":"&ggg;",𝔾:"&Gopf;","≥":"&geq;","⋛":"&gtreqless;","≧":"&geqq;","⪢":"&GreaterGreater;","≷":"&gtrless;","⩾":"&ges;","≳":"&gtrsim;",𝒢:"&Gscr;","≫":"&gg;",Ъ:"&HARDcy;",ˇ:"&caron;","^":"&Hat;",Ĥ:"&Hcirc;",ℌ:"&Poincareplane;",ℋ:"&hamilt;",ℍ:"&quaternions;","─":"&boxh;",Ħ:"&Hstrok;","≏":"&bumpeq;",Е:"&IEcy;",Ĳ:"&IJlig;",Ё:"&IOcy;",Í:"&Iacute;",Î:"&Icirc;",И:"&Icy;",İ:"&Idot;",ℑ:"&imagpart;",Ì:"&Igrave;",Ī:"&Imacr;",ⅈ:"&ii;","∬":"&Int;","∫":"&int;","⋂":"&xcap;","⁣":"&ic;","⁢":"&it;",Į:"&Iogon;",𝕀:"&Iopf;",Ι:"&Iota;",ℐ:"&imagline;",Ĩ:"&Itilde;",І:"&Iukcy;",Ï:"&Iuml;",Ĵ:"&Jcirc;",Й:"&Jcy;",𝔍:"&Jfr;",𝕁:"&Jopf;",𝒥:"&Jscr;",Ј:"&Jsercy;",Є:"&Jukcy;",Х:"&KHcy;",Ќ:"&KJcy;",Κ:"&Kappa;",Ķ:"&Kcedil;",К:"&Kcy;",𝔎:"&Kfr;",𝕂:"&Kopf;",𝒦:"&Kscr;",Љ:"&LJcy;","<":"&lt;",Ĺ:"&Lacute;",Λ:"&Lambda;","⟪":"&Lang;",ℒ:"&lagran;","↞":"&twoheadleftarrow;",Ľ:"&Lcaron;",Ļ:"&Lcedil;",Л:"&Lcy;","⟨":"&langle;","←":"&slarr;","⇤":"&larrb;","⇆":"&lrarr;","⌈":"&lceil;","⟦":"&lobrk;","⥡":"&LeftDownTeeVector;","⇃":"&downharpoonleft;","⥙":"&LeftDownVectorBar;","⌊":"&lfloor;","↔":"&leftrightarrow;","⥎":"&LeftRightVector;","⊣":"&dashv;","↤":"&mapstoleft;","⥚":"&LeftTeeVector;","⊲":"&vltri;","⧏":"&LeftTriangleBar;","⊴":"&trianglelefteq;","⥑":"&LeftUpDownVector;","⥠":"&LeftUpTeeVector;","↿":"&upharpoonleft;","⥘":"&LeftUpVectorBar;","↼":"&lharu;","⥒":"&LeftVectorBar;","⋚":"&lesseqgtr;","≦":"&leqq;","≶":"&lg;","⪡":"&LessLess;","⩽":"&les;","≲":"&lsim;",𝔏:"&Lfr;","⋘":"&Ll;","⇚":"&lAarr;",Ŀ:"&Lmidot;","⟵":"&xlarr;","⟷":"&xharr;","⟶":"&xrarr;",𝕃:"&Lopf;","↙":"&swarrow;","↘":"&searrow;","↰":"&lsh;",Ł:"&Lstrok;","≪":"&ll;","⤅":"&Map;",М:"&Mcy;"," ":"&MediumSpace;",ℳ:"&phmmat;",𝔐:"&Mfr;","∓":"&mp;",𝕄:"&Mopf;",Μ:"&Mu;",Њ:"&NJcy;",Ń:"&Nacute;",Ň:"&Ncaron;",Ņ:"&Ncedil;",Н:"&Ncy;","​":"&ZeroWidthSpace;","\n":"&NewLine;",𝔑:"&Nfr;","⁠":"&NoBreak;"," ":"&nbsp;",ℕ:"&naturals;","⫬":"&Not;","≢":"&nequiv;","≭":"&NotCupCap;","∦":"&nspar;","∉":"&notinva;","≠":"&ne;","≂̸":"&nesim;","∄":"&nexists;","≯":"&ngtr;","≱":"&ngeq;","≧̸":"&ngeqq;","≫̸":"&nGtv;","≹":"&ntgl;","⩾̸":"&nges;","≵":"&ngsim;","≎̸":"&nbump;","≏̸":"&nbumpe;","⋪":"&ntriangleleft;","⧏̸":"&NotLeftTriangleBar;","⋬":"&ntrianglelefteq;","≮":"&nlt;","≰":"&nleq;","≸":"&ntlg;","≪̸":"&nLtv;","⩽̸":"&nles;","≴":"&nlsim;","⪢̸":"&NotNestedGreaterGreater;","⪡̸":"&NotNestedLessLess;","⊀":"&nprec;","⪯̸":"&npreceq;","⋠":"&nprcue;","∌":"&notniva;","⋫":"&ntriangleright;","⧐̸":"&NotRightTriangleBar;","⋭":"&ntrianglerighteq;","⊏̸":"&NotSquareSubset;","⋢":"&nsqsube;","⊐̸":"&NotSquareSuperset;","⋣":"&nsqsupe;","⊂⃒":"&vnsub;","⊈":"&nsubseteq;","⊁":"&nsucc;","⪰̸":"&nsucceq;","⋡":"&nsccue;","≿̸":"&NotSucceedsTilde;","⊃⃒":"&vnsup;","⊉":"&nsupseteq;","≁":"&nsim;","≄":"&nsimeq;","≇":"&ncong;","≉":"&napprox;","∤":"&nsmid;",𝒩:"&Nscr;",Ñ:"&Ntilde;",Ν:"&Nu;",Œ:"&OElig;",Ó:"&Oacute;",Ô:"&Ocirc;",О:"&Ocy;",Ő:"&Odblac;",𝔒:"&Ofr;",Ò:"&Ograve;",Ō:"&Omacr;",Ω:"&ohm;",Ο:"&Omicron;",𝕆:"&Oopf;","“":"&ldquo;","‘":"&lsquo;","⩔":"&Or;",𝒪:"&Oscr;",Ø:"&Oslash;",Õ:"&Otilde;","⨷":"&Otimes;",Ö:"&Ouml;","‾":"&oline;","⏞":"&OverBrace;","⎴":"&tbrk;","⏜":"&OverParenthesis;","∂":"&part;",П:"&Pcy;",𝔓:"&Pfr;",Φ:"&Phi;",Π:"&Pi;","±":"&pm;",ℙ:"&primes;","⪻":"&Pr;","≺":"&prec;","⪯":"&preceq;","≼":"&preccurlyeq;","≾":"&prsim;","″":"&Prime;","∏":"&prod;","∝":"&vprop;",𝒫:"&Pscr;",Ψ:"&Psi;",'"':"&quot;",𝔔:"&Qfr;",ℚ:"&rationals;",𝒬:"&Qscr;","⤐":"&drbkarow;","®":"&reg;",Ŕ:"&Racute;","⟫":"&Rang;","↠":"&twoheadrightarrow;","⤖":"&Rarrtl;",Ř:"&Rcaron;",Ŗ:"&Rcedil;",Р:"&Rcy;",ℜ:"&realpart;","∋":"&niv;","⇋":"&lrhar;","⥯":"&duhar;",Ρ:"&Rho;","⟩":"&rangle;","→":"&srarr;","⇥":"&rarrb;","⇄":"&rlarr;","⌉":"&rceil;","⟧":"&robrk;","⥝":"&RightDownTeeVector;","⇂":"&downharpoonright;","⥕":"&RightDownVectorBar;","⌋":"&rfloor;","⊢":"&vdash;","↦":"&mapsto;","⥛":"&RightTeeVector;","⊳":"&vrtri;","⧐":"&RightTriangleBar;","⊵":"&trianglerighteq;","⥏":"&RightUpDownVector;","⥜":"&RightUpTeeVector;","↾":"&upharpoonright;","⥔":"&RightUpVectorBar;","⇀":"&rightharpoonup;","⥓":"&RightVectorBar;",ℝ:"&reals;","⥰":"&RoundImplies;","⇛":"&rAarr;",ℛ:"&realine;","↱":"&rsh;","⧴":"&RuleDelayed;",Щ:"&SHCHcy;",Ш:"&SHcy;",Ь:"&SOFTcy;",Ś:"&Sacute;","⪼":"&Sc;",Š:"&Scaron;",Ş:"&Scedil;",Ŝ:"&Scirc;",С:"&Scy;",𝔖:"&Sfr;","↑":"&uparrow;",Σ:"&Sigma;","∘":"&compfn;",𝕊:"&Sopf;","√":"&radic;","□":"&square;","⊓":"&sqcap;","⊏":"&sqsubset;","⊑":"&sqsubseteq;","⊐":"&sqsupset;","⊒":"&sqsupseteq;","⊔":"&sqcup;",𝒮:"&Sscr;","⋆":"&sstarf;","⋐":"&Subset;","⊆":"&subseteq;","≻":"&succ;","⪰":"&succeq;","≽":"&succcurlyeq;","≿":"&succsim;","∑":"&sum;","⋑":"&Supset;","⊃":"&supset;","⊇":"&supseteq;",Þ:"&THORN;","™":"&trade;",Ћ:"&TSHcy;",Ц:"&TScy;","\t":"&Tab;",Τ:"&Tau;",Ť:"&Tcaron;",Ţ:"&Tcedil;",Т:"&Tcy;",𝔗:"&Tfr;","∴":"&therefore;",Θ:"&Theta;","  ":"&ThickSpace;"," ":"&thinsp;","∼":"&thksim;","≃":"&simeq;","≅":"&cong;","≈":"&thkap;",𝕋:"&Topf;","⃛":"&tdot;",𝒯:"&Tscr;",Ŧ:"&Tstrok;",Ú:"&Uacute;","↟":"&Uarr;","⥉":"&Uarrocir;",Ў:"&Ubrcy;",Ŭ:"&Ubreve;",Û:"&Ucirc;",У:"&Ucy;",Ű:"&Udblac;",𝔘:"&Ufr;",Ù:"&Ugrave;",Ū:"&Umacr;",_:"&lowbar;","⏟":"&UnderBrace;","⎵":"&bbrk;","⏝":"&UnderParenthesis;","⋃":"&xcup;","⊎":"&uplus;",Ų:"&Uogon;",𝕌:"&Uopf;","⤒":"&UpArrowBar;","⇅":"&udarr;","↕":"&varr;","⥮":"&udhar;","⊥":"&perp;","↥":"&mapstoup;","↖":"&nwarrow;","↗":"&nearrow;",ϒ:"&upsih;",Υ:"&Upsilon;",Ů:"&Uring;",𝒰:"&Uscr;",Ũ:"&Utilde;",Ü:"&Uuml;","⊫":"&VDash;","⫫":"&Vbar;",В:"&Vcy;","⊩":"&Vdash;","⫦":"&Vdashl;","⋁":"&xvee;","‖":"&Vert;","∣":"&smid;","|":"&vert;","❘":"&VerticalSeparator;","≀":"&wreath;"," ":"&hairsp;",𝔙:"&Vfr;",𝕍:"&Vopf;",𝒱:"&Vscr;","⊪":"&Vvdash;",Ŵ:"&Wcirc;","⋀":"&xwedge;",𝔚:"&Wfr;",𝕎:"&Wopf;",𝒲:"&Wscr;",𝔛:"&Xfr;",Ξ:"&Xi;",𝕏:"&Xopf;",𝒳:"&Xscr;",Я:"&YAcy;",Ї:"&YIcy;",Ю:"&YUcy;",Ý:"&Yacute;",Ŷ:"&Ycirc;",Ы:"&Ycy;",𝔜:"&Yfr;",𝕐:"&Yopf;",𝒴:"&Yscr;",Ÿ:"&Yuml;",Ж:"&ZHcy;",Ź:"&Zacute;",Ž:"&Zcaron;",З:"&Zcy;",Ż:"&Zdot;",Ζ:"&Zeta;",ℨ:"&zeetrf;",ℤ:"&integers;",𝒵:"&Zscr;",á:"&aacute;",ă:"&abreve;","∾":"&mstpos;","∾̳":"&acE;","∿":"&acd;",â:"&acirc;",а:"&acy;",æ:"&aelig;",𝔞:"&afr;",à:"&agrave;",ℵ:"&aleph;",α:"&alpha;",ā:"&amacr;","⨿":"&amalg;","∧":"&wedge;","⩕":"&andand;","⩜":"&andd;","⩘":"&andslope;","⩚":"&andv;","∠":"&angle;","⦤":"&ange;","∡":"&measuredangle;","⦨":"&angmsdaa;","⦩":"&angmsdab;","⦪":"&angmsdac;","⦫":"&angmsdad;","⦬":"&angmsdae;","⦭":"&angmsdaf;","⦮":"&angmsdag;","⦯":"&angmsdah;","∟":"&angrt;","⊾":"&angrtvb;","⦝":"&angrtvbd;","∢":"&angsph;","⍼":"&angzarr;",ą:"&aogon;",𝕒:"&aopf;","⩰":"&apE;","⩯":"&apacir;","≊":"&approxeq;","≋":"&apid;","'":"&apos;",å:"&aring;",𝒶:"&ascr;","*":"&midast;",ã:"&atilde;",ä:"&auml;","⨑":"&awint;","⫭":"&bNot;","≌":"&bcong;","϶":"&bepsi;","‵":"&bprime;","∽":"&bsim;","⋍":"&bsime;","⊽":"&barvee;","⌅":"&barwedge;","⎶":"&bbrktbrk;",б:"&bcy;","„":"&ldquor;","⦰":"&bemptyv;",β:"&beta;",ℶ:"&beth;","≬":"&twixt;",𝔟:"&bfr;","◯":"&xcirc;","⨀":"&xodot;","⨁":"&xoplus;","⨂":"&xotime;","⨆":"&xsqcup;","★":"&starf;","▽":"&xdtri;","△":"&xutri;","⨄":"&xuplus;","⤍":"&rbarr;","⧫":"&lozf;","▴":"&utrif;","▾":"&dtrif;","◂":"&ltrif;","▸":"&rtrif;","␣":"&blank;","▒":"&blk12;","░":"&blk14;","▓":"&blk34;","█":"&block;","=⃥":"&bne;","≡⃥":"&bnequiv;","⌐":"&bnot;",𝕓:"&bopf;","⋈":"&bowtie;","╗":"&boxDL;","╔":"&boxDR;","╖":"&boxDl;","╓":"&boxDr;","═":"&boxH;","╦":"&boxHD;","╩":"&boxHU;","╤":"&boxHd;","╧":"&boxHu;","╝":"&boxUL;","╚":"&boxUR;","╜":"&boxUl;","╙":"&boxUr;","║":"&boxV;","╬":"&boxVH;","╣":"&boxVL;","╠":"&boxVR;","╫":"&boxVh;","╢":"&boxVl;","╟":"&boxVr;","⧉":"&boxbox;","╕":"&boxdL;","╒":"&boxdR;","┐":"&boxdl;","┌":"&boxdr;","╥":"&boxhD;","╨":"&boxhU;","┬":"&boxhd;","┴":"&boxhu;","⊟":"&minusb;","⊞":"&plusb;","⊠":"&timesb;","╛":"&boxuL;","╘":"&boxuR;","┘":"&boxul;","└":"&boxur;","│":"&boxv;","╪":"&boxvH;","╡":"&boxvL;","╞":"&boxvR;","┼":"&boxvh;","┤":"&boxvl;","├":"&boxvr;","¦":"&brvbar;",𝒷:"&bscr;","⁏":"&bsemi;","\\":"&bsol;","⧅":"&bsolb;","⟈":"&bsolhsub;","•":"&bullet;","⪮":"&bumpE;",ć:"&cacute;","∩":"&cap;","⩄":"&capand;","⩉":"&capbrcup;","⩋":"&capcap;","⩇":"&capcup;","⩀":"&capdot;","∩︀":"&caps;","⁁":"&caret;","⩍":"&ccaps;",č:"&ccaron;",ç:"&ccedil;",ĉ:"&ccirc;","⩌":"&ccups;","⩐":"&ccupssm;",ċ:"&cdot;","⦲":"&cemptyv;","¢":"&cent;",𝔠:"&cfr;",ч:"&chcy;","✓":"&checkmark;",χ:"&chi;","○":"&cir;","⧃":"&cirE;",ˆ:"&circ;","≗":"&cire;","↺":"&olarr;","↻":"&orarr;","Ⓢ":"&oS;","⊛":"&oast;","⊚":"&ocir;","⊝":"&odash;","⨐":"&cirfnint;","⫯":"&cirmid;","⧂":"&cirscir;","♣":"&clubsuit;",":":"&colon;",",":"&comma;","@":"&commat;","∁":"&complement;","⩭":"&congdot;",𝕔:"&copf;","℗":"&copysr;","↵":"&crarr;","✗":"&cross;",𝒸:"&cscr;","⫏":"&csub;","⫑":"&csube;","⫐":"&csup;","⫒":"&csupe;","⋯":"&ctdot;","⤸":"&cudarrl;","⤵":"&cudarrr;","⋞":"&curlyeqprec;","⋟":"&curlyeqsucc;","↶":"&curvearrowleft;","⤽":"&cularrp;","∪":"&cup;","⩈":"&cupbrcap;","⩆":"&cupcap;","⩊":"&cupcup;","⊍":"&cupdot;","⩅":"&cupor;","∪︀":"&cups;","↷":"&curvearrowright;","⤼":"&curarrm;","⋎":"&cuvee;","⋏":"&cuwed;","¤":"&curren;","∱":"&cwint;","⌭":"&cylcty;","⥥":"&dHar;","†":"&dagger;",ℸ:"&daleth;","‐":"&hyphen;","⤏":"&rBarr;",ď:"&dcaron;",д:"&dcy;","⇊":"&downdownarrows;","⩷":"&eDDot;","°":"&deg;",δ:"&delta;","⦱":"&demptyv;","⥿":"&dfisht;",𝔡:"&dfr;","♦":"&diams;",ϝ:"&gammad;","⋲":"&disin;","÷":"&divide;","⋇":"&divonx;",ђ:"&djcy;","⌞":"&llcorner;","⌍":"&dlcrop;",$:"&dollar;",𝕕:"&dopf;","≑":"&eDot;","∸":"&minusd;","∔":"&plusdo;","⊡":"&sdotb;","⌟":"&lrcorner;","⌌":"&drcrop;",𝒹:"&dscr;",ѕ:"&dscy;","⧶":"&dsol;",đ:"&dstrok;","⋱":"&dtdot;","▿":"&triangledown;","⦦":"&dwangle;",џ:"&dzcy;","⟿":"&dzigrarr;",é:"&eacute;","⩮":"&easter;",ě:"&ecaron;","≖":"&eqcirc;",ê:"&ecirc;","≕":"&eqcolon;",э:"&ecy;",ė:"&edot;","≒":"&fallingdotseq;",𝔢:"&efr;","⪚":"&eg;",è:"&egrave;","⪖":"&eqslantgtr;","⪘":"&egsdot;","⪙":"&el;","⏧":"&elinters;",ℓ:"&ell;","⪕":"&eqslantless;","⪗":"&elsdot;",ē:"&emacr;","∅":"&varnothing;"," ":"&emsp13;"," ":"&emsp14;"," ":"&emsp;",ŋ:"&eng;"," ":"&ensp;",ę:"&eogon;",𝕖:"&eopf;","⋕":"&epar;","⧣":"&eparsl;","⩱":"&eplus;",ε:"&epsilon;",ϵ:"&varepsilon;","=":"&equals;","≟":"&questeq;","⩸":"&equivDD;","⧥":"&eqvparsl;","≓":"&risingdotseq;","⥱":"&erarr;",ℯ:"&escr;",η:"&eta;",ð:"&eth;",ë:"&euml;","€":"&euro;","!":"&excl;",ф:"&fcy;","♀":"&female;",ﬃ:"&ffilig;",ﬀ:"&fflig;",ﬄ:"&ffllig;",𝔣:"&ffr;",ﬁ:"&filig;",fj:"&fjlig;","♭":"&flat;",ﬂ:"&fllig;","▱":"&fltns;",ƒ:"&fnof;",𝕗:"&fopf;","⋔":"&pitchfork;","⫙":"&forkv;","⨍":"&fpartint;","½":"&half;","⅓":"&frac13;","¼":"&frac14;","⅕":"&frac15;","⅙":"&frac16;","⅛":"&frac18;","⅔":"&frac23;","⅖":"&frac25;","¾":"&frac34;","⅗":"&frac35;","⅜":"&frac38;","⅘":"&frac45;","⅚":"&frac56;","⅝":"&frac58;","⅞":"&frac78;","⁄":"&frasl;","⌢":"&sfrown;",𝒻:"&fscr;","⪌":"&gtreqqless;",ǵ:"&gacute;",γ:"&gamma;","⪆":"&gtrapprox;",ğ:"&gbreve;",ĝ:"&gcirc;",г:"&gcy;",ġ:"&gdot;","⪩":"&gescc;","⪀":"&gesdot;","⪂":"&gesdoto;","⪄":"&gesdotol;","⋛︀":"&gesl;","⪔":"&gesles;",𝔤:"&gfr;",ℷ:"&gimel;",ѓ:"&gjcy;","⪒":"&glE;","⪥":"&gla;","⪤":"&glj;","≩":"&gneqq;","⪊":"&gnapprox;","⪈":"&gneq;","⋧":"&gnsim;",𝕘:"&gopf;",ℊ:"&gscr;","⪎":"&gsime;","⪐":"&gsiml;","⪧":"&gtcc;","⩺":"&gtcir;","⋗":"&gtrdot;","⦕":"&gtlPar;","⩼":"&gtquest;","⥸":"&gtrarr;","≩︀":"&gvnE;",ъ:"&hardcy;","⥈":"&harrcir;","↭":"&leftrightsquigarrow;",ℏ:"&plankv;",ĥ:"&hcirc;","♥":"&heartsuit;","…":"&mldr;","⊹":"&hercon;",𝔥:"&hfr;","⤥":"&searhk;","⤦":"&swarhk;","⇿":"&hoarr;","∻":"&homtht;","↩":"&larrhk;","↪":"&rarrhk;",𝕙:"&hopf;","―":"&horbar;",𝒽:"&hscr;",ħ:"&hstrok;","⁃":"&hybull;",í:"&iacute;",î:"&icirc;",и:"&icy;",е:"&iecy;","¡":"&iexcl;",𝔦:"&ifr;",ì:"&igrave;","⨌":"&qint;","∭":"&tint;","⧜":"&iinfin;","℩":"&iiota;",ĳ:"&ijlig;",ī:"&imacr;",ı:"&inodot;","⊷":"&imof;",Ƶ:"&imped;","℅":"&incare;","∞":"&infin;","⧝":"&infintie;","⊺":"&intercal;","⨗":"&intlarhk;","⨼":"&iprod;",ё:"&iocy;",į:"&iogon;",𝕚:"&iopf;",ι:"&iota;","¿":"&iquest;",𝒾:"&iscr;","⋹":"&isinE;","⋵":"&isindot;","⋴":"&isins;","⋳":"&isinsv;",ĩ:"&itilde;",і:"&iukcy;",ï:"&iuml;",ĵ:"&jcirc;",й:"&jcy;",𝔧:"&jfr;",ȷ:"&jmath;",𝕛:"&jopf;",𝒿:"&jscr;",ј:"&jsercy;",є:"&jukcy;",κ:"&kappa;",ϰ:"&varkappa;",ķ:"&kcedil;",к:"&kcy;",𝔨:"&kfr;",ĸ:"&kgreen;",х:"&khcy;",ќ:"&kjcy;",𝕜:"&kopf;",𝓀:"&kscr;","⤛":"&lAtail;","⤎":"&lBarr;","⪋":"&lesseqqgtr;","⥢":"&lHar;",ĺ:"&lacute;","⦴":"&laemptyv;",λ:"&lambda;","⦑":"&langd;","⪅":"&lessapprox;","«":"&laquo;","⤟":"&larrbfs;","⤝":"&larrfs;","↫":"&looparrowleft;","⤹":"&larrpl;","⥳":"&larrsim;","↢":"&leftarrowtail;","⪫":"&lat;","⤙":"&latail;","⪭":"&late;","⪭︀":"&lates;","⤌":"&lbarr;","❲":"&lbbrk;","{":"&lcub;","[":"&lsqb;","⦋":"&lbrke;","⦏":"&lbrksld;","⦍":"&lbrkslu;",ľ:"&lcaron;",ļ:"&lcedil;",л:"&lcy;","⤶":"&ldca;","⥧":"&ldrdhar;","⥋":"&ldrushar;","↲":"&ldsh;","≤":"&leq;","⇇":"&llarr;","⋋":"&lthree;","⪨":"&lescc;","⩿":"&lesdot;","⪁":"&lesdoto;","⪃":"&lesdotor;","⋚︀":"&lesg;","⪓":"&lesges;","⋖":"&ltdot;","⥼":"&lfisht;",𝔩:"&lfr;","⪑":"&lgE;","⥪":"&lharul;","▄":"&lhblk;",љ:"&ljcy;","⥫":"&llhard;","◺":"&lltri;",ŀ:"&lmidot;","⎰":"&lmoustache;","≨":"&lneqq;","⪉":"&lnapprox;","⪇":"&lneq;","⋦":"&lnsim;","⟬":"&loang;","⇽":"&loarr;","⟼":"&xmap;","↬":"&rarrlp;","⦅":"&lopar;",𝕝:"&lopf;","⨭":"&loplus;","⨴":"&lotimes;","∗":"&lowast;","◊":"&lozenge;","(":"&lpar;","⦓":"&lparlt;","⥭":"&lrhard;","‎":"&lrm;","⊿":"&lrtri;","‹":"&lsaquo;",𝓁:"&lscr;","⪍":"&lsime;","⪏":"&lsimg;","‚":"&sbquo;",ł:"&lstrok;","⪦":"&ltcc;","⩹":"&ltcir;","⋉":"&ltimes;","⥶":"&ltlarr;","⩻":"&ltquest;","⦖":"&ltrPar;","◃":"&triangleleft;","⥊":"&lurdshar;","⥦":"&luruhar;","≨︀":"&lvnE;","∺":"&mDDot;","¯":"&strns;","♂":"&male;","✠":"&maltese;","▮":"&marker;","⨩":"&mcomma;",м:"&mcy;","—":"&mdash;",𝔪:"&mfr;","℧":"&mho;",µ:"&micro;","⫰":"&midcir;","−":"&minus;","⨪":"&minusdu;","⫛":"&mlcp;","⊧":"&models;",𝕞:"&mopf;",𝓂:"&mscr;",μ:"&mu;","⊸":"&mumap;","⋙̸":"&nGg;","≫⃒":"&nGt;","⇍":"&nlArr;","⇎":"&nhArr;","⋘̸":"&nLl;","≪⃒":"&nLt;","⇏":"&nrArr;","⊯":"&nVDash;","⊮":"&nVdash;",ń:"&nacute;","∠⃒":"&nang;","⩰̸":"&napE;","≋̸":"&napid;",ŉ:"&napos;","♮":"&natural;","⩃":"&ncap;",ň:"&ncaron;",ņ:"&ncedil;","⩭̸":"&ncongdot;","⩂":"&ncup;",н:"&ncy;","–":"&ndash;","⇗":"&neArr;","⤤":"&nearhk;","≐̸":"&nedot;","⤨":"&toea;",𝔫:"&nfr;","↮":"&nleftrightarrow;","⫲":"&nhpar;","⋼":"&nis;","⋺":"&nisd;",њ:"&njcy;","≦̸":"&nleqq;","↚":"&nleftarrow;","‥":"&nldr;",𝕟:"&nopf;","¬":"&not;","⋹̸":"&notinE;","⋵̸":"&notindot;","⋷":"&notinvb;","⋶":"&notinvc;","⋾":"&notnivb;","⋽":"&notnivc;","⫽⃥":"&nparsl;","∂̸":"&npart;","⨔":"&npolint;","↛":"&nrightarrow;","⤳̸":"&nrarrc;","↝̸":"&nrarrw;",𝓃:"&nscr;","⊄":"&nsub;","⫅̸":"&nsubseteqq;","⊅":"&nsup;","⫆̸":"&nsupseteqq;",ñ:"&ntilde;",ν:"&nu;","#":"&num;","№":"&numero;"," ":"&numsp;","⊭":"&nvDash;","⤄":"&nvHarr;","≍⃒":"&nvap;","⊬":"&nvdash;","≥⃒":"&nvge;",">⃒":"&nvgt;","⧞":"&nvinfin;","⤂":"&nvlArr;","≤⃒":"&nvle;","<⃒":"&nvlt;","⊴⃒":"&nvltrie;","⤃":"&nvrArr;","⊵⃒":"&nvrtrie;","∼⃒":"&nvsim;","⇖":"&nwArr;","⤣":"&nwarhk;","⤧":"&nwnear;",ó:"&oacute;",ô:"&ocirc;",о:"&ocy;",ő:"&odblac;","⨸":"&odiv;","⦼":"&odsold;",œ:"&oelig;","⦿":"&ofcir;",𝔬:"&ofr;","˛":"&ogon;",ò:"&ograve;","⧁":"&ogt;","⦵":"&ohbar;","⦾":"&olcir;","⦻":"&olcross;","⧀":"&olt;",ō:"&omacr;",ω:"&omega;",ο:"&omicron;","⦶":"&omid;",𝕠:"&oopf;","⦷":"&opar;","⦹":"&operp;","∨":"&vee;","⩝":"&ord;",ℴ:"&oscr;",ª:"&ordf;",º:"&ordm;","⊶":"&origof;","⩖":"&oror;","⩗":"&orslope;","⩛":"&orv;",ø:"&oslash;","⊘":"&osol;",õ:"&otilde;","⨶":"&otimesas;",ö:"&ouml;","⌽":"&ovbar;","¶":"&para;","⫳":"&parsim;","⫽":"&parsl;",п:"&pcy;","%":"&percnt;",".":"&period;","‰":"&permil;","‱":"&pertenk;",𝔭:"&pfr;",φ:"&phi;",ϕ:"&varphi;","☎":"&phone;",π:"&pi;",ϖ:"&varpi;",ℎ:"&planckh;","+":"&plus;","⨣":"&plusacir;","⨢":"&pluscir;","⨥":"&plusdu;","⩲":"&pluse;","⨦":"&plussim;","⨧":"&plustwo;","⨕":"&pointint;",𝕡:"&popf;","£":"&pound;","⪳":"&prE;","⪷":"&precapprox;","⪹":"&prnap;","⪵":"&prnE;","⋨":"&prnsim;","′":"&prime;","⌮":"&profalar;","⌒":"&profline;","⌓":"&profsurf;","⊰":"&prurel;",𝓅:"&pscr;",ψ:"&psi;"," ":"&puncsp;",𝔮:"&qfr;",𝕢:"&qopf;","⁗":"&qprime;",𝓆:"&qscr;","⨖":"&quatint;","?":"&quest;","⤜":"&rAtail;","⥤":"&rHar;","∽̱":"&race;",ŕ:"&racute;","⦳":"&raemptyv;","⦒":"&rangd;","⦥":"&range;","»":"&raquo;","⥵":"&rarrap;","⤠":"&rarrbfs;","⤳":"&rarrc;","⤞":"&rarrfs;","⥅":"&rarrpl;","⥴":"&rarrsim;","↣":"&rightarrowtail;","↝":"&rightsquigarrow;","⤚":"&ratail;","∶":"&ratio;","❳":"&rbbrk;","}":"&rcub;","]":"&rsqb;","⦌":"&rbrke;","⦎":"&rbrksld;","⦐":"&rbrkslu;",ř:"&rcaron;",ŗ:"&rcedil;",р:"&rcy;","⤷":"&rdca;","⥩":"&rdldhar;","↳":"&rdsh;","▭":"&rect;","⥽":"&rfisht;",𝔯:"&rfr;","⥬":"&rharul;",ρ:"&rho;",ϱ:"&varrho;","⇉":"&rrarr;","⋌":"&rthree;","˚":"&ring;","‏":"&rlm;","⎱":"&rmoustache;","⫮":"&rnmid;","⟭":"&roang;","⇾":"&roarr;","⦆":"&ropar;",𝕣:"&ropf;","⨮":"&roplus;","⨵":"&rotimes;",")":"&rpar;","⦔":"&rpargt;","⨒":"&rppolint;","›":"&rsaquo;",𝓇:"&rscr;","⋊":"&rtimes;","▹":"&triangleright;","⧎":"&rtriltri;","⥨":"&ruluhar;","℞":"&rx;",ś:"&sacute;","⪴":"&scE;","⪸":"&succapprox;",š:"&scaron;",ş:"&scedil;",ŝ:"&scirc;","⪶":"&succneqq;","⪺":"&succnapprox;","⋩":"&succnsim;","⨓":"&scpolint;",с:"&scy;","⋅":"&sdot;","⩦":"&sdote;","⇘":"&seArr;","§":"&sect;",";":"&semi;","⤩":"&tosa;","✶":"&sext;",𝔰:"&sfr;","♯":"&sharp;",щ:"&shchcy;",ш:"&shcy;","­":"&shy;",σ:"&sigma;",ς:"&varsigma;","⩪":"&simdot;","⪞":"&simg;","⪠":"&simgE;","⪝":"&siml;","⪟":"&simlE;","≆":"&simne;","⨤":"&simplus;","⥲":"&simrarr;","⨳":"&smashp;","⧤":"&smeparsl;","⌣":"&ssmile;","⪪":"&smt;","⪬":"&smte;","⪬︀":"&smtes;",ь:"&softcy;","/":"&sol;","⧄":"&solb;","⌿":"&solbar;",𝕤:"&sopf;","♠":"&spadesuit;","⊓︀":"&sqcaps;","⊔︀":"&sqcups;",𝓈:"&sscr;","☆":"&star;","⊂":"&subset;","⫅":"&subseteqq;","⪽":"&subdot;","⫃":"&subedot;","⫁":"&submult;","⫋":"&subsetneqq;","⊊":"&subsetneq;","⪿":"&subplus;","⥹":"&subrarr;","⫇":"&subsim;","⫕":"&subsub;","⫓":"&subsup;","♪":"&sung;","¹":"&sup1;","²":"&sup2;","³":"&sup3;","⫆":"&supseteqq;","⪾":"&supdot;","⫘":"&supdsub;","⫄":"&supedot;","⟉":"&suphsol;","⫗":"&suphsub;","⥻":"&suplarr;","⫂":"&supmult;","⫌":"&supsetneqq;","⊋":"&supsetneq;","⫀":"&supplus;","⫈":"&supsim;","⫔":"&supsub;","⫖":"&supsup;","⇙":"&swArr;","⤪":"&swnwar;",ß:"&szlig;","⌖":"&target;",τ:"&tau;",ť:"&tcaron;",ţ:"&tcedil;",т:"&tcy;","⌕":"&telrec;",𝔱:"&tfr;",θ:"&theta;",ϑ:"&vartheta;",þ:"&thorn;","×":"&times;","⨱":"&timesbar;","⨰":"&timesd;","⌶":"&topbot;","⫱":"&topcir;",𝕥:"&topf;","⫚":"&topfork;","‴":"&tprime;","▵":"&utri;","≜":"&trie;","◬":"&tridot;","⨺":"&triminus;","⨹":"&triplus;","⧍":"&trisb;","⨻":"&tritime;","⏢":"&trpezium;",𝓉:"&tscr;",ц:"&tscy;",ћ:"&tshcy;",ŧ:"&tstrok;","⥣":"&uHar;",ú:"&uacute;",ў:"&ubrcy;",ŭ:"&ubreve;",û:"&ucirc;",у:"&ucy;",ű:"&udblac;","⥾":"&ufisht;",𝔲:"&ufr;",ù:"&ugrave;","▀":"&uhblk;","⌜":"&ulcorner;","⌏":"&ulcrop;","◸":"&ultri;",ū:"&umacr;",ų:"&uogon;",𝕦:"&uopf;",υ:"&upsilon;","⇈":"&uuarr;","⌝":"&urcorner;","⌎":"&urcrop;",ů:"&uring;","◹":"&urtri;",𝓊:"&uscr;","⋰":"&utdot;",ũ:"&utilde;",ü:"&uuml;","⦧":"&uwangle;","⫨":"&vBar;","⫩":"&vBarv;","⦜":"&vangrt;","⊊︀":"&vsubne;","⫋︀":"&vsubnE;","⊋︀":"&vsupne;","⫌︀":"&vsupnE;",в:"&vcy;","⊻":"&veebar;","≚":"&veeeq;","⋮":"&vellip;",𝔳:"&vfr;",𝕧:"&vopf;",𝓋:"&vscr;","⦚":"&vzigzag;",ŵ:"&wcirc;","⩟":"&wedbar;","≙":"&wedgeq;",℘:"&wp;",𝔴:"&wfr;",𝕨:"&wopf;",𝓌:"&wscr;",𝔵:"&xfr;",ξ:"&xi;","⋻":"&xnis;",𝕩:"&xopf;",𝓍:"&xscr;",ý:"&yacute;",я:"&yacy;",ŷ:"&ycirc;",ы:"&ycy;","¥":"&yen;",𝔶:"&yfr;",ї:"&yicy;",𝕪:"&yopf;",𝓎:"&yscr;",ю:"&yucy;",ÿ:"&yuml;",ź:"&zacute;",ž:"&zcaron;",з:"&zcy;",ż:"&zdot;",ζ:"&zeta;",𝔷:"&zfr;",ж:"&zhcy;","⇝":"&zigrarr;",𝕫:"&zopf;",𝓏:"&zscr;","‍":"&zwj;","‌":"&zwnj;"}}}}}),g=u({"../../node_modules/html-entities/lib/numeric-unicode-map.js"(e){Object.defineProperty(e,"__esModule",{value:!0}),e.numericUnicodeMap={0:65533,128:8364,130:8218,131:402,132:8222,133:8230,134:8224,135:8225,136:710,137:8240,138:352,139:8249,140:338,142:381,145:8216,146:8217,147:8220,148:8221,149:8226,150:8211,151:8212,152:732,153:8482,154:353,155:8250,156:339,158:382,159:376}}}),f=u({"../../node_modules/html-entities/lib/surrogate-pairs.js"(e){Object.defineProperty(e,"__esModule",{value:!0}),e.fromCodePoint=String.fromCodePoint||function(e){return String.fromCharCode(Math.floor((e-65536)/1024)+55296,(e-65536)%1024+56320)},e.getCodePoint=String.prototype.codePointAt?function(e,t){return e.codePointAt(t)}:function(e,t){return 1024*(e.charCodeAt(t)-55296)+e.charCodeAt(t+1)-56320+65536},e.highSurrogateFrom=55296,e.highSurrogateTo=56319}}),m=u({"../../node_modules/html-entities/lib/index.js"(e){var t=e&&e.__assign||function(){return t=Object.assign||function(e){for(var t,r=1,s=arguments.length;r<s;r++)for(var a in t=arguments[r])Object.prototype.hasOwnProperty.call(t,a)&&(e[a]=t[a]);return e},t.apply(this,arguments)};Object.defineProperty(e,"__esModule",{value:!0});var r=d(),s=g(),a=f(),i=t(t({},r.namedReferences),{all:r.namedReferences.html5}),n={specialChars:/[<>'"&]/g,nonAscii:/(?:[<>'"&\u0080-\uD7FF\uE000-\uFFFF]|[\uD800-\uDBFF][\uDC00-\uDFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF])/g,nonAsciiPrintable:/(?:[<>'"&\x01-\x08\x11-\x15\x17-\x1F\x7f-\uD7FF\uE000-\uFFFF]|[\uD800-\uDBFF][\uDC00-\uDFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF])/g,extensive:/(?:[\x01-\x0c\x0e-\x1f\x21-\x2c\x2e-\x2f\x3a-\x40\x5b-\x60\x7b-\x7d\x7f-\uD7FF\uE000-\uFFFF]|[\uD800-\uDBFF][\uDC00-\uDFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF])/g},o={mode:"specialChars",level:"all",numeric:"decimal"};e.encode=function(e,t){var r=void 0===(u=(c=void 0===t?o:t).mode)?"specialChars":u,s=void 0===(g=c.numeric)?"decimal":g,l=c.level;if(!e)return"";var c,u,p=n[r],h=i[void 0===l?"all":l].characters,d="hexadecimal"===s;if(p.lastIndex=0,c=p.exec(e)){u="";var g=0;do{g!==c.index&&(u+=e.substring(g,c.index));var f=h[l=c[0]];if(!f){var m=l.length>1?a.getCodePoint(l,0):l.charCodeAt(0);f=(d?"&#x"+m.toString(16):"&#"+m)+";"}u+=f,g=c.index+l.length}while(c=p.exec(e));g!==e.length&&(u+=e.substring(g))}else u=e;return u};var l={scope:"body",level:"all"},c=/&(?:#\d+|#[xX][\da-fA-F]+|[0-9a-zA-Z]+);/g,u=/&(?:#\d+|#[xX][\da-fA-F]+|[0-9a-zA-Z]+)[;=]?/g,p={xml:{strict:c,attribute:u,body:r.bodyRegExps.xml},html4:{strict:c,attribute:u,body:r.bodyRegExps.html4},html5:{strict:c,attribute:u,body:r.bodyRegExps.html5}},h=t(t({},p),{all:p.html5}),m=String.fromCharCode,y=m(65533),b={level:"all"};e.decodeEntity=function(e,t){var r=void 0===(n=(void 0===t?b:t).level)?"all":n;if(!e)return"";var n=e,o=(e[e.length-1],i[r].entities[e]);if(o)n=o;else if("&"===e[0]&&"#"===e[1]){var l=e[2],c="x"==l||"X"==l?parseInt(e.substr(3),16):parseInt(e.substr(2));n=c>=1114111?y:c>65535?a.fromCodePoint(c):m(s.numericUnicodeMap[c]||c)}return n},e.decode=function(e,t){var r=void 0===t?l:t,n=r.level,o=void 0===n?"all":n,c=r.scope,u=void 0===c?"xml"===o?"strict":"body":c;if(!e)return"";var p=h[o][u],d=i[o].entities,g="attribute"===u,f="strict"===u;p.lastIndex=0;var b,v=p.exec(e);if(v){b="";var w=0;do{w!==v.index&&(b+=e.substring(w,v.index));var A=v[0],S=A,q=A[A.length-1];if(g&&"="===q)S=A;else if(f&&";"!==q)S=A;else{var x=d[A];if(x)S=x;else if("&"===A[0]&&"#"===A[1]){var k=A[2],T="x"==k||"X"==k?parseInt(A.substr(3),16):parseInt(A.substr(2));S=T>=1114111?y:T>65535?a.fromCodePoint(T):m(s.numericUnicodeMap[T]||T)}}b+=S,w=v.index+A.length}while(v=p.exec(e));w!==e.length&&(b+=e.substring(w))}else b=e;return b}}}),y=u({"../../node_modules/rfdc/index.js"(e,t){function r(e){return e instanceof Buffer?Buffer.from(e):new e.constructor(e.buffer.slice(),e.byteOffset,e.length)}t.exports=function(e){return(e=e||{}).circles?function(e){var t=[],s=[];return e.proto?function e(i){if("object"!=typeof i||null===i)return i;if(i instanceof Date)return new Date(i);if(Array.isArray(i))return a(i,e);if(i instanceof Map)return new Map(a(Array.from(i),e));if(i instanceof Set)return new Set(a(Array.from(i),e));var n={};for(var o in t.push(i),s.push(n),i){var l=i[o];if("object"!=typeof l||null===l)n[o]=l;else if(l instanceof Date)n[o]=new Date(l);else if(l instanceof Map)n[o]=new Map(a(Array.from(l),e));else if(l instanceof Set)n[o]=new Set(a(Array.from(l),e));else if(ArrayBuffer.isView(l))n[o]=r(l);else{var c=t.indexOf(l);n[o]=-1!==c?s[c]:e(l)}}return t.pop(),s.pop(),n}:function e(i){if("object"!=typeof i||null===i)return i;if(i instanceof Date)return new Date(i);if(Array.isArray(i))return a(i,e);if(i instanceof Map)return new Map(a(Array.from(i),e));if(i instanceof Set)return new Set(a(Array.from(i),e));var n={};for(var o in t.push(i),s.push(n),i)if(!1!==Object.hasOwnProperty.call(i,o)){var l=i[o];if("object"!=typeof l||null===l)n[o]=l;else if(l instanceof Date)n[o]=new Date(l);else if(l instanceof Map)n[o]=new Map(a(Array.from(l),e));else if(l instanceof Set)n[o]=new Set(a(Array.from(l),e));else if(ArrayBuffer.isView(l))n[o]=r(l);else{var c=t.indexOf(l);n[o]=-1!==c?s[c]:e(l)}}return t.pop(),s.pop(),n};function a(e,a){for(var i=Object.keys(e),n=new Array(i.length),o=0;o<i.length;o++){var l=i[o],c=e[l];if("object"!=typeof c||null===c)n[l]=c;else if(c instanceof Date)n[l]=new Date(c);else if(ArrayBuffer.isView(c))n[l]=r(c);else{var u=t.indexOf(c);n[l]=-1!==u?s[u]:a(c)}}return n}}(e):e.proto?function e(s){if("object"!=typeof s||null===s)return s;if(s instanceof Date)return new Date(s);if(Array.isArray(s))return t(s,e);if(s instanceof Map)return new Map(t(Array.from(s),e));if(s instanceof Set)return new Set(t(Array.from(s),e));var a={};for(var i in s){var n=s[i];"object"!=typeof n||null===n?a[i]=n:n instanceof Date?a[i]=new Date(n):n instanceof Map?a[i]=new Map(t(Array.from(n),e)):n instanceof Set?a[i]=new Set(t(Array.from(n),e)):ArrayBuffer.isView(n)?a[i]=r(n):a[i]=e(n)}return a}:function e(s){if("object"!=typeof s||null===s)return s;if(s instanceof Date)return new Date(s);if(Array.isArray(s))return t(s,e);if(s instanceof Map)return new Map(t(Array.from(s),e));if(s instanceof Set)return new Set(t(Array.from(s),e));var a={};for(var i in s)if(!1!==Object.hasOwnProperty.call(s,i)){var n=s[i];"object"!=typeof n||null===n?a[i]=n:n instanceof Date?a[i]=new Date(n):n instanceof Map?a[i]=new Map(t(Array.from(n),e)):n instanceof Set?a[i]=new Set(t(Array.from(n),e)):ArrayBuffer.isView(n)?a[i]=r(n):a[i]=e(n)}return a};function t(e,t){for(var s=Object.keys(e),a=new Array(s.length),i=0;i<s.length;i++){var n=s[i],o=e[n];"object"!=typeof o||null===o?a[n]=o:o instanceof Date?a[n]=new Date(o):ArrayBuffer.isView(o)?a[n]=r(o):a[n]=t(o)}return a}}}}),b={};function v(e){if(null==e||"object"!=typeof e)return!1;let t=Object.getPrototypeOf(e);return!(null!==t&&t!==Object.prototype&&null!==Object.getPrototypeOf(t)||Symbol.iterator in e||Symbol.toStringTag in e)}function w(e){return"string"==typeof e}function A(e){return Number.isSafeInteger(e)&&e>=0}function S(e){return null!=e}((e,t)=>{for(var r in t)i(e,r,{get:t[r],enumerable:!0})})(b,{defaults:()=>yt,stripHtml:()=>bt,version:()=>mt}),e.exports=(s=b,p(i({},"__esModule",{value:!0}),s));var q,x,k,T,E="object"==typeof r.g&&r.g&&r.g.Object===Object&&r.g,O="object"==typeof self&&self&&self.Object===Object&&self,F=E||O||Function("return this")(),L=F.Symbol,C=Object.prototype,D=C.hasOwnProperty,_=C.toString,I=L?L.toStringTag:void 0,R=Object.prototype.toString,B=L?L.toStringTag:void 0,N=function(e){return null==e?void 0===e?"[object Undefined]":"[object Null]":B&&B in Object(e)?function(e){var t=D.call(e,I),r=e[I];try{e[I]=void 0;var s=!0}catch(e){}var a=_.call(e);return s&&(t?e[I]=r:delete e[I]),a}(e):function(e){return R.call(e)}(e)},P=function(e){return null!=e&&"object"==typeof e},H=function(e,t){for(var r=-1,s=null==e?0:e.length,a=Array(s);++r<s;)a[r]=t(e[r],r,e);return a},j=Array.isArray,M=L?L.prototype:void 0,U=M?M.toString:void 0,$=function e(t){if("string"==typeof t)return t;if(j(t))return H(t,e)+"";if(function(e){return"symbol"==typeof e||P(e)&&"[object Symbol]"==N(e)}(t))return U?U.call(t):"";var r=t+"";return"0"==r&&1/t==-1/0?"-0":r},V=/\s/,z=/^\s+/,W=function(e){return e?e.slice(0,function(e){for(var t=e.length;t--&&V.test(e.charAt(t)););return t}(e)+1).replace(z,""):e},G=function(e){var t=typeof e;return null!=e&&("object"==t||"function"==t)},J=function(e){return e},Z=function(e){if(!G(e))return!1;var t=N(e);return"[object Function]"==t||"[object GeneratorFunction]"==t||"[object AsyncFunction]"==t||"[object Proxy]"==t},Y=F["__core-js_shared__"],X=(q=/[^.]+$/.exec(Y&&Y.keys&&Y.keys.IE_PROTO||""))?"Symbol(src)_1."+q:"",K=Function.prototype.toString,Q=/^\[object .+?Constructor\]$/,ee=Function.prototype,te=Object.prototype,re=ee.toString,se=te.hasOwnProperty,ae=RegExp("^"+re.call(se).replace(/[\\^$.*+?()[\]{}|]/g,"\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,"$1.*?")+"$"),ie=function(e){return!(!G(e)||(t=e,X&&X in t))&&(Z(e)?ae:Q).test(function(e){if(null!=e){try{return K.call(e)}catch(e){}try{return e+""}catch(e){}}return""}(e));var t},ne=function(e,t){var r=function(e,t){return null==e?void 0:e[t]}(e,t);return ie(r)?r:void 0},oe=Date.now,le=function(){try{var e=ne(Object,"defineProperty");return e({},"",{}),e}catch(e){}}(),ce=(x=le?function(e,t){return le(e,"toString",{configurable:!0,enumerable:!1,value:(r=t,function(){return r}),writable:!0});var r}:J,k=0,T=0,function(){var e=oe(),t=16-(e-T);if(T=e,t>0){if(++k>=800)return arguments[0]}else k=0;return x.apply(void 0,arguments)}),ue=function(e){return e!=e},pe=function(e,t,r){return t==t?function(e,t,r){for(var s=r-1,a=e.length;++s<a;)if(e[s]===t)return s;return-1}(e,t,r):function(e,t,r,s){for(var a=e.length,i=r+(s?1:-1);s?i--:++i<a;)if(t(e[i],i,e))return i;return-1}(e,ue,r)},he=function(e,t){return!(null==e||!e.length)&&pe(e,t,0)>-1},de=Math.max,ge=ne(Object,"create"),fe=Object.prototype.hasOwnProperty,me=Object.prototype.hasOwnProperty;function ye(e){var t=-1,r=null==e?0:e.length;for(this.clear();++t<r;){var s=e[t];this.set(s[0],s[1])}}ye.prototype.clear=function(){this.__data__=ge?ge(null):{},this.size=0},ye.prototype.delete=function(e){var t=this.has(e)&&delete this.__data__[e];return this.size-=t?1:0,t},ye.prototype.get=function(e){var t=this.__data__;if(ge){var r=t[e];return"__lodash_hash_undefined__"===r?void 0:r}return fe.call(t,e)?t[e]:void 0},ye.prototype.has=function(e){var t=this.__data__;return ge?void 0!==t[e]:me.call(t,e)},ye.prototype.set=function(e,t){var r=this.__data__;return this.size+=this.has(e)?0:1,r[e]=ge&&void 0===t?"__lodash_hash_undefined__":t,this};var be=ye,ve=function(e,t){for(var r=e.length;r--;)if((s=e[r][0])===(a=t)||s!=s&&a!=a)return r;var s,a;return-1},we=Array.prototype.splice;function Ae(e){var t=-1,r=null==e?0:e.length;for(this.clear();++t<r;){var s=e[t];this.set(s[0],s[1])}}Ae.prototype.clear=function(){this.__data__=[],this.size=0},Ae.prototype.delete=function(e){var t=this.__data__,r=ve(t,e);return!(r<0||(r==t.length-1?t.pop():we.call(t,r,1),--this.size,0))},Ae.prototype.get=function(e){var t=this.__data__,r=ve(t,e);return r<0?void 0:t[r][1]},Ae.prototype.has=function(e){return ve(this.__data__,e)>-1},Ae.prototype.set=function(e,t){var r=this.__data__,s=ve(r,e);return s<0?(++this.size,r.push([e,t])):r[s][1]=t,this};var Se=Ae,qe=ne(F,"Map"),xe=function(e,t){var r,s,a=e.__data__;return("string"==(s=typeof(r=t))||"number"==s||"symbol"==s||"boolean"==s?"__proto__"!==r:null===r)?a["string"==typeof t?"string":"hash"]:a.map};function ke(e){var t=-1,r=null==e?0:e.length;for(this.clear();++t<r;){var s=e[t];this.set(s[0],s[1])}}ke.prototype.clear=function(){this.size=0,this.__data__={hash:new be,map:new(qe||Se),string:new be}},ke.prototype.delete=function(e){var t=xe(this,e).delete(e);return this.size-=t?1:0,t},ke.prototype.get=function(e){return xe(this,e).get(e)},ke.prototype.has=function(e){return xe(this,e).has(e)},ke.prototype.set=function(e,t){var r=xe(this,e),s=r.size;return r.set(e,t),this.size+=r.size==s?0:1,this};var Te=ke,Ee=function(e,t,r){var s=e.length;return r=void 0===r?s:r,!t&&r>=s?e:function(e,t,r){var s=-1,a=e.length;t<0&&(t=-t>a?0:a+t),(r=r>a?a:r)<0&&(r+=a),a=t>r?0:r-t>>>0,t>>>=0;for(var i=Array(a);++s<a;)i[s]=e[s+t];return i}(e,t,r)},Oe=RegExp("[\\u200d\\ud800-\\udfff\\u0300-\\u036f\\ufe20-\\ufe2f\\u20d0-\\u20ff\\ufe0e\\ufe0f]"),Fe="\\ud800-\\udfff",Le="["+Fe+"]",Ce="[\\u0300-\\u036f\\ufe20-\\ufe2f\\u20d0-\\u20ff]",De="\\ud83c[\\udffb-\\udfff]",_e="[^"+Fe+"]",Ie="(?:\\ud83c[\\udde6-\\uddff]){2}",Re="[\\ud800-\\udbff][\\udc00-\\udfff]",Be="(?:"+Ce+"|"+De+")?",Ne="[\\ufe0e\\ufe0f]?",Pe=Ne+Be+"(?:\\u200d(?:"+[_e,Ie,Re].join("|")+")"+Ne+Be+")*",He="(?:"+[_e+Ce+"?",Ce,Ie,Re,Le].join("|")+")",je=RegExp(De+"(?="+De+")|"+He+Pe,"g"),Me=function(e){return function(e){return Oe.test(e)}(e)?function(e){return e.match(je)||[]}(e):function(e){return e.split("")}(e)};function Ue(e){var t=-1,r=null==e?0:e.length;for(this.__data__=new Te;++t<r;)this.add(e[t])}Ue.prototype.add=Ue.prototype.push=function(e){return this.__data__.set(e,"__lodash_hash_undefined__"),this},Ue.prototype.has=function(e){return this.__data__.has(e)};var $e=Ue,Ve=function(e,t){return e.has(t)},ze=function(e){return P(e)&&function(e){return null!=e&&function(e){return"number"==typeof e&&e>-1&&e%1==0&&e<=9007199254740991}(e.length)&&!Z(e)}(e)},We=function(e,t,r){for(var s=-1,a=null==e?0:e.length;++s<a;)if(r(t,e[s]))return!0;return!1},Ge=function(e,t,r){if((e=null==(s=e)?"":$(s))&&(r||void 0===t))return W(e);var s;if(!e||!(t=$(t)))return e;var a=Me(e),i=Me(t),n=function(e,t){for(var r=-1,s=e.length;++r<s&&pe(t,e[r],0)>-1;);return r}(a,i),o=function(e,t){for(var r=e.length;r--&&pe(t,e[r],0)>-1;);return r}(a,i)+1;return Ee(a,n,o).join("")},Je=function(e,t){return ce(function(e,t,r){return t=de(void 0===t?e.length-1:t,0),function(){for(var s=arguments,a=-1,i=de(s.length-t,0),n=Array(i);++a<i;)n[a]=s[t+a];a=-1;for(var o=Array(t+1);++a<t;)o[a]=s[a];return o[t]=r(n),function(e,t,r){switch(r.length){case 0:return e.call(t);case 1:return e.call(t,r[0]);case 2:return e.call(t,r[0],r[1]);case 3:return e.call(t,r[0],r[1],r[2])}return e.apply(t,r)}(e,this,o)}}(e,t,J),e+"")}((function(e,t){return ze(e)?function(e,t,r,s){var a=-1,i=he,n=!0,o=e.length,l=[],c=t.length;if(!o)return l;r&&(t=H(t,function(e){return function(t){return e(t)}}(r))),s?(i=We,n=!1):t.length>=200&&(i=Ve,n=!1,t=new $e(t));e:for(;++a<o;){var u=e[a],p=null==r?u:r(u);if(u=s||0!==u?u:0,n&&p==p){for(var h=c;h--;)if(t[h]===p)continue e;l.push(u)}else i(t,p,s)||l.push(u)}return l}(e,t):[]})),Ze=h(m(),1),Ye={strictlyTwoElementsInRangeArrays:!1,progressFn:null};function Xe(e,t){if(!Array.isArray(e)||!e.length)return e;let r,s,a={...Ye,...t};if(a.strictlyTwoElementsInRangeArrays&&!e.every(((e,t)=>!(!Array.isArray(e)||2!==e.length)||(r=t,s=e.length,!1))))throw new TypeError(`ranges-sort: [THROW_ID_03] The first argument should be an array and must consist of arrays which are natural number indexes representing TWO string index ranges. However, ${r}th range (${JSON.stringify(e[r],null,4)}) has not two but ${s} elements!`);if(!e.every(((e,t)=>!(!Array.isArray(e)||!Number.isInteger(e[0])||e[0]<0||!Number.isInteger(e[1])||e[1]<0)||(r=t,!1))))throw new TypeError(`ranges-sort: [THROW_ID_04] The first argument should be an array and must consist of arrays which are natural number indexes representing string index ranges. However, ${r}th range (${JSON.stringify(e[r],null,4)}) does not consist of only natural numbers!`);let i=e.length**2,n=0;return Array.from(e).sort(((e,t)=>(a.progressFn&&(n+=1,a.progressFn(Math.floor(100*n/i))),e[0]===t[0]?e[1]<t[1]?-1:e[1]>t[1]?1:0:e[0]<t[0]?-1:1)))}var Ke={mergeType:1,progressFn:null,joinRangesThatTouchEdges:!0},Qe=!0,et="Invariant failed";function tt(e,t,r){let s,a=0,i=0;if(0===arguments.length)throw new Error("ranges-apply: [THROW_ID_01] inputs missing!");if("string"!=typeof e)throw new TypeError(`ranges-apply: [THROW_ID_02] first input argument must be a string! Currently it's: ${typeof e}, equal to: ${JSON.stringify(e,null,4)}`);if(t&&!Array.isArray(t))throw new TypeError(`ranges-apply: [THROW_ID_03] second input argument must be an array (or null)! Currently it's: ${typeof t}, equal to: ${JSON.stringify(t,null,4)}`);if(r&&"function"!=typeof r)throw new TypeError(`ranges-apply: [THROW_ID_04] the third input argument must be a function (or falsey)! Currently it's: ${typeof r}, equal to: ${JSON.stringify(r,null,4)}`);if(!t?.filter((e=>e)).length)return e;s=Array.isArray(t)&&Number.isInteger(t[0])&&Number.isInteger(t[1])?[Array.from(t)]:Array.from(t);let n=s.length,o=0;s.filter((e=>e)).forEach(((e,t)=>{if(r&&(a=Math.floor(o/n*10),a!==i&&(i=a,r(a))),!Array.isArray(e))throw new TypeError(`ranges-apply: [THROW_ID_05] ranges array, second input arg., has ${t}th element not an array: ${JSON.stringify(e,null,4)}, which is ${typeof e}`);if(!Number.isInteger(e[0])){if(!Number.isInteger(+e[0])||+e[0]<0)throw new TypeError(`ranges-apply: [THROW_ID_06] ranges array, second input arg. has ${t}th element, array ${JSON.stringify(e,null,0)}. Its first element is not an integer, string index, but ${typeof e[0]}, equal to: ${JSON.stringify(e[0],null,4)}.`);s[t][0]=+s[t][0]}if(!Number.isInteger(e[1])){if(!Number.isInteger(+e[1])||+e[1]<0)throw new TypeError(`ranges-apply: [THROW_ID_07] ranges array, second input arg. has ${t}th element, array ${JSON.stringify(e,null,0)}. Its second element is not an integer, string index, but ${typeof e[1]}, equal to: ${JSON.stringify(e[1],null,4)}.`);s[t][1]=+s[t][1]}o+=1}));let l=function(e,t){function r(e){return!!e&&"object"==typeof e&&!Array.isArray(e)}if(!Array.isArray(e)||!e.length)return null;let s;if(t){if(!r(t))throw new Error(`emlint: [THROW_ID_03] the second input argument must be a plain object. It was given as:\n${JSON.stringify(t,null,4)} (type ${typeof t})`);if(s={...Ke,...t},s.progressFn&&r(s.progressFn)&&!Object.keys(s.progressFn).length)s.progressFn=null;else if(s.progressFn&&"function"!=typeof s.progressFn)throw new Error(`ranges-merge: [THROW_ID_01] opts.progressFn must be a function! It was given of a type: "${typeof s.progressFn}", equal to ${JSON.stringify(s.progressFn,null,4)}`);if(![1,2,"1","2"].includes(s.mergeType))throw new Error(`ranges-merge: [THROW_ID_02] opts.mergeType was customised to a wrong thing! It was given of a type: "${typeof s.mergeType}", equal to ${JSON.stringify(s.mergeType,null,4)}`);if("boolean"!=typeof s.joinRangesThatTouchEdges)throw new Error(`ranges-merge: [THROW_ID_04] opts.joinRangesThatTouchEdges was customised to a wrong thing! It was given of a type: "${typeof s.joinRangesThatTouchEdges}", equal to ${JSON.stringify(s.joinRangesThatTouchEdges,null,4)}`)}else s={...Ke};let a,i,n,o=e.filter((e=>Array.isArray(e))).map((e=>[...e])).filter((e=>void 0!==e[2]||e[0]!==e[1]));a=s.progressFn?Xe(o,{progressFn:e=>{n=Math.floor(e/5),n!==i&&(i=n,s.progressFn(n))}}):Xe(o);let l=a.length-1;for(let e=l;e>0;e--)s.progressFn&&(n=Math.floor(78*(1-e/l))+21,n!==i&&n>i&&(i=n,s.progressFn(n))),(a[e][0]<=a[e-1][0]||!s.joinRangesThatTouchEdges&&a[e][0]<a[e-1][1]||s.joinRangesThatTouchEdges&&a[e][0]<=a[e-1][1])&&(a[e-1][0]=Math.min(a[e][0],a[e-1][0]),a[e-1][1]=Math.max(a[e][1],a[e-1][1]),void 0!==a[e][2]&&(a[e-1][0]>=a[e][0]||a[e-1][1]<=a[e][1])&&null!==a[e-1][2]&&(null===a[e][2]&&null!==a[e-1][2]?a[e-1][2]=null:null!=a[e-1][2]?2==+s.mergeType&&a[e-1][0]===a[e][0]?a[e-1][2]=a[e][2]:a[e-1][2]+=a[e][2]:a[e-1][2]=a[e][2]),a.splice(e,1),e=a.length);return a.length?a:null}(s,{progressFn:e=>{r&&(a=10+Math.floor(e/10),a!==i&&(i=a,r(a)))}});!function(e,t){if(!e){if(Qe)throw new Error(et);throw new Error(et)}}(l);let c=l.length;if(c>0){let t=e.slice(l[c-1][1]);e=l.reduce(((t,s,n,o)=>{r&&(a=20+Math.floor(n/c*80),a!==i&&(i=a,r(a)));let l=0===n?0:o[n-1][1],u=o[n][0];return`${t}${e.slice(l,u)}${o[n][2]||""}`}),""),e+=t}return e}function rt(e,t=1){function r(e){return Array.from(e).reverse().join("")}function s(e,t,r){let s=r?"\n":"\r",a=r?"\r":"\n";if(!e)return e;let i=0,n=0,o="";for(let r=0,l=e.length;r<l;r++)(e[r]===s||e[r]===a&&e[r-1]!==s)&&n++,"\r\n".includes(e[r])||" "===e[r]?(i=0," "===e[r]?o+=e[r]:e[r]===s?n<=t&&(o+=e[r],e[r+1]===a&&(o+=e[r+1],r++)):e[r]===a&&e?.[r-1]!==s&&n<=t&&(o+=e[r])):(i++,!e[r+1]&&!n&&(o+=" "));return o}if("string"==typeof e&&e.length){let a=1;"number"==typeof+t&&Number.isInteger(+t)&&+t>=0&&(a=+t);let i="",n="";if(e.trim()){if(!e[0].trim())for(let t=0,r=e.length;t<r;t++)if(e[t].trim()){i=e.slice(0,t);break}}else i=e;if(e.trim()&&(""===e.slice(-1).trim()||" "===e.slice(-1)))for(let t=e.length;t--;)if(e[t].trim()){n=e.slice(t+1);break}return`${s(i,a,!1)}${e.trim()}${r(s(r(n),a,!0))}`}return e}var st={mergeType:1,progressFn:null,joinRangesThatTouchEdges:!0},at={limitToBeAddedWhitespace:!1,limitLinebreaksCount:1,mergeType:1},it=class{constructor(e){let t={...at,...e};if(t.mergeType&&1!==t.mergeType&&2!==t.mergeType)if(w(t.mergeType)&&"1"===t.mergeType.trim())t.mergeType=1;else{if(!w(t.mergeType)||"2"!==t.mergeType.trim())throw new Error(`ranges-push: [THROW_ID_02] opts.mergeType was customised to a wrong thing! It was given of a type: "${typeof t.mergeType}", equal to ${JSON.stringify(t.mergeType,null,4)}`);t.mergeType=2}this.opts=t,this.ranges=[]}ranges;opts;add(e,t,r){if(null==e&&null==t)return;if(S(e)&&!S(t)){if(Array.isArray(e)){if(e.length){if(e.some((e=>Array.isArray(e))))return void e.forEach((e=>{Array.isArray(e)&&this.add(...e)}));e.length&&A(+e[0])&&A(+e[1])&&this.add(...e)}return}throw new TypeError(`ranges-push/Ranges/add(): [THROW_ID_12] the first input argument, "from" is set (${JSON.stringify(e,null,0)}) but second-one, "to" is not (${JSON.stringify(t,null,0)})`)}if(!S(e)&&S(t))throw new TypeError(`ranges-push/Ranges/add(): [THROW_ID_13] the second input argument, "to" is set (${JSON.stringify(t,null,0)}) but first-one, "from" is not (${JSON.stringify(e,null,0)})`);let s=+e,a=+t;if(A(r)&&(r=String(r)),!A(s)||!A(a))throw A(s)&&s>=0?new TypeError(`ranges-push/Ranges/add(): [THROW_ID_10] "to" value, the second input argument, must be a natural number or zero! Currently it's of a type "${typeof a}" equal to: ${JSON.stringify(a,null,4)}`):new TypeError(`ranges-push/Ranges/add(): [THROW_ID_09] "from" value, the first input argument, must be a natural number or zero! Currently it's of a type "${typeof s}" equal to: ${JSON.stringify(s,null,4)}`);if(S(r)&&!w(r)&&!A(r))throw new TypeError(`ranges-push/Ranges/add(): [THROW_ID_08] The third argument, the value to add, was given not as string but ${typeof r}, equal to:\n${JSON.stringify(r,null,4)}`);if(S(this.ranges)&&Array.isArray(this.last())&&s===this.last()[1]){if(this.last()[1]=a,this.last()[2],null!==this.last()[2]&&S(r)){let e=!this.last()[2]||!this.last()[2].length||this.opts?.mergeType&&1!==this.opts.mergeType?r:`${this.last()[2]}${r}`;this.opts.limitToBeAddedWhitespace&&(e=rt(e,this.opts.limitLinebreaksCount)),w(e)&&!e.length||(this.last()[2]=e)}}else{this.ranges||(this.ranges=[]);let e=void 0===r||w(r)&&!r.length?[s,a]:[s,a,r&&this.opts.limitToBeAddedWhitespace?rt(r,this.opts.limitLinebreaksCount):r];this.ranges.push(e)}}push(e,t,r){this.add(e,t,r)}current(){return Array.isArray(this.ranges)&&this.ranges.length?(this.ranges=function(e,t){function r(e){return!!e&&"object"==typeof e&&!Array.isArray(e)}if(!Array.isArray(e)||!e.length)return null;let s;if(t){if(!r(t))throw new Error(`emlint: [THROW_ID_03] the second input argument must be a plain object. It was given as:\n${JSON.stringify(t,null,4)} (type ${typeof t})`);if(s={...st,...t},s.progressFn&&r(s.progressFn)&&!Object.keys(s.progressFn).length)s.progressFn=null;else if(s.progressFn&&"function"!=typeof s.progressFn)throw new Error(`ranges-merge: [THROW_ID_01] resolvedOpts.progressFn must be a function! It was given of a type: "${typeof s.progressFn}", equal to ${JSON.stringify(s.progressFn,null,4)}`);if(![1,2,"1","2"].includes(s.mergeType))throw new Error(`ranges-merge: [THROW_ID_02] resolvedOpts.mergeType was customised to a wrong thing! It was given of a type: "${typeof s.mergeType}", equal to ${JSON.stringify(s.mergeType,null,4)}`);if("boolean"!=typeof s.joinRangesThatTouchEdges)throw new Error(`ranges-merge: [THROW_ID_04] resolvedOpts.joinRangesThatTouchEdges was customised to a wrong thing! It was given of a type: "${typeof s.joinRangesThatTouchEdges}", equal to ${JSON.stringify(s.joinRangesThatTouchEdges,null,4)}`)}else s={...st};let a,i,n,o=e.filter((e=>Array.isArray(e))).map((e=>[...e])).filter((e=>void 0!==e[2]||e[0]!==e[1]));a=s.progressFn?Xe(o,{progressFn:e=>{n=Math.floor(e/5),n!==i&&(i=n,s.progressFn(n))}}):Xe(o);let l=a.length-1;for(let e=l;e>0;e--)s.progressFn&&(n=Math.floor(78*(1-e/l))+21,n!==i&&n>i&&(i=n,s.progressFn(n))),(a[e][0]<=a[e-1][0]||!s.joinRangesThatTouchEdges&&a[e][0]<a[e-1][1]||s.joinRangesThatTouchEdges&&a[e][0]<=a[e-1][1])&&(a[e-1][0]=Math.min(a[e][0],a[e-1][0]),a[e-1][1]=Math.max(a[e][1],a[e-1][1]),void 0!==a[e][2]&&(a[e-1][0]>=a[e][0]||a[e-1][1]<=a[e][1])&&null!==a[e-1][2]&&(null===a[e][2]&&null!==a[e-1][2]?a[e-1][2]=null:null!=a[e-1][2]?2==+s.mergeType&&a[e-1][0]===a[e][0]?a[e-1][2]=a[e][2]:a[e-1][2]+=a[e][2]:a[e-1][2]=a[e][2]),a.splice(e,1),e=a.length);return a.length?a:null}(this.ranges,{mergeType:this.opts.mergeType}),this.ranges&&this.opts.limitToBeAddedWhitespace?this.ranges.map((e=>S(e[2])?[e[0],e[1],rt(e[2],this.opts.limitLinebreaksCount)]:e)):this.ranges):null}wipe(){this.ranges=[]}replace(e){if(Array.isArray(e)&&e.length){if(!Array.isArray(e[0])||!A(e[0][0]))throw new Error(`ranges-push/Ranges/replace(): [THROW_ID_11] Single range was given but we expected array of arrays! The first element, ${JSON.stringify(e[0],null,4)} should be an array and its first element should be an integer, a string index.`);this.ranges=Array.from(e)}else this.ranges=[]}last(){return Array.isArray(this.ranges)&&this.ranges.length?this.ranges[this.ranges.length-1]:null}},nt=((0,h(y(),1).default)()," ");function ot(e,t=0){return function({str:e,idx:t=0,stopAtNewlines:r=!1,stopAtRawNbsp:s=!1}){if("string"!=typeof e||!e.length||((!t||"number"!=typeof t)&&(t=0),!e[t+1]))return null;if(e[t+1]&&(e[t+1].trim()||r&&"\n\r".includes(e[t+1])||s&&e[t+1]===nt))return t+1;if(e[t+2]&&(e[t+2].trim()||r&&"\n\r".includes(e[t+2])||s&&e[t+2]===nt))return t+2;for(let a=t+1,i=e.length;a<i;a++)if(e[a].trim()||r&&"\n\r".includes(e[a])||s&&e[a]===nt)return a;return null}({str:e,idx:t,stopAtNewlines:!1,stopAtRawNbsp:!1})}function lt(e,t){if(!e)return[];if(Array.isArray(e))return e.filter((e=>"string"==typeof e&&e.trim()));if("string"==typeof e)return e.trim()?[e]:[];throw new TypeError(`string-strip-html/stripHtml(): [THROW_ID_05] ${t} must be array containing zero or more strings or something falsey. Currently it's equal to: ${e}, that a type of ${typeof e}.`)}function ct(e,t,r,s){for(let a=t,i=e.length;a<i;a++){if(e.startsWith(r,a))return!0;if(e.startsWith(s,a))return!1}return!1}function ut(e,t,r){return e?.quotes,!!e?.quotes?.value&&ct(t,r+1,e.quotes.value,">"),e?.quotes?.next,ct(t,e?.quotes?.next-1,e?.quotes?.value,">"),!e?.quotes||!ct(t,r+1,e.quotes.value,">")&&-1!==e?.quotes?.next&&ct(t,e?.quotes?.next-1,e?.quotes?.value,">")}var pt=new Set(["!doctype","abbr","address","area","article","aside","audio","base","bdi","bdo","blockquote","body","br","button","canvas","caption","cite","code","col","colgroup","data","datalist","dd","del","details","dfn","dialog","div","dl","doctype","dt","em","embed","fieldset","figcaption","figure","footer","form","h1","h2","h3","h4","h5","h6","head","header","hgroup","hr","html","iframe","img","input","ins","kbd","keygen","label","legend","li","link","main","map","mark","math","menu","menuitem","meta","meter","nav","noscript","object","ol","optgroup","option","output","param","picture","pre","progress","rb","rp","rt","rtc","ruby","samp","script","section","select","slot","small","source","span","strong","style","sub","summary","sup","svg","table","tbody","td","template","textarea","tfoot","th","thead","time","title","tr","track","ul","var","video","wbr","xml"]),ht=new Set(["a","b","i","p","q","s","u"]),dt=new Set([".",",",";","!","?"]),gt=new Set([".",",","?",";",")","…",'"',"»"]),ft=new Set(["a","abbr","acronym","audio","b","bdi","bdo","big","button","canvas","cite","code","data","datalist","del","dfn","em","embed","i","iframe","input","ins","kbd","label","map","mark","meter","noscript","object","output","picture","progress","q","ruby","s","samp","select","slot","small","span","strong","sub","sup","svg","template","textarea","time","u","tt","var","video","wbr"]),mt="13.4.0",yt={ignoreTags:[],ignoreTagsWithTheirContents:[],onlyStripTags:[],stripTogetherWithTheirContents:["script","style","xml"],skipHtmlDecoding:!1,trimOnlySpaces:!1,stripRecognisedHTMLOnly:!1,dumpLinkHrefsNearby:{enabled:!1,putOnNewLine:!1,wrapHeads:"",wrapTails:""},ignoreIndentations:!1,cb:null,reportProgressFunc:null,reportProgressFuncFrom:0,reportProgressFuncTo:100};function bt(e,t){let r=Date.now(),s=[],a=[],i=[],n=[],o={};o={attributes:[]};let l=null,c=null,u=null,p=!1,h={},d={tagName:"",hrefValue:"",openingTagEnds:void 0},g="",f=!1,m=null,y=!0;function b(t,r,a){if(Array.isArray(r.stripTogetherWithTheirContents)&&(r.stripTogetherWithTheirContents.includes(o.name)||r.stripTogetherWithTheirContents.includes("*")))if(o.slashPresent&&Array.isArray(s)&&s.some((e=>e.name===o.name))){for(let i=s.length;i--;)if(s[i].name===o.name){n=n.filter((([e,r])=>(e<s[i].lastOpeningBracketAt||e>=t+1)&&(r<=s[i].lastOpeningBracketAt||r>t+1)));let l=t+1;o.lastClosingBracketAt&&(l=o.lastClosingBracketAt+1),n.push([s[i].lastOpeningBracketAt,l]),gt.has(e[t])&&r.cb?r.cb({tag:o,deleteFrom:s[i].lastOpeningBracketAt,deleteTo:t+1,insert:null,rangesArr:a,proposedReturn:[s[i].lastOpeningBracketAt,t,null]}):r.cb&&r.cb({tag:o,deleteFrom:s[i].lastOpeningBracketAt,deleteTo:t,insert:"",rangesArr:a,proposedReturn:[s[i].lastOpeningBracketAt,t,""]}),s.splice(i,1);break}}else o.slashPresent||s.push(o);else Array.isArray(r.ignoreTagsWithTheirContents)&&k(t,r,o)&&(y=!1)}function A(t,r,s,a,i,n){if(Array.isArray(D.current())&&"number"==typeof s&&0===D.current()[0][0]&&D.current()[0][1]>=s)return"";if(e.length===a&&n&&!E?.dumpLinkHrefsNearby?.enabled)return null;let l="";if(Number.isInteger(s)&&s<i&&(l+=t.slice(s,i)),Number.isInteger(a)&&a>n+1){let r=t.slice(n+1,a);a&&!ot(e,a-1)&&(r=r.trimEnd()),r.includes("\n")&&q(a,t)?l+=" ":l+=r}let c=!gt.has(t[r]),u=">"!==t[a-1]||!t[s].trim(),p=!['"',"("].includes(t[i-1]),h=![";",".",":","!"].includes(t[r]);if((c||u&&p&&h)&&(u||p)&&"!"!==t[r]&&(!ft.has(o.name)||"number"==typeof s&&s<i||"number"==typeof a&&a>n+1)){let e=l.match(/\n/g);return Array.isArray(e)&&e.length?1===e.length?"\n":2===e.length?"\n\n":"\n\n\n":" "}return""}function S(t,r){if(t.dumpLinkHrefsNearby?.enabled&&d.tagName&&d.tagName===o.name&&o.lastOpeningBracketAt&&(d.openingTagEnds&&o.lastOpeningBracketAt>d.openingTagEnds||!d.openingTagEnds)&&(f=!0),f){let s=t.dumpLinkHrefsNearby?.putOnNewLine?"\n\n":"";g=`${s}${d.hrefValue}`,("number"!=typeof r||ot(e,r-1))&&(g+=s)}}function q(t,r){return r?"<"===r[t]&&"%"!==r[t+1]:"<"===e[t]&&"%"!==e[t+1]}function x(t){return">"===e[t]&&"%"!==e[t-1]}function k(t,r,s){if(r.ignoreTagsWithTheirContents.includes("*"))return!0;let i=e.indexOf(`<${s.name}`,t),n=e.indexOf(`</${s.name}`,t);return!(!s.slashPresent&&-1===n||s.slashPresent&&!a.some((e=>e.name===s.name))||n>-1&&i>-1&&i<n)&&r.ignoreTagsWithTheirContents.includes(s.name)}if("string"!=typeof e)throw new TypeError(`string-strip-html/stripHtml(): [THROW_ID_01] Input must be string! Currently it's: ${(typeof e).toLowerCase()}, equal to:\n${JSON.stringify(e,null,4)}`);if(t){if(!v(t))throw new TypeError(`string-strip-html/stripHtml(): [THROW_ID_02] Optional Options Object must be a plain object! Currently it's: ${(typeof t).toLowerCase()}, equal to:\n${JSON.stringify(t,null,4)}`);if(t.reportProgressFunc&&"function"!=typeof t.reportProgressFunc)throw new Error(`string-strip-html/stripHtml(): [THROW_ID_03] The Optional Options Object's key reportProgressFunc, callback function, should be a function but it was given as type ${typeof t.reportProgressFunc}, equal to ${JSON.stringify(t.reportProgressFunc,null,4)}`);if("boolean"==typeof t.dumpLinkHrefsNearby&&null!=t.dumpLinkHrefsNearby)throw new Error(`string-strip-html/stripHtml(): [THROW_ID_04] The Optional Options Object's key should be a plain object but it was given as type ${typeof t.dumpLinkHrefsNearby}, equal to ${JSON.stringify(t.dumpLinkHrefsNearby,null,4)}`)}function T(){f&&(d={tagName:"",hrefValue:"",openingTagEnds:void 0},f=!1)}let E={...yt,...t,dumpLinkHrefsNearby:Object.assign({},yt.dumpLinkHrefsNearby,t?.dumpLinkHrefsNearby)};if(F="returnRangesOnly",v(O=E)&&w(F)&&F in O)throw new TypeError("string-strip-html/stripHtml(): [THROW_ID_05] The Optional Options Object's key returnRangesOnly has been removed from the API since v.5 release.");var O,F;if(E.reportProgressFunc){if("number"!=typeof E.reportProgressFuncFrom)throw new Error(`string-strip-html/stripHtml(): [THROW_ID_06] The Optional Options Object's key reportProgressFuncFrom, callback function's "from" range, should be a number but it was given as type ${typeof E.reportProgressFuncFrom}, equal to ${JSON.stringify(E.reportProgressFuncFrom,null,4)}`);if("number"!=typeof E.reportProgressFuncTo)throw new Error(`string-strip-html/stripHtml(): [THROW_ID_07] The Optional Options Object's key reportProgressFuncTo, callback function's "to" range, should be a number but it was given as type ${typeof E.reportProgressFuncTo}, equal to ${JSON.stringify(E.reportProgressFuncTo,null,4)}`)}E.ignoreTags=lt(E.ignoreTags,"resolvedOpts.ignoreTags"),E.onlyStripTags=lt(E.onlyStripTags,"resolvedOpts.onlyStripTags");let L=!!E.onlyStripTags.length;E.onlyStripTags.length&&E.ignoreTags.length&&(E.onlyStripTags=Je(E.onlyStripTags,...E.ignoreTags)),E.stripTogetherWithTheirContents?"string"==typeof E.stripTogetherWithTheirContents&&E.stripTogetherWithTheirContents.length&&(E.stripTogetherWithTheirContents=[E.stripTogetherWithTheirContents]):E.stripTogetherWithTheirContents=[];let C={};if(E.stripTogetherWithTheirContents&&Array.isArray(E.stripTogetherWithTheirContents)&&E.stripTogetherWithTheirContents.length&&!E.stripTogetherWithTheirContents.every(((e,t)=>"string"==typeof e||(C.el=e,C.i=t,!1))))throw new TypeError(`string-strip-html/stripHtml(): [THROW_ID_08] Optional Options Object's key stripTogetherWithTheirContents was set to contain not just string elements! For example, element at index ${C.i} has a value ${C.el} which is not string but ${(typeof C.el).toLowerCase()}.`);E.cb||(E.cb=({rangesArr:e,proposedReturn:t})=>{t&&e.push(...t)});let D=new it({limitToBeAddedWhitespace:!0,limitLinebreaksCount:2});if(!E.skipHtmlDecoding)for(;e!==(0,Ze.decode)(e,{scope:"strict"});)e=(0,Ze.decode)(e,{scope:"strict"});let _=!1,I=!1,R=0,B=0,N=e.length,P=Math.floor(N/2);for(let t=0;t<N;t++){if(E.reportProgressFunc&&(N>1e3&&N<2e3?t===P&&E.reportProgressFunc(Math.floor((E.reportProgressFuncTo-E.reportProgressFuncFrom)/2)):N>=2e3&&(R=E.reportProgressFuncFrom+Math.floor(t/N*(E.reportProgressFuncTo-E.reportProgressFuncFrom)),R!==B&&(B=R,E.reportProgressFunc(R)))),Object.keys(o).length>1&&o.lastClosingBracketAt&&o.lastClosingBracketAt<t&&" "!==e[t]&&null===m&&(m=t),!_&&"%"===e[t]&&"{"===e[t-1]&&e.includes("%}",t+1)){u=null;let r=e.indexOf("%}",t)-1;if(r>t){t=r;continue}}if(!_&&x(t)&&(!o||Object.keys(o).length<2)&&t>1)for(let r=t;r--;)if(void 0===e[r-1]||x(r)){let s=void 0===e[r-1]?r:r+1,a=e.slice(s,t+1)||"";if((a.includes("/>")||a.includes("/ >")||a.includes('="')||a.includes("='"))&&e!==`<${Ge(a.trim(),"/>")}>`&&[...pt].some((e=>Ge(a.trim().split(/\s+/).filter((e=>e.trim())).filter(((e,t)=>0===t)),"/>").toLowerCase()===e))&&""===bt(`<${a.trim()}>`,E).result){i.length&&i[i.length-1][0]===o.lastOpeningBracketAt||i.push([s,t+1]),n.length&&n[n.length-1][0]===o.lastOpeningBracketAt||n.push([s,t+1]);let r=A(e,t,s,t+1,s,t+1),a=t+1;if(e[a]&&!e[a].trim())for(let t=a;t<N;t++)if(e[t].trim()){a=t;break}E.cb({tag:o,deleteFrom:s,deleteTo:a,insert:r,rangesArr:D,proposedReturn:[s,a,r]})}break}if(I||"/"!==e[t]||o.quotes?.value||!Number.isInteger(o.lastOpeningBracketAt)||Number.isInteger(o.lastClosingBracketAt)||(o.slashPresent=t),'"'===e[t]||"'"===e[t])if(!I&&o.nameStarts&&o?.quotes?.value===e[t]){let r;h.valueEnds=t,h.value=e.slice(h.valueStarts,t),o.attributes.push(h),h={},delete o.quotes,E.dumpLinkHrefsNearby?.enabled&&!s.length&&o.attributes.some((e=>{if("string"==typeof e.name&&"href"===e.name.toLowerCase())return r=`${E.dumpLinkHrefsNearby?.wrapHeads||""}${e.value}${E.dumpLinkHrefsNearby?.wrapTails||""}`,!0}))&&(d={tagName:o.name,hrefValue:r,openingTagEnds:void 0})}else I||o.quotes||!o.nameStarts||(o.quotes={},o.quotes.value=e[t],o.quotes.start=t,o.quotes.next=e.indexOf(e[t],t+1),h.nameStarts&&h.nameEnds&&h.nameEnds<t&&h.nameStarts<t&&!h.valueStarts&&(h.name=e.slice(h.nameStarts,h.nameEnds)));if(!(void 0===o.nameStarts||void 0!==o.nameEnds||e[t].trim()&&(j=e[t],/[-_A-Za-z0-9]/.test(j)))){if(o.nameEnds=t,o.name=e.slice(o.nameStarts,o.nameEnds+(x(t)||"/"===e[t]||void 0!==e[t+1]?0:1)),"!"!==e[o.nameStarts-1]&&!o.name.replace(/-/g,"").length||/^\d+$/.test(o.name[0])){o={};continue}if("string"==typeof o.name&&"doctype"===o.name.toLowerCase()&&(I=!0),q(t)){S(E);let r=A(e,t,o.leftOuterWhitespace,t,o.lastOpeningBracketAt,t);(E.stripTogetherWithTheirContents.includes(o.name)||E.stripTogetherWithTheirContents.includes("*"))&&(n=n.filter((([e,r])=>!(e===o.leftOuterWhitespace&&r===t)))),E.cb({tag:o,deleteFrom:o.leftOuterWhitespace,deleteTo:t,insert:`${r}${g}${r}`,rangesArr:D,proposedReturn:[o.leftOuterWhitespace,t,`${r}${g}${r}`]}),T(),b(t,E,D)}}if(o.quotes?.start&&o.quotes.start<t&&!o.quotes.end&&h.nameEnds&&h.equalsAt&&!h.valueStarts&&(h.valueStarts=t),o.quotes||!h.nameEnds||"="!==e[t]||h.valueStarts||h.equalsAt||(h.equalsAt=t),!o.quotes&&h.nameStarts&&h.nameEnds&&!h.valueStarts&&e[t].trim()&&"="!==e[t]&&(o.attributes.push(h),h={}),o.quotes||!h.nameStarts||h.nameEnds||(I&&"'\"".includes(e[h.nameStarts])?h.nameStarts<t&&e[t]===e[h.nameStarts]&&(h.nameEnds=t+1,h.name=e.slice(h.nameStarts,h.nameEnds)):e[t].trim()?"="===e[t]?h.equalsAt||(h.nameEnds=t,h.equalsAt=t,h.name=e.slice(h.nameStarts,h.nameEnds)):("/"===e[t]||x(t)||q(t))&&(h.nameEnds=t,h.name=e.slice(h.nameStarts,h.nameEnds),o.attributes.push(h),h={}):(h.nameEnds=t,h.name=e.slice(h.nameStarts,h.nameEnds))),o.quotes||!(o.nameEnds<t)||e[t-1].trim()||!e[t].trim()||"<>/!".includes(e[t])||h.nameStarts||o.lastClosingBracketAt||(h.nameStarts=t),null!==o.lastOpeningBracketAt&&o.lastOpeningBracketAt<t&&"/"===e[t]&&o.onlyPlausible&&(o.onlyPlausible=!1),null!==o.lastOpeningBracketAt&&o.lastOpeningBracketAt<t&&"/"!==e[t]&&(void 0===o.onlyPlausible&&(e[t].trim()&&!q(t)||o.slashPresent?o.onlyPlausible=!1:o.onlyPlausible=!0),!e[t].trim()||void 0!==o.nameStarts||q(t)||"/"===e[t]||x(t)||"!"===e[t]||(o.nameStarts=t,o.nameContainsLetters=!1)),o.nameStarts&&!o.quotes&&"string"==typeof e[t]&&e[t].toLowerCase()!==e[t].toUpperCase()&&(o.nameContainsLetters=!0),x(t)&&(ut(o,e,t)||o.quotes.value&&"number"==typeof o.lastOpeningBracketAt&&1==(H=o.quotes.value,(e.slice(o.lastOpeningBracketAt,t).match(new RegExp(H,"g"))||[]).length%2)&&!e.slice(o.lastOpeningBracketAt+1,t).includes("<")&&!e.slice(o.lastOpeningBracketAt+1,t).includes(">"))&&void 0!==o.lastOpeningBracketAt&&(o.lastClosingBracketAt=t,m=null,Object.keys(h).length&&(o.attributes.push(h),h={}),E.dumpLinkHrefsNearby?.enabled&&d.tagName&&!d.openingTagEnds&&(d.openingTagEnds=t)),(!I||">"===e[t])&&void 0!==o.lastOpeningBracketAt){if(void 0===o.lastClosingBracketAt){if(o.lastOpeningBracketAt<t&&!q(t)&&(void 0===e[t+1]||q(t+1)&&!o?.quotes?.value)&&o.nameContainsLetters&&"number"==typeof o.nameStarts){if(o.name=e.slice(o.nameStarts,o.nameEnds||t+1).toLowerCase(),i.length&&i[i.length-1][0]===o.lastOpeningBracketAt||i.push([o.lastOpeningBracketAt,t+1]),E.ignoreTags.includes(o.name)||k(t,E,o)||!pt.has(o.name)&&(o.onlyPlausible||E.stripRecognisedHTMLOnly)){o={},h={};continue}if((pt.has(o.name)||ht.has(o.name))&&(!1===o.onlyPlausible||!0===o.onlyPlausible&&o.attributes.length)||void 0===e[t+1]){S(E);let r,s=A(e,t,o.leftOuterWhitespace,t+1,o.lastOpeningBracketAt,o.lastClosingBracketAt);_&&"script"===o.name&&o.slashPresent&&(_=!1),r=null===s||null===g?null:`${s}${g}${s}`,E.cb({tag:o,deleteFrom:o.leftOuterWhitespace,deleteTo:t+1,insert:r,rangesArr:D,proposedReturn:[o.leftOuterWhitespace,t+1,r]}),T(),b(t,E,D)}if(!n.length||n[n.length-1][0]!==o.lastOpeningBracketAt&&n[n.length-1][1]!==t+1)if(E.stripTogetherWithTheirContents.includes(o.name)||E.stripTogetherWithTheirContents.includes("*")){let e;for(let t=s.length;t--;)s[t].name===o.name&&(e=s[t]);e?(n=n.filter((([t])=>t!==e.lastOpeningBracketAt)),n.push([e.lastOpeningBracketAt,t+1])):n.push([o.lastOpeningBracketAt,t+1])}else n.push([o.lastOpeningBracketAt,t+1])}}else if(t>o.lastClosingBracketAt&&e[t].trim()||void 0===e[t+1]||E.ignoreIndentations&&"\r\n".includes(e[t])){let r=o.lastClosingBracketAt===t?t+1:t;E.trimOnlySpaces&&r===N-1&&null!==m&&m<t&&(r=m),i.length&&i[i.length-1][0]===o.lastOpeningBracketAt||i.push([o.lastOpeningBracketAt,o.lastClosingBracketAt+1]);let s=E.ignoreTags.includes(o.name),l=k(t,E,o);if(!y||E.stripRecognisedHTMLOnly&&"string"==typeof o.name&&!pt.has(o.name.toLowerCase())&&!ht.has(o.name.toLowerCase())||!L&&(s||l)||L&&!E.onlyStripTags.includes(o.name)||E.ignoreTagsWithTheirContents.includes(o.name)){if(l)if(o.slashPresent){for(let e=a.length;e--;)if(a[e].name===o.name){a.splice(e,1);break}a.length||(y=!0)}else y&&(y=!1),a.push(o);E.cb({tag:o,deleteFrom:null,deleteTo:null,insert:null,rangesArr:D,proposedReturn:null}),o={},h={}}else if(!o.onlyPlausible||0===o.attributes.length&&o.name&&(pt.has(o.name.toLowerCase())||ht.has(o.name.toLowerCase()))||o.attributes?.some((e=>e.equalsAt))){n.length&&n[n.length-1][0]===o.lastOpeningBracketAt||n.push([o.lastOpeningBracketAt,o.lastClosingBracketAt+1]);let s,a=A(e,t,o.leftOuterWhitespace,r,o.lastOpeningBracketAt,o.lastClosingBracketAt);g="",f=!1,S(E,r),"string"==typeof g&&g.length?(s=`${a}${g}${"\n\n"===a?"\n":a}`,r!==o.lastClosingBracketAt+1||e[r]&&dt.has(e[r])||(s+=" "),!(o.leftOuterWhitespace===o.lastOpeningBracketAt&&D.last()&&D.last()[1]<o.lastOpeningBracketAt)||E?.dumpLinkHrefsNearby?.putOnNewLine&&dt.has(e[r])||(s=" "+s)):s=a,null===s||0!==o.leftOuterWhitespace&&ot(e,r-1)||E.dumpLinkHrefsNearby?.enabled&&"a"===o.name||(s=void 0);let i=0;if(f&&dt.has(e[r])){E.dumpLinkHrefsNearby?.putOnNewLine&&(s=`${e[r]}${s||""}`);let a=ot(e,r);a&&s?.endsWith("\n")?i+=a-t:(!a||a>t)&&i++}E.cb({tag:o,deleteFrom:o.leftOuterWhitespace,deleteTo:r+i,insert:s,rangesArr:D,proposedReturn:[o.leftOuterWhitespace,r+i,s]}),T(),b(t,E,D)}else o={};x(t)||(o={})}I&&(I=!1)}if((!_||"<"===e[t]&&ot(e,ot(e,t))&&"/"===e[ot(e,t)]&&e.startsWith("script",ot(e,ot(e,t))))&&q(t)&&!q(t-1)&&!"'\"".includes(e[t+1])&&(!"'\"".includes(e[t+2])||/\w/.test(e[t+1]))&&("c"!==e[t+1]||":"!==e[t+2])&&("f"!==e[t+1]||"m"!==e[t+2]||"t"!==e[t+3]||":"!==e[t+4])&&("s"!==e[t+1]||"q"!==e[t+2]||"l"!==e[t+3]||":"!==e[t+4])&&("x"!==e[t+1]||":"!==e[t+2])&&("f"!==e[t+1]||"n"!==e[t+2]||":"!==e[t+3])&&ut(o,e,t)){if(x(ot(e,t)))continue;if(o.nameEnds&&o.nameEnds<t&&!o.lastClosingBracketAt&&(!0===o.onlyPlausible&&o.attributes&&o.attributes.length||!1===o.onlyPlausible)){let r=A(e,t,o.leftOuterWhitespace,t,o.lastOpeningBracketAt,t);E.cb({tag:o,deleteFrom:o.leftOuterWhitespace,deleteTo:t,insert:r,rangesArr:D,proposedReturn:[o.leftOuterWhitespace,t,r]}),b(t,E,D),o={},h={}}if(void 0!==o.lastOpeningBracketAt&&o.onlyPlausible&&o.name&&!o.quotes&&(o.lastOpeningBracketAt=void 0,o.name=void 0,o.onlyPlausible=!1),!(void 0!==o.lastOpeningBracketAt&&o.onlyPlausible||o.quotes)&&(o.lastOpeningBracketAt=t,o.slashPresent=!1,o.attributes=[],null===l?o.leftOuterWhitespace=t:E.trimOnlySpaces&&0===l?o.leftOuterWhitespace=c||t:o.leftOuterWhitespace=l,"!--"==`${e[t+1]}${e[t+2]}${e[t+3]}`||"![CDATA["==`${e[t+1]}${e[t+2]}${e[t+3]}${e[t+4]}${e[t+5]}${e[t+6]}${e[t+7]}${e[t+8]}`)){let r,s=!0;"-"===e[t+2]&&(s=!1);for(let a=t;a<N;a++)if((!r&&s&&"]]>"==`${e[a-2]}${e[a-1]}${e[a]}`||!s&&"--\x3e"==`${e[a-2]}${e[a-1]}${e[a]}`)&&(r=a),r&&(r<a&&e[a].trim()||void 0===e[a+1])){let s=a;(void 0===e[a+1]&&!e[a].trim()||">"===e[a])&&(s+=1),i.length&&i[i.length-1][0]===o.lastOpeningBracketAt||i.push([o.lastOpeningBracketAt,r+1]),n.length&&n[n.length-1][0]===o.lastOpeningBracketAt||n.push([o.lastOpeningBracketAt,r+1]);let l=A(e,a,o.leftOuterWhitespace,s,o.lastOpeningBracketAt,r);E.cb({tag:o,deleteFrom:o.leftOuterWhitespace,deleteTo:s,insert:l,rangesArr:D,proposedReturn:[o.leftOuterWhitespace,s,l]}),t=a-1,">"===e[a]&&(t=a),o={},h={};break}}}e[t].trim()&&847!==e[t].charCodeAt(0)?(null!==l&&(!o.quotes&&h.equalsAt>l-1&&h.nameEnds&&h.equalsAt>h.nameEnds&&'"'!==e[t]&&"'"!==e[t]&&(v(h)&&o.attributes.push(h),h={},o.equalsSpottedAt=void 0),l=null),p||(p=!0,y&&!_&&"number"==typeof u&&t&&u<t-1&&(e.slice(u+1,t).trim()?u=null:E.ignoreIndentations||D.push([u+1,t])))):(null===l&&(l=t,void 0!==o.lastOpeningBracketAt&&o.lastOpeningBracketAt<t&&o.nameStarts&&o.nameStarts<o.lastOpeningBracketAt&&t===o.lastOpeningBracketAt+1&&!s.some((e=>e.name===o.name))&&(o.onlyPlausible=!0,o.name=void 0,o.nameStarts=void 0)),"\n"!==e[t]&&"\r"!==e[t]||(u=t,p&&(p=!1)))," "===e[t]?null===c&&(c=t):null!==c&&(c=null),"script"===o.name&&(_=!o.slashPresent)}var H,j;if(e&&!E.ignoreIndentations&&(E.trimOnlySpaces&&" "===e[0]||!E.trimOnlySpaces&&!e[0].trim()))for(let t=0;t<N;t++){if(E.trimOnlySpaces&&" "!==e[t]||!E.trimOnlySpaces&&e[t].trim()){D.push([0,t]);break}e[t+1]||D.push([0,t+1])}if(e&&(E.trimOnlySpaces&&" "===e[~-e.length]||!E.trimOnlySpaces&&!e[~-e.length].trim()))for(let t=e.length;t--;)if(E.trimOnlySpaces&&" "!==e[t]||!E.trimOnlySpaces&&e[t].trim()){D.push([t+1,N]);break}let M=D.current();if(!t?.cb&&M&&(M[0]&&!M[0][0]&&(M[0][1],D.ranges[0]=[D.ranges[0][0],D.ranges[0][1]]),M[M.length-1]&&M[M.length-1][1]===e.length&&(M[M.length-1][0],D.ranges))){let t=D.ranges[D.ranges.length-1][0];e[t-1]&&(E.trimOnlySpaces&&" "===e[t-1]||!E.trimOnlySpaces&&!e[t-1].trim())&&(t-=1);let r=D.ranges[D.ranges.length-1][2];D.ranges[D.ranges.length-1]=[t,D.ranges[D.ranges.length-1][1]],r?.trim()&&D.ranges[D.ranges.length-1].push(r.trimEnd())}return{log:{timeTakenInMilliseconds:Date.now()-r},result:tt(e,D.current()),ranges:D.current(),allTagLocations:i,filteredTagLocations:n}}}},t={};function r(s){var a=t[s];if(void 0!==a)return a.exports;var i=t[s]={exports:{}};return e[s](i,i.exports,r),i.exports}r.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),(()=>{var e=r(967);class t{constructor(e,t,r,s){this.slideIds={500:"homelands",600:"pathways1",700:"pathways2",800:"villagerssettlers",900:"lines"},this.L=t,this.d3=r,this.homelandsSlide=null,this.pathways1Slide=null,this.pathways2Slide=null,this.villagerssettlersSlide=null,this.linesSlide=[],this.svgDrawn=!1,this.introRunning=null,this.geometryUris=e,this.startingBounds=s,this.triggered=0}sleep(e){return new Promise((t=>setTimeout(t,e)))}disableMapMovement(e){e.zoomControl.disable(),e.dragging.disable()}enableMapMovement(e){e.zoomControl.enable(),e.dragging.enable()}stopAll(){this.introRunning=null,this.svg.selectAll("*").interrupt()}clearSvg(){this.svg.selectAll("*").remove(),this.svgDrawn=!1}async SectionIntro(t,r){if(console.log("Section Intro counter: "+this.triggered),this.triggered+=1,this.slideIds[r+""]){let s=!1;this.stopAll(),this.clearSvg();let a=async function(){switch(this.slideIds[r+""]){case"homelands":console.log("homelands"),this.introRunning="homelands",s=await this.playHomelandsIntro(t);break;case"pathways1":this.introRunning="pathways1",console.log("pathways1"),s=await this.playPathways1Intro(t,!0,!0,2500,1500,1e3);break;case"pathways2":console.log("pathways2"),s=await this.playPathways2Intro(t,0);break;case"villagerssettlers":console.log("settlers"),this.introRunning="villagerssettlers",s=await this.playvillagerssettlersSlide(t);break;case"lines":console.log("lines"),this.introRunning="lines",s=await this.playLinesIntro(t);break;case e.defaults:this.introRunning=null}t.off("moveend",a)}.bind(this);t.on("moveend",a);let i=null;switch(this.slideIds[r+""]){case"homelands":i=this.startingBounds.homelands;break;case"pathways1":i=this.startingBounds.pathways1;break;case"pathways2":i=this.startingBounds.pathways2;break;case"villagerssettlers":i=this.startingBounds.villagerssettlers;break;case"lines":i=this.startingBounds.lines}i&&t.flyToBounds(i),this.svgDrawn=s}return this.svgDrawn}async loadShapeFile(e){let t=await fetch(e);return await t.json()}async loadD3(e){this.L.svg({clickable:!0}).addTo(e);const t=this.d3.select(e.getPanes().overlayPane);return this.svg=t.select("svg").attr("pointer-events","auto"),this.featureLineGenerator=this.d3.line().x((t=>e.latLngToLayerPoint([t[1],t[0]]).x)).y((t=>e.latLngToLayerPoint([t[1],t[0]]).y)),this.svg}featureToPath(e){let t="";switch(e.geometry.type){case"MultiPolygon":t=this.featureLineGenerator(e.geometry.coordinates[0][0]);break;case"MultiLineString":t=this.featureLineGenerator(e.geometry.coordinates[0])}return t}getHomelandLabel(e,t){let r="";if(this.homelandsLabels)for(let s=0;s<this.homelandsLabels.length;s++)if(parseInt(this.homelandsLabels[s].id)==parseInt(e)){r=t?this.homelandsLabels[s]["Current normalised text"]:this.homelandsLabels[s].Indigenous_name;break}return r}async drawHomelandsIntro(e,t){this.svg.selectAll(".homelands").data(t).join("path").attr("class","homelands").attr("title",function(e){this.getHomelandLabel(e.properties.id,!0)}.bind(this)).attr("stroke","black").attr("fill","none").attr("stroke-width","0").attr("d",(e=>this.featureToPath(e))),this.svg.selectAll(".homelands").each(((e,t,r)=>{const s=this.d3.select(r[t]).node().getBBox(),a=s.x+s.width/2,i=s.y+s.height/2;this.svg.append("text").text(this.getHomelandLabel(e.properties.id,!0)).attr("indigenousLabel",this.getHomelandLabel(e.properties.id,!1)).attr("class","homelandLabel").attr("x",a).attr("y",i).attr("opacity",1).attr("fill","#132b19").attr("text-anchor","middle").transition().delay(((e,t)=>20*t+2e3)).duration(2e3).style("opacity",0).on("end",(function(e,t,r){r[t].innerHTML=r[t].getAttribute("indigenousLabel"),d3.select(r[t]).transition().delay(((e,t)=>20*t)).duration(2e3).style("opacity",1)}))}))}async playHomelandsIntro(e){if(!this.homelandsLabels){let e=await this.loadShapeFile(this.geometryUris.homelands);e&&(this.homelandsLabels=e.homelandsData)}return this.homelandsSlide?(await this.sleep(500),await this.drawHomelandsIntro(e,this.homelandsSlide.features)):console.log("homelands slide not present!"),!0}async playPathways1Intro(e,t,r,s,a,i){if("pathways1"!=this.introRunning)return!1;let n=0;return"pathways1"==this.introRunning&&this.pathways1Slide&&this.pathways1Slide.features.length>0&&(this.svg.selectAll(".river").data(this.pathways1Slide.features).join("path").attr("class","pathways1 river").attr("stroke","blue").attr("fill","none").attr("stroke-width","1.5").attr("opacity",1).attr("d",(e=>this.featureToPath(e))),this.svg.selectAll("path.river").each((function(e){e.totalLength=this.getTotalLength()})).attr("stroke-dashoffset",(e=>e.totalLength)).attr("stroke-dasharray",(e=>e.totalLength)).transition().duration(s).attr("stroke-dashoffset",0).on("end",function(r,s,o){n>=o.length-1?(this.d3.selectAll(".river").transition().attr("opacity",0).delay(a).duration(i),t&&this.playPathways2Intro(e,a+i)):n+=1}.bind(this))),!0}static splitFeatures(e){let t={points:[],polys:[],lines:[]};for(let r in e)if(e[r].geometry&&e[r].geometry.type)switch(e[r].geometry.type){case"MultiPolygon":t.polys.push(e[r]);break;case"MultiLineString":t.lines.push(e[r]);break;case"Point":t.points.push(e[r])}return t}async drawPathway(e,t,r){return this.svg.selectAll("path.road-"+e.properties.id).each((function(e){e.totalLength=this.getTotalLength()})).attr("stroke-dashoffset",(e=>e.totalLength)).attr("stroke-dasharray",(e=>e.totalLength)).attr("opacity",1).transition().delay(r).duration(t).attr("stroke-dashoffset",0).end(),!0}async playPathways2Intro(e,r){let s=2e3;if(console.log("pathways2"),!this.pathways2Slide||0==this.pathways2Slide.features.length)return!1;let a=t.splitFeatures(this.pathways2Slide.features);a.lines&&a.lines.length>0&&(this.svg.selectAll(".roadHighlight").data(a.lines).join("path").attr("class",(e=>"pathways2 roadHighlist road-"+e.properties.id)).attr("lineCap","square").attr("lineJoin","round").attr("stroke","#000000").attr("weight","5").attr("opacity",0).attr("fill","none").attr("stroke-width","5").attr("d",(e=>this.featureToPath(e))),this.svg.selectAll(".road").data(a.lines).join("path").attr("class",(e=>"pathways2 road-"+e.properties.id)).attr("lineCap","square").attr("lineJoin","arcs").attr("stroke","#FFFFFF").attr("weight","3").attr("opacity",1).attr("fill","none").attr("stroke-width","3").attr("d",(e=>this.featureToPath(e))),this.drawPathway(a.lines[0],s,r),this.drawPathway(a.lines[1],s,r+s));let i=this.pathways2Slide.points.includes.id,n=[];for(let e=0;e<i.length;e++)for(let t=0;t<a.points.length;t++)if(a.points[t].properties.id===i[e]){n.push(a.points[t]);break}return n&&n.length>0&&(console.log(n),this.svg.selectAll("image.pathways2").data(n).join("svg:image").attr("class","pathways2 dipsites").attr("xlink:href","/assets/img/icons/council-fire.svg").attr("width","1%").attr("x",(t=>e.latLngToLayerPoint([t.geometry.coordinates[1],t.geometry.coordinates[0]]).x)).attr("y",(t=>e.latLngToLayerPoint([t.geometry.coordinates[1],t.geometry.coordinates[0]]).y)).attr("opacity",0).transition().delay(((e,t)=>r+500*t)).attr("opacity",1).duration(1e3)),!0}async playvillagerssettlersSlide(e){if(!this.villagerssettlersSlide||0==this.villagerssettlersSlide.features.length)return!1;let r=t.splitFeatures(this.villagerssettlersSlide.features);this.svg.selectAll("circle.villagerssettlers").data(r.points).join("square").attr("class","villagerssettlers").attr("fill",(function(e){return e.properties&&12==e.properties.sub_type?"#5d1206":"#427d67"})).attr("cx",(t=>e.latLngToLayerPoint([t.geometry.coordinates[1],t.geometry.coordinates[0]]).x)).attr("cy",(t=>e.latLngToLayerPoint([t.geometry.coordinates[1],t.geometry.coordinates[0]]).y)).attr("r",20).transition().attr("r",3).duration(1e3);let s=[];for(let e=0;e<r.points.length;e++){let t=r.points[e];t.properties&&t.properties.sub_type&&12==t.properties.sub_type&&s.push(t)}let a="circle.villagerssettlers.pulse";return this.svg.selectAll(a).data(s).join("circle").attr("class","villagerssettlers pulse").attr("fill","black").attr("opacity","0.5").attr("cx",(t=>e.latLngToLayerPoint([t.geometry.coordinates[1],t.geometry.coordinates[0]]).x)).attr("cy",(t=>e.latLngToLayerPoint([t.geometry.coordinates[1],t.geometry.coordinates[0]]).y)).attr("r",3),this.pulseTransition(a),!0}async pulseTransition(e){return this.svg.selectAll(e).attr("r",3).attr("opacity","0").attr("fill","black").transition().delay(1e3).duration(1e3).attr("r",10).attr("opacity","0.5").styleTween("fill",(()=>this.d3.interpolateRgb("black","red"))).transition().duration(500).attr("opacity","0").on("end",function(){"villagerssettlers"==this.introRunning&&this.pulseTransition(e)}.bind(this)),!0}async drawLines(e,t,r,s,a){if("lines"==this.introRunning)return this.svg.selectAll("."+a).data(e).join("path").attr("class",s+" "+a).attr("stroke",r).attr("fill","none").attr("stroke-width","1").attr("d",(e=>this.featureToPath(e))),this.svg.selectAll("path."+a).each((function(e){e.totalLength=this.getTotalLength()})).attr("stroke-dashoffset",(e=>e.totalLength)).attr("stroke-dasharray",(e=>e.totalLength)).transition().duration(t).attr("stroke-dashoffset",0).end()}async playLinesIntro(e){let t="border";if(this.linesSlide&&this.linesSlide.length>0&&"lines"==this.introRunning){for(let e=0;e<this.linesSlide.length;e++)this.svg.selectAll("."+t).data(this.linesSlide[e].features).join("path").attr("class","lines "+t+e).attr("stroke","black").attr("opacity",1).attr("fill","none").attr("stroke-width","1").attr("d",(e=>this.featureToPath(e)));for(let e=0;e<this.linesSlide.length;e++)this.svg.selectAll("path."+t+e).each((function(t){t.totalLength=this.getTotalLength();let r=e>0?2500:0;t.drawDelay=(2500+r)*e})).attr("stroke-dashoffset",(e=>e.totalLength)).attr("stroke-dasharray",(e=>e.totalLength)).transition().delay((e=>e.drawDelay)).duration(2500).attr("stroke-dashoffset",0).on("end",function(r,s,a){e!=this.linesSlide.length-1&&this.d3.selectAll("path."+t+e).transition().attr("opacity",0).duration(1250)}.bind(this))}return!0}}var s=Uint8Array,a=Uint16Array,i=Int32Array,n=new s([0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0,0,0,0]),o=new s([0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13,0,0]),l=new s([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]),c=function(e,t){for(var r=new a(31),s=0;s<31;++s)r[s]=t+=1<<e[s-1];var n=new i(r[30]);for(s=1;s<30;++s)for(var o=r[s];o<r[s+1];++o)n[o]=o-r[s]<<5|s;return{b:r,r:n}},u=c(n,2),p=u.b,h=u.r;p[28]=258,h[258]=28;for(var d=c(o,0),g=d.b,f=(d.r,new a(32768)),m=0;m<32768;++m){var y=(43690&m)>>1|(21845&m)<<1;y=(61680&(y=(52428&y)>>2|(13107&y)<<2))>>4|(3855&y)<<4,f[m]=((65280&y)>>8|(255&y)<<8)>>1}var b=function(e,t,r){for(var s=e.length,i=0,n=new a(t);i<s;++i)e[i]&&++n[e[i]-1];var o,l=new a(t);for(i=1;i<t;++i)l[i]=l[i-1]+n[i-1]<<1;if(r){o=new a(1<<t);var c=15-t;for(i=0;i<s;++i)if(e[i])for(var u=i<<4|e[i],p=t-e[i],h=l[e[i]-1]++<<p,d=h|(1<<p)-1;h<=d;++h)o[f[h]>>c]=u}else for(o=new a(s),i=0;i<s;++i)e[i]&&(o[i]=f[l[e[i]-1]++]>>15-e[i]);return o},v=new s(288);for(m=0;m<144;++m)v[m]=8;for(m=144;m<256;++m)v[m]=9;for(m=256;m<280;++m)v[m]=7;for(m=280;m<288;++m)v[m]=8;var w=new s(32);for(m=0;m<32;++m)w[m]=5;var A=b(v,9,1),S=b(w,5,1),q=function(e){for(var t=e[0],r=1;r<e.length;++r)e[r]>t&&(t=e[r]);return t},x=function(e,t,r){var s=t/8|0;return(e[s]|e[s+1]<<8)>>(7&t)&r},k=function(e,t){var r=t/8|0;return(e[r]|e[r+1]<<8|e[r+2]<<16)>>(7&t)},T=function(e,t,r){return(null==t||t<0)&&(t=0),(null==r||r>e.length)&&(r=e.length),new s(e.subarray(t,r))},E=["unexpected EOF","invalid block type","invalid length/literal","invalid distance","stream finished","no stream handler",,"no callback","invalid UTF-8 data","extra field too long","date not in range 1980-2099","filename too long","stream finishing","invalid zip data"],O=function(e,t,r){var s=new Error(t||E[e]);if(s.code=e,Error.captureStackTrace&&Error.captureStackTrace(s,O),!r)throw s;return s},F=function(e,t,r,a){var i=e.length,c=a?a.length:0;if(!i||t.f&&!t.l)return r||new s(0);var u=!r,h=u||2!=t.i,d=t.i;u&&(r=new s(3*i));var f,m=function(e){var t=r.length;if(e>t){var a=new s(Math.max(2*t,e));a.set(r),r=a}},y=t.f||0,v=t.p||0,w=t.b||0,E=t.l,F=t.d,L=t.m,C=t.n,D=8*i;do{if(!E){y=x(e,v,1);var _=x(e,v+1,3);if(v+=3,!_){var I=e[(f=v,(z=4+((f+7)/8|0))-4)]|e[z-3]<<8,R=z+I;if(R>i){d&&O(0);break}h&&m(w+I),r.set(e.subarray(z,R),w),t.b=w+=I,t.p=v=8*R,t.f=y;continue}if(1==_)E=A,F=S,L=9,C=5;else if(2==_){var B=x(e,v,31)+257,N=x(e,v+10,15)+4,P=B+x(e,v+5,31)+1;v+=14;for(var H=new s(P),j=new s(19),M=0;M<N;++M)j[l[M]]=x(e,v+3*M,7);v+=3*N;var U=q(j),$=(1<<U)-1,V=b(j,U,1);for(M=0;M<P;){var z,W=V[x(e,v,$)];if(v+=15&W,(z=W>>4)<16)H[M++]=z;else{var G=0,J=0;for(16==z?(J=3+x(e,v,3),v+=2,G=H[M-1]):17==z?(J=3+x(e,v,7),v+=3):18==z&&(J=11+x(e,v,127),v+=7);J--;)H[M++]=G}}var Z=H.subarray(0,B),Y=H.subarray(B);L=q(Z),C=q(Y),E=b(Z,L,1),F=b(Y,C,1)}else O(1);if(v>D){d&&O(0);break}}h&&m(w+131072);for(var X=(1<<L)-1,K=(1<<C)-1,Q=v;;Q=v){var ee=(G=E[k(e,v)&X])>>4;if((v+=15&G)>D){d&&O(0);break}if(G||O(2),ee<256)r[w++]=ee;else{if(256==ee){Q=v,E=null;break}var te=ee-254;if(ee>264){var re=n[M=ee-257];te=x(e,v,(1<<re)-1)+p[M],v+=re}var se=F[k(e,v)&K],ae=se>>4;if(se||O(3),v+=15&se,Y=g[ae],ae>3&&(re=o[ae],Y+=k(e,v)&(1<<re)-1,v+=re),v>D){d&&O(0);break}h&&m(w+131072);var ie=w+te;if(w<Y){var ne=c-Y,oe=Math.min(Y,ie);for(ne+w<0&&O(3);w<oe;++w)r[w]=a[ne+w]}for(;w<ie;++w)r[w]=r[w-Y]}}t.l=E,t.p=Q,t.b=w,t.f=y,E&&(y=1,t.m=L,t.d=F,t.n=C)}while(!y);return w!=r.length&&u?T(r,0,w):r.subarray(0,w)},C=new s(0);function D(e,t){var r,a,i=function(e){31==e[0]&&139==e[1]&&8==e[2]||O(6,"invalid gzip data");var t=e[3],r=10;4&t&&(r+=2+(e[10]|e[11]<<8));for(var s=(t>>3&1)+(t>>4&1);s>0;s-=!e[r++]);return r+(2&t)}(e);return i+8>e.length&&O(6,"invalid gzip data"),F(e.subarray(i,-8),{i:2},t&&t.out||new s((a=(r=e).length,(r[a-4]|r[a-3]<<8|r[a-2]<<16|r[a-1]<<24)>>>0)),t&&t.dictionary)}function _(e,t){return F(e.subarray((r=e,s=t&&t.dictionary,(8!=(15&r[0])||r[0]>>4>7||(r[0]<<8|r[1])%31)&&O(6,"invalid zlib data"),(r[1]>>5&1)==+!s&&O(6,"invalid zlib data: "+(32&r[1]?"need":"unexpected")+" dictionary"),2+(r[1]>>3&4)),-4),{i:2},t&&t.out,t&&t.dictionary);var r,s}var I="undefined"!=typeof TextDecoder&&new TextDecoder;try{I.decode(C,{stream:!0})}catch(e){}function R(e,t){if(t){for(var r="",s=0;s<e.length;s+=16384)r+=String.fromCharCode.apply(null,e.subarray(s,s+16384));return r}if(I)return I.decode(e);var a=function(e){for(var t="",r=0;;){var s=e[r++],a=(s>127)+(s>223)+(s>239);if(r+a>e.length)return{s:t,r:T(e,r-1)};a?3==a?(s=((15&s)<<18|(63&e[r++])<<12|(63&e[r++])<<6|63&e[r++])-65536,t+=String.fromCharCode(55296|s>>10,56320|1023&s)):t+=1&a?String.fromCharCode((31&s)<<6|63&e[r++]):String.fromCharCode((15&s)<<12|(63&e[r++])<<6|63&e[r++]):t+=String.fromCharCode(s)}}(e),i=a.s;return(r=a.r).length&&O(8),i}"function"==typeof queueMicrotask?queueMicrotask:"function"==typeof setTimeout&&setTimeout;class B{constructor(e,t,r){this.pathPrefix="",this.overlay=null,this.storyUris=e,this.map=null,this.L=t,this.d3=r,this.layerGroups={},this.storyFrames=[],this.featureTypes=["points","lines","polys"],this.mapMinZoom=1,this.mapMaxZoom=11,this.slideElementTagName="article",this.topSlideElement=null,this.highlightLineStyle={stroke:!0,color:"#0000ff",weight:5,opacity:1},this.defaultLineStyle={stroke:!0,color:"#ff0000",fillColor:"#ff0000",weight:2,opacity:.6,fill:!0},this.slides={},this.lastSlideDisplayed=null,this.slideElements={},this.allFeatures=[],this.allFeaturesLayer=null,this.textFeatures={},this.textMinZoomLevel=8,this.defaultTextAttributes={fill:"black","font-family":"EB Garamond, serif","font-weight":"bold",offset:-10},this.initStyles(),this.mapLookup={1:"White, 1590",2:"Bleau, 1650",3:"Seller, 1676",4:"n/a",5:"Foster, 1677",6:"Moll, 1720",7:"Burghers, 1738",8:"Evans, 1752",9:"n/a",10:"n/a",11:"n/a",12:"Mitchell, 1755",13:"n/a",14:"n/a",15:"n/a",16:"n/a",17:"Buell, 1784",18:"n/a",19:"Bradley, 1796"},this.exploreHash="#s-6",this.exploreFilterControl={id:0,fid:0,sub_type:[[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]],maps:[],features:[],lines:{includes:{},excludes:{}},points:{includes:{},excludes:{}},polys:{includes:{},excludes:{}},excludes:{}},this.exploreSelectors={explore_filter:"input.explore_filter",map_filter:"input.map_selector",explore_counter:"totalExploreFiltersApplied",map_counter:"totalMapFiltersApplied",selectall_maps:"selectallMaps",selectall_features:"selectallFeatures"},this.exploreFiltersElementId="filter-wrapper",this.exploreFiltersEnabled=!1,this.exploreFiltersDisabledClass="filterDisabled",this.filterControlsVisible=!1,this.totalExploreFilters=document.querySelectorAll(this.exploreSelectors.explore_filter).length,this.shadowFeatures=[],this.exploreSlideId=1e3,this.totalExploreFiltersApplied=0,this.totalMapFilters=document.querySelectorAll(this.exploreSelectors.map_filter).length,this.totalMapFiltersApplied=0,this.exploreFeatureSubtypes=[10,4,12,13,3,12,8,11,14,7,5],this.exploreFeatures=[],this.initExploreFilters()}initStyles(){this.lineBorderStyle={stroke:!0,dashArray:"5 5",lineCap:"square",color:"#696969",weight:2.5,fill:!1},this.lineLandRouteStyle={stroke:!0,lineCap:"square",lineJoin:"arcs",color:"#FFFFFF",weight:3,fill:!1},this.lineLandRouteHighlightStyle={stroke:!0,lineCap:"square",lineJoin:"round",color:"#000000",weight:5,fill:!1},this.lineSeaRouteStyle={stroke:!0,dashArray:"7 6",lineCap:"square",lineJoin:"arcs",color:"#ffbd59",weight:3,fill:!1},this.lineRiverRouteStyle={stroke:!0,color:"#0059a2",lineCap:"square",lineJoin:"round",weight:2,fill:!1,opacity:.5},this.lineRiverRouteStyleLabel={stroke:!0,smoothFactor:15,dashArray:"7 9",color:"#000000FF",lineCap:"square",lineJoin:"round",weight:2,fill:!1},this.lineMiscStyle={stroke:!0,color:"#000000",weight:4,fill:!1},this.lineToponymStyle={stroke:!0,color:"#ff0000",weight:5,fill:!1},this.indigenousAreaStyle={stroke:!0,color:"#4b5d04",fillColor:"#4b5d04",lineCap:"square",weight:2,fill:!0,opacity:1,fillOpacity:.1},this.europeanAreaStyle={stroke:!0,color:"#e29e21 ",fillColor:"#e29e21 ",lineCap:"square",weight:2,fill:!0,opacity:.5,fillOpacity:.1},this.haudenosauneeAreaStyle={stroke:!0,lineCap:"square",color:"#4b5d04",fill:"url("+this.pathPrefix+"/assets/img/stories/hatch-green.webp)",weight:2,opacity:1,fillOpacity:1},this.europeanAnnoStyle={stroke:!0,lineCap:"square",color:"#e29e21",fill:"url("+this.pathPrefix+"/assets/img/stories/hatch-yellow.webp)",weight:2,opacity:1,fillOpacity:1},this.polyBorderStyle={stroke:!0,dashArray:"4 6",color:"#000000",fillColor:"#000000",lineCap:"square",weight:2,fill:!0,opacity:.2,fillOpacity:.25},this.polySettlementStyle={stroke:!0,dashArray:"2 6",lineCap:"square",lineJoin:"arcs",color:"#ff0000",fillColor:"#ff0000",weight:2,fill:!0,opacity:.75,fillOpacity:.5},this.polySeaRouteStyle={stroke:!0,dashArray:"7 6",lineCap:"square",lineJoin:"arcs",color:"#ffbd59",fillColor:"#ffbd59",weight:2,fill:!0,opacity:.75,fillOpacity:.5},this.polyDescriptiveStyle={stroke:!0,color:"#696969",fillColor:"#696969",weight:1,fill:!0,opacity:.5,fillOpacity:.2},this.polyRiverRouteStyle={stroke:!0,dashArray:"7 6",lineCap:"square",lineJoin:"arcs",color:"#00c2cb",fillColor:"#00c2cb",weight:2,fill:!0,opacity:.75,fillOpacity:.5},this.polyMiscStyle={stroke:!0,fillColor:"#ff0000",weight:1,fill:!0,opacity:.5,fillOpacity:.5},this.polyNativeStyle={stroke:!0,fillColor:"#f8600e",dashArray:"7 6",color:"f8600e",weight:2,fill:!0,opacity:.25,fillOpacity:.2},this.polyEuroStyle={stroke:!0,fillColor:"#00ff00",weight:2,fill:!0,opacity:.5,fillOpacity:.2},this.polyAnnoStyle={stroke:!0,dashArray:"10 10",lineCap:"square",lineJoin:"arcs",color:"#8C8C8C",fillColor:"#8C8C8C00",fill:"url("+this.pathPrefix+"/assets/img/stories/horizontal_hatch_print_8C8C8C.webp)",weight:2,opacity:.3,fillOpacity:1},this.polyToponymStyle={stroke:!0,dashArray:"7 6",lineCap:"square",lineJoin:"arcs",color:"#ff0000",fillColor:"#ff0000",weight:1,fill:!0,opacity:.5,fillOpacity:.5},this.polyDomainNativeStyle={stroke:!0,lineCap:"square",lineJoin:"arcs",color:"#f8600e",fillOpacity:.5,fillColor:"#f8600e00",fill:"url("+this.pathPrefix+"/assets/img/stories/vertical_hatch_orange_f8600e.webp)",weight:3,opacity:1},this.polyDomainHaudenasuaneeStyle={stroke:!0,lineCap:"square",lineJoin:"arcs",color:"#8C8C8C",fillColor:"#8C8C8C00",fill:"url("+this.pathPrefix+"/assets/img/stories/vertical_hatch_grey_8C8C8C.webp)",weight:3,opacity:.3},this.polyDomainEuroStyle={stroke:!0,lineCap:"square",lineJoin:"arcs",color:"#8D33CC",fillOpacity:.5,fillColor:"#8D33CC00",fill:"url("+this.pathPrefix+"/assets/img/stories/vertical_hatch_purple_8D33CC.webp)",weight:3,opacity:1},this.councilFireIcon=this.L.icon({iconUrl:this.pathPrefix+"/assets/img/stories/council_fire.webp",iconSize:[22,22],iconAnchor:[11,21],popupAnchor:[-3,-20]}),this.indigenousSettlementIcon=this.L.icon({iconUrl:this.pathPrefix+"/assets/img/stories/settlement_indig.webp",iconSize:[20,20],shadowSize:[20,20],iconAnchor:[10,19],shadowAnchor:[10,19],popupAnchor:[-3,-20]}),this.europeanSettlementIcon=this.L.icon({iconUrl:this.pathPrefix+"/assets/img/stories/settlement_euro.webp",iconSize:[20,20],shadowSize:[20,20],iconAnchor:[10,19],shadowAnchor:[10,19],popupAnchor:[-3,-20]}),this.indigenousPlacenameIcon=this.L.icon({iconUrl:this.pathPrefix+"/assets/img/stories/placename_indig.webp",iconSize:[20,20],shadowSize:[20,20],iconAnchor:[10,19],shadowAnchor:[10,19],popupAnchor:[-3,-20]}),this.europeanPlacenameIcon=this.L.icon({iconUrl:this.pathPrefix+"/assets/img/stories/placename_euro.webp",iconSize:[20,20],shadowSize:[20,20],iconAnchor:[10,19],shadowAnchor:[10,19],popupAnchor:[-3,-20]})}async loadShapeFile(e){if(e.indexOf("gz")>-1){const s=R(31==(t=new Uint8Array(await fetch(e).then((e=>e.arrayBuffer()))))[0]&&139==t[1]&&8==t[2]?D(t,r):8!=(15&t[0])||t[0]>>4>7||(t[0]<<8|t[1])%31?function(e,t){return F(e,{i:2},t&&t.out,t&&t.dictionary)}(t,r):_(t,r));return JSON.parse(s)}{let t=await fetch(e);return await t.json()}var t,r}async loadShapes(e){let t=[],r=[],s=[];for(let r=0;r<e.length;r++)t.push(this.loadShapeFile(e[r]));await Promise.all(t).then((e=>{for(let t=0;t<e.length;t++)r.push(...e[t].features)}));for(let e=0;e<r.length;e++){let t=r[e];t.properties&&(this.allFeatures.push(t),s.push(t))}return s}async loadSlides(){if(this.storyUris&&this.storyUris.slides){let e=await this.loadShapeFile(this.storyUris.slides);this.slides=e.slides}}getSlideById(e){for(let t=0;t<this.slides.length;t++)if(this.slides[t].id==e)return this.slides[t];console.log("Warning! slide "+e+" not found")}pointToLayer(e,t){switch(e.properties.sub_type){case 1:return this.L.circleMarker(t,{radius:4,fillColor:"#7A0707",color:"#7A0707",weight:.5,opacity:1,fillOpacity:1,bubblingMouseEvents:!0});case 4:return 1===e.properties.identity?this.L.marker(t,{icon:this.europeanSettlementIcon,bubblingMouseEvents:!0}):this.L.marker(t,{icon:this.indigenousSettlementIcon,bubblingMouseEvents:!0});case 5:return this.L.circleMarker(t,{radius:4,fillColor:"#0000ff",color:"#000",weight:.5,opacity:1,fillOpacity:1,bubblingMouseEvents:!0});case 6:return this.L.circleMarker(t,{radius:4,fillColor:"#ffbd59",color:"#ffbd59",weight:.5,opacity:1,fillOpacity:.9,bubblingMouseEvents:!0});case 7:return new this.L.RegularPolygonMarker(t,{numberOfSides:4,rotation:-45,radius:5,fill:!0,fillColor:"#696969",color:"#000000",weight:.5,fillOpacity:1,stroke:!0,bubblingMouseEvents:!0});case 8:return new this.L.RegularPolygonMarker(t,{numberOfSides:4,rotation:-45,radius:5,fill:!0,fillColor:"#0059a2",color:"#000000",weight:.5,fillOpacity:1,stroke:!0,bubblingMouseEvents:!0});case 9:return this.L.circleMarker(t,{radius:4,fillColor:"#000000",color:"#000",weight:.5,opacity:1,fillOpacity:1,bubblingMouseEvents:!0});case 10:return 1===e.properties.identity?this.L.marker(t,{icon:this.europeanPlacenameIcon,bubblingMouseEvents:!0}):this.L.marker(t,{icon:this.indigenousPlacenameIcon,bubblingMouseEvents:!0});case 12:return this.L.marker(t,{icon:this.councilFireIcon,bubblingMouseEvents:!0});default:return this.L.circleMarker(t,{radius:4,fillColor:"#000ff",color:"#0000ff",weight:.5,opacity:1,fillOpacity:1,bubblingMouseEvents:!0})}}initStoryFeatureLayers(){for(let e=0;e<this.slides.length;e++){let t=this.slides[e];this.shadowFeatures.length=0,t.layer=this.L.geoJSON(t.features,{pointToLayer:this.pointToLayer.bind(this),onEachFeature:this.onEachFeature.bind(this)}),this.shadowFeatures&&this.shadowFeatures.length>0&&(t.shadowLayer=this.L.geoJSON(this.shadowFeatures,{pane:"lane-lines-pane",onEachFeature:this.onEachShadowFeature.bind(this)}))}}initAllFeaturesLayer(){this.allFeaturesLayer=this.L.geoJSON(this.allFeatures,{pointToLayer:this.pointToLayer.bind(this),onEachFeature:this.onEachFeature.bind(this)})}getSlideElements(){this.slideElements=Array.from(document.getElementsByTagName(this.slideElementTagName)),this.slideElements.sort((function(e,t){return e.offsetTop<0?1:t.offsetTop<0?-1:e.offsetTop-t.offsetTop}))}fadeLayerLeaflet(e,t,r,s,a){let i=t;setTimeout((function t(){i<r&&(e.setStyle({opacity:i,fillOpacity:i}),i+=s),setTimeout(t,a)}),a)}async triggerSlideMapEvents(e){if(e==this.exploreSlideId)this.storyFeatureLayerGroup.clearLayers(),this.loadExploreLayer();else if(this.d3Intro.slideIds[e+""])console.log("Section intro :"+e),this.storyFeatureLayerGroup.clearLayers(),this.d3Intro.SectionIntro(this.map,e,this.slides),this.filterControlsVisible&&this.toggleFilterControls();else if(e!=this.exploreSlideId){this.d3Intro.stopAll(this.map),this.d3Intro.clearSvg(),this.filterControlsVisible&&this.toggleFilterControls();let t=this.getSlideById(e);if(t){if(this.clearFeatureText(),t.layer&&this.storyFeatureLayerGroup.clearLayers(),this.map.flyToBounds(this.getStoryFrameBounds(t.fid)),t.layer){let e=function(){t.layer.setStyle({opacity:0,fillOpacity:0}),t.shadowLayer&&this.storyFeatureLayerGroup.addLayer(t.shadowLayer),this.storyFeatureLayerGroup.addLayer(t.layer),this.fadeLayerLeaflet(t.layer,0,1,.2,.01),this.map.off("moveend",e)}.bind(this);this.map.on("moveend",e)}this.lastSlideDisplayed=t}}return!0}async initMap(e,r,s){this.map=this.L.map("basemap",{scrollWheelZoom:!1,zoomControl:!1});const a=document.getElementById("basemap");let i=[0,0],n=!1,o=!1,l=null;a.addEventListener("touchstart",(function(e){o||(console.log("touchmovestart"),i=[e.touches[0].screenX,e.touches[0].screenY],n=!0,o=!0)})),a.addEventListener("touchmove",(function(e){if(e.touches.length>0&&i.length>1&&n){const t=-1*(e.touches[0].screenY-i[1])*1;console.log("touchmove "+t.toString()),window.scrollBy({top:t,left:0,behavior:"instant"}),i=[e.touches[0].screenX,e.touches[0].screenY+t],n=!1,l=setTimeout((function(){n=!0}),50)}e.stopPropagation()})),a.addEventListener("touchend",(function(e){if(console.log("touchmoveend"),console.log(e),e.changedTouches.length>0){const t=-1*(e.changedTouches[0].screenY-i[1])*1;console.log("touchend "+t.toString()),window.scrollBy({top:t,left:0,behavior:"instant"})}o=!1,clearTimeout(l)})),this.L.control.zoom({position:"bottomleft"}).addTo(this.map);var c=this.L.tileLayer("https://server.arcgisonline.com/ArcGIS/rest/services/World_Street_Map/MapServer/tile/{z}/{y}/{x}",{minZoom:this.mapMinZoom,maxZoom:this.mapMaxZoom,attribution:"ESRI World Street Map",opacity:1}),u={BCC:this.L.tileLayer("https://api.mapbox.com/styles/v1/neiljakeman1000/cljyd364o006701pdgs7ec6qa/tiles/{z}/{x}/{y}?access_token=pk.eyJ1IjoibmVpbGpha2VtYW4xMDAwIiwiYSI6ImNqcGpoenBtdDA2aTczdnBmYjhsNGc5c2oifQ.vqIAnhyoZnnNeBsaNOzQGw",{tileSize:512,zoomOffset:-1,minZoom:this.mapMinZoom,maxZoom:this.mapMaxZoom,attribution:"MapBox BCC",opacity:1}).addTo(this.map),"ESRI World Street Map":c};this.L.control.layers(u,{},{position:"bottomleft",collapsed:!1}).addTo(this.map),this.map.setView([e,r],s),this.map.createPane("lane-lines-pane").style.zIndex=300,this.storyFeatureLayerGroup=this.L.layerGroup().addTo(this.map),await this.loadSlides(),await this.loadStoryFrames(),await this.loadFeatures(),this.attachMapEvents(),this.initStoryFeatureLayers(),this.initAllFeaturesLayer(),this.getSlideElements();let p={};this.lastIntersected="",this.iIndex=0;let h=0,d=document.getElementsByClassName("mapSlide");this.observerEnabled=!0,window.location&&window.location.hash==this.exploreHash&&(this.observerEnabled=!1);let g=new IntersectionObserver(function(e){if(!this.observerEnabled)return;let t=null,r=this.lastIntersected;e.forEach((e=>{if(e.isIntersecting&&e.target.dataset.slideid!=this.lastIntersected)this.lastIntersected=e.target.dataset.slideid,h=window.scrollY;else if(!e.isIntersecting&&e.target.dataset.slideid==this.lastIntersected){for(let e=0;e<d.length;e++)d[e].dataset.slideid==r&&(t=window.scrollY<h&&e>0?d[e-1]:window.scrollY>h&&e+1<d.length?d[e+1]:d[e]);this.lastIntersected=""}})),t&&(p[t.dataset.slideid]=setTimeout(function(){t.dataset.isActive="true",this.triggerSlideMapEvents(t.dataset.slideid)}.bind(this),1e3)),this.iIndex+=1}.bind(this),{threshold:[.4]});for(let e=0;e<this.slideElements.length;e++)g.observe(this.slideElements[e]);g.observe(document.getElementById(this.exploreFiltersElementId));let f=document.getElementsByClassName("overviewLink");for(let e=0;e<f.length;e++)f[e].addEventListener("click",this.onOverviewLinkClick.bind(this));let m=this.getSlideById(500),y=this.getSlideById(600),b=this.getSlideById(700),v=this.getSlideById(800),w=this.getSlideById(900),A={homelands:this.getStoryFrameBounds(m.fid),pathways1:this.getStoryFrameBounds(y.fid),pathways2:this.getStoryFrameBounds(b.fid),villagerssettlers:this.getStoryFrameBounds(v.fid),lines:this.getStoryFrameBounds(w.fid)};this.d3Intro=new t(this.storyUris,this.L,this.d3,A),this.d3Intro.homelandsSlide=m,this.d3Intro.pathways1Slide=y,this.d3Intro.pathways2Slide=b,this.d3Intro.villagerssettlersSlide=v,this.d3Intro.linesSlide.push(w),this.d3Intro.linesSlide.push(this.getSlideById(901)),this.d3Intro.linesSlide.push(this.getSlideById(902)),this.d3Intro.linesSlide.push(this.getSlideById(903)),this.svg=await this.d3Intro.loadD3(this.map),window.location&&window.location.hash==this.exploreHash&&this.loadExploreLayer()}onOverviewLinkClick(e){let t=e.target;"SPAN"==t.nodeName&&(t=t.parentElement);let r=t.href;r.indexOf(this.exploreHash)>-1&&(console.log("hash"),window.location.href=r,window.location.reload()),this.d3Intro.stopAll(this.map),this.d3Intro.clearSvg(),this.storyFeatureLayerGroup.clearLayers(),this.observerEnabled=!1;let s=t.dataset;return t.dataset&&(this.overviewTimeout=setTimeout(function(){this.storyFeatureLayerGroup.clearLayers();let e=s.slideid;e&&this.triggerSlideMapEvents(e),this.observerEnabled=!0}.bind(this),1500)),!0}clearFeatureText(){this.storyFeatureLayerGroup.eachLayer(function(e){let t=e._layers;for(let[e,r]of Object.entries(t)){let t=r.feature.properties.id;e&&this.textFeatures[t]&&null!=r._text&&r.setText(null)}}.bind(this))}attachMapEvents(){this.map.on("zoomend",function(){let e=this.map.getZoom()+4+"px";this.storyFeatureLayerGroup.eachLayer(function(t){if(this.clonedRiverLayer&&t==this.clonedRiverLayer){let r=t._layers;for(let[t,s]of Object.entries(r)){let r=s.feature.properties.id;if(t&&this.textFeatures[r]&&(s.setText(null),this.map.getZoom()>=this.textMinZoomLevel)){let t=this.defaultTextAttributes;t["font-size"]=e,s.setText(null,{orientation:this.textFeatures[r].orientation,offset:5,center:!0,attributes:t})}}}}.bind(this))}.bind(this))}onEachShadowFeature(e,t){"MultiLineString"===e.geometry.type&&5===e.properties.sub_type&&(t.setStyle(this.lineLandRouteHighlightStyle),t.bindPopup("This is one of those duplicated lines"))}onEachFeature(e,t){switch((e.properties&&(e.properties.map_text||e.properties.norm_text)||e.properties.Name)&&(e.properties.map_text&&[7,11].includes(e.properties.sub_type)?(t.bindPopup(e.properties.map_text),e.properties.date_yr&&t.bindPopup("<p style='font-family:Playfair Display,serif'><em>\""+e.properties.map_text+'"</em></p><strong>'+this.mapLookup[e.properties.map_source]+"</strong>")):e.properties.map_text?(t.bindPopup(e.properties.map_text),e.properties.date_yr&&t.bindPopup(e.properties.map_text+"<br><strong>"+this.mapLookup[e.properties.map_source]+"</strong>")):e.properties.norm_text?(t.bindPopup(e.properties.norm_text),e.properties.date_yr&&t.bindPopup(e.properties.norm_text+"</br><strong>"+this.mapLookup[e.properties.map_source]+"</strong>")):t.bindPopup(e.properties.Name+"</br><strong>Native Land Data API</strong>")),e.geometry.type){case"Point":break;case"MultiPolygon":switch(e.properties.sub_type){case 3:t.setStyle(this.polyBorderStyle);break;case 4:t.setStyle(this.polySettlementStyle);break;case 6:t.setStyle(this.polySeaRouteStyle);break;case 7:t.setStyle(this.polyDescriptiveStyle);break;case 8:t.setStyle(this.polyRiverRouteStyle);break;case 9:t.setStyle(this.polyMiscStyle);break;case 10:t.setStyle(this.polyToponymStyle);break;case 11:switch(e.properties.identity){case 1:t.setStyle(this.europeanAnnoStyle);break;case 2:t.setStyle(this.indigenousAreaStyle);break;case 3:t.setStyle(this.haudenosauneeAreaStyle);break;default:t.setStyle(this.europeanAreaStyle)}break;case 14:switch(e.properties.identity){case 2:t.setStyle(this.indigenousAreaStyle);break;case 3:t.setStyle(this.haudenosauneeAreaStyle);break;default:t.setStyle(this.europeanAreaStyle)}}break;case"MultiLineString":switch(e.properties.sub_type){case 3:t.setStyle(this.lineBorderStyle);break;case 4:case 5:t.setStyle(this.lineLandRouteStyle),this.shadowFeatures.push(e);break;case 6:t.setStyle(this.lineSeaRouteStyle);break;case 8:t.setStyle(this.lineRiverRouteStyle);break;case 9:t.setStyle(this.lineMiscStyle);break;case 10:t.setStyle(this.lineToponymStyle)}break;default:"catawba"===e.properties.Slug?t.setStyle(this.indigenousAreaStyle):t.setStyle(this.haudenosauneeAreaStyle)}}getStoryFrameBounds(e){for(let t=0;t<this.storyFrames.length;t++)if(this.storyFrames[t].FID==e)return this.storyFrames[t].bounds;return null}async loadStoryFrames(){if(this.storyUris&&this.storyUris.storyFrame){let e=await this.loadShapeFile(this.storyUris.storyFrame);for(let t=0;t<e.features.length;t++){let r=e.features[t],s=this.L.geoJson(r.geometry).getBounds();this.storyFrames.push({FID:r.properties.FID,feature:r,bounds:s})}}}async loadFeatures(){if(this.storyUris&&this.storyUris.lines){let e=await this.loadShapes([this.storyUris.lines]);for(let t=0;t<e.length;t++)this.addFeatureToAllSlides("lines",e[t]);e=await this.loadShapes([this.storyUris.points]);for(let t=0;t<e.length;t++)this.addFeatureToAllSlides("points",e[t]);e=await this.loadShapes([this.storyUris.polys]);for(let t=0;t<e.length;t++)this.addFeatureToAllSlides("polys",e[t]);e=await this.loadShapeFile([this.storyUris.indigenous]);for(let t=0;t<e.features.length;t++)this.addFeatureToAllSlides("indigenous",e.features[t])}}addSubtypeFilter(e,t,r){if(console.log("addsubtypefilter:"+e+","+t),this.exploreFilterControl.sub_type&&this.exploreFilterControl.sub_type[e]&&this.exploreFilterControl.sub_type.length>=t){const s=this.exploreFilterControl.sub_type[e].indexOf(t);r&&s<0?(this.exploreFilterControl.sub_type[e].push(t),this.totalExploreFiltersApplied+=1):r||(this.exploreFilterControl.sub_type[e].splice(s,1),this.totalExploreFiltersApplied>0&&(this.totalExploreFiltersApplied-=1))}}initExploreFilters(){let e=document.querySelectorAll(this.exploreSelectors.map_filter);if(e)for(let t=0;t<e.length;t++)e[t].addEventListener("click",this.mapFilterClickEvent.bind(this)),e[t].checked=!1;let t=document.querySelectorAll(this.exploreSelectors.explore_filter);if(t)for(let e=0;e<t.length;e++)t[e].addEventListener("click",this.subtypeFilterClickEvent.bind(this)),t[e].checked=!1;let r=document.getElementById(this.exploreSelectors.selectall_features);r&&(r.addEventListener("click",function(e){let t=e.target.checked;this.toggleAllFeaturesEnabled=e.target.checked,this.toggleAll(this.exploreSelectors.explore_filter,e.target.checked),r.checked=t}.bind(this)),r.checked=!1);let s=document.getElementById(this.exploreSelectors.selectall_maps);s&&(s.addEventListener("click",function(e){let t=e.target.checked;this.toggleAllMapsEnabled=e.target.checked,this.toggleAll(this.exploreSelectors.map_filter,e.target.checked),s.checked=t}.bind(this)),s.checked=!1),this.toggleAllFeaturesEnabled=!1,this.toggleAllMapsEnabled=!1,document.getElementById("filter-wrapper").style.display="none"}toggleAll(e,t){let r=document.querySelectorAll(e);Array.prototype.forEach.call(r,(function(e){e.checked!=t&&e.click()})),this.applyExploreFilters(),this.updateFilterCounts()}mapFilterClickEvent(e){let t=e.target.dataset;if(this.updateToggleAllElement(this.exploreSelectors.selectall_maps,e.target.checked),t){const e=parseInt(t.filtervalue),r=this.exploreFilterControl.maps.indexOf(e);r<0?(this.exploreFilterControl.maps.push(e),this.totalMapFiltersApplied+=1):(this.exploreFilterControl.maps.splice(r,1),this.totalMapFiltersApplied>0&&(this.totalMapFiltersApplied-=1,this.toggleAllMapsEnabled=!1)),this.applyExploreFilters(),this.updateFilterCounts()}}updateFilterCounts(){let e=document.getElementById(this.exploreSelectors.explore_counter),t=document.getElementById(this.exploreSelectors.map_counter);if(e){e.innerHTML=this.totalExploreFiltersApplied;let t=document.getElementById(this.exploreSelectors.selectall_features);this.totalExploreFiltersApplied==this.totalExploreFilters&&0==t.checked?t.checked=!0:1==t.checked&&this.totalExploreFiltersApplied<this.totalExploreFilters&&(t.checked=!1)}if(t){t.innerHTML=this.totalMapFiltersApplied;let e=document.getElementById(this.exploreSelectors.selectall_maps);this.totalMapFiltersApplied==this.totalMapFilters&&0==e.checked?e.checked=!0:1==e.checked&&this.totalMapFiltersApplied<this.totalMapFilters&&(e.checked=!1)}}updateToggleAllElement(e,t){if(this.toggleAllFeaturesEnabled&&t!=this.toggleAllFeaturesEnabled){this.toggleAllEnabled=!1,this.toggleAllFeaturesEnabled=!1;let t=document.getElementById(e);t&&(t.checked=!1)}}subtypeFilterClickEvent(e){let t=e.target.dataset;if(this.updateToggleAllElement(this.exploreSelectors.selectall_features,e.target.checked),t){const r=JSON.parse(t.filtervalue);if(r.sub_type){let t=r.sub_type;if(console.log(t+" :: "+r.identity),r.identity)for(let s=0;s<r.identity.length;s++)this.addSubtypeFilter(t,r.identity[s],e.target.checked)}this.toggleAllFeaturesEnabled||(this.applyExploreFilters(),this.updateFilterCounts())}}applyExploreFilters(){this.storyFeatureLayerGroup.clearLayers();let e=[],t=[];if(this.exploreFeatures){let e=!1;if(!this.toggleAllFeaturesEnabled){let t=document.querySelectorAll(this.exploreSelectors.explore_filter);if(t)for(let r=0;r<t.length;r++)if(t[r].checked){e=!0;break}}this.exploreFiltersEnabled&&this.exploreFeatures.forEach(function(e){let r=-1;e.properties&&this.exploreFilterControl.sub_type[0].length>0?r=0:e.properties&&e.properties.sub_type&&(r=e.properties.sub_type),r>=0&&e.properties&&this.exploreFilterControl.sub_type.length>r&&(e.properties.identity&&this.exploreFilterControl.sub_type[r].indexOf(e.properties.identity)>-1||this.exploreFilterControl.sub_type[r].indexOf(0)>-1)&&t.push(e)}.bind(this))}this.toggleAllMapsEnabled?(e=t,this.exploreFiltersEnabled||this.toggleExploreFilters(!0)):0!=this.exploreFilterControl.maps.length||this.toggleAllMapsEnabled?this.exploreFilterControl.maps.length>0&&!this.toggleAllMapsEnabled&&(this.exploreFiltersEnabled||this.toggleExploreFilters(!0),t.forEach(function(t){t.properties&&t.properties.map_source&&this.exploreFilterControl.maps.indexOf(t.properties.map_source)>-1&&e.push(t)}.bind(this))):(e=[],this.exploreFiltersEnabled&&this.toggleExploreFilters(!1)),e&&e.length>0&&(console.log(e),console.log(this.shadowFeatures),this.shadowFeatures.length=0,this.exploreFeaturesLayer=this.L.geoJSON(e,{pointToLayer:this.pointToLayer.bind(this),onEachFeature:this.onEachFeature.bind(this)}),this.storyFeatureLayerGroup.addLayer(this.exploreFeaturesLayer),this.exploreFeaturesShadowLayer=null,this.shadowFeatures&&this.shadowFeatures.length>0&&(this.exploreFeaturesShadowLayer=this.L.geoJSON(this.shadowFeatures,{pane:"lane-lines-pane",onEachFeature:this.onEachShadowFeature.bind(this)})),this.exploreFeaturesShadowLayer&&this.storyFeatureLayerGroup.addLayer(this.exploreFeaturesShadowLayer))}toggleExploreFilters(e){let t=document.getElementById("featureFilters");e?t.classList.remove(this.exploreFiltersDisabledClass):t.classList.add(this.exploreFiltersDisabledClass),document.querySelectorAll(this.exploreSelectors.explore_filter).forEach((function(e){e.checked=!1})),this.exploreFiltersEnabled=e}filterFeature(e,t){let r=!1;for(const[s,a]of Object.entries(t)){if("id"==s&&s in e.properties&&a.includes(e.properties.id)){r=!0;break}if(!(s in e.properties)||!a.includes(e.properties[s])){r=!1;break}r=!0}return r}includeFeature(e,t,r){let s=!1;switch(t){case"lines":r.lines&&(r.lines.includes&&(s=this.filterFeature(e,r.lines.includes)),r.lines.excludes&&!0===s&&(s=!this.filterFeature(e,r.lines.excludes)));break;case"polys":r.polys&&(r.polys.includes&&(s=this.filterFeature(e,r.polys.includes)),r.polys.excludes&&!0===s&&(s=!this.filterFeature(e,r.polys.excludes)));break;case"points":r.points&&(r.points.includes&&(s=this.filterFeature(e,r.points.includes)),r.points.excludes&&!0===s&&(s=!this.filterFeature(e,r.points.excludes)));break;case"indigenous":r.indigenous&&(s=this.filterFeature(e,r.indigenous.includes))}return s}addFeatureToAllSlides(e,t){for(let r=0;r<this.slides.length;r++){let s=this.slides[r];this.includeFeature(t,e,s)&&s.features.push(t)}t&&t.properties&&t.properties.sub_type&&this.exploreFeatureSubtypes.includes(t.properties.sub_type)&&this.exploreFeatures.push(t)}loadExploreLayer(){console.log("init explore layer"),this.d3Intro.stopAll(this.map),this.d3Intro.clearSvg(),clearTimeout(this.overviewTimeout),document.getElementById("s-6").scrollIntoView(!1),setTimeout(function(){this.toggleFilterControls(),setTimeout(function(){document.getElementById("s-7").scrollIntoView()}.bind(this),7e3)}.bind(this),1e3);let e=document.querySelectorAll(this.exploreSelectors.map_filter);if(e)for(let t=0;t<e.length;t++)e[t].checked=!1;let t=document.querySelectorAll(this.exploreSelectors.explore_filter);if(t)for(let e=0;e<t.length;e++)t[e].checked=!1;let r=document.getElementById(this.exploreSelectors.selectall_features);r&&(r.checked=!1);let s=document.getElementById(this.exploreSelectors.selectall_maps);s&&(s.checked=!1),this.toggleAllFeaturesEnabled=!1,this.toggleAllMapsEnabled=!1}toggleFilterControls(){let e=document.getElementById("filter-wrapper"),t=document.getElementsByClassName("filter-button")[0];this.filterControlsVisible?(t.click(),e.style.display="none",this.filterControlsVisible=!1):(e.style.display="block",t.click(),this.filterControlsVisible=!0)}}window.onload=async function(){new B(storyURIs,L,d3).initMap(startLat,startLng,startZoom)}})()})();