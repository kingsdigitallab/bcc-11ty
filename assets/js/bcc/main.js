/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/d3intro.js":
/*!************************!*\
  !*** ./src/d3intro.js ***!
  \************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   D3intro: () => (/* binding */ D3intro)\n/* harmony export */ });\n/* harmony import */ var string_strip_html__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! string-strip-html */ \"../node_modules/string-strip-html/dist/string-strip-html.cjs.js\");\n/* harmony import */ var string_strip_html__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(string_strip_html__WEBPACK_IMPORTED_MODULE_0__);\n/*jshint esversion: 8 */\n\n/*import L from 'leaflet';\nimport 'leaflet-dvf';\nimport 'leaflet-textpath';*/\n\n// https://observablehq.com/@sfu-iat355/intro-to-leaflet-d3-interactivity\n\n\n\nclass D3intro {\n    constructor(geometryUris, L, d3, startingBounds) {\n        this.slideIds = {\n            500: \"homelands\",\n            600: \"pathways1\",\n            700: \"pathways2\",\n            800: \"villagerssettlers\",\n            900: \"lines\",\n\n        };\n        this.L = L;\n        this.d3 = d3;\n        this.homelandsSlide = null;\n        this.pathways1Slide = null;\n        this.pathways2Slide = null;\n        this.villagerssettlersSlide = null;\n        // Array here since we have four frames of data\n        // for lines\n        this.linesSlide = [];\n        this.svgDrawn = false;\n        this.introRunning = null;\n        this.geometryUris = geometryUris;\n        this.startingBounds = startingBounds;\n        this.triggered = 0;\n\n    }\n\n    sleep(ms) {\n        return new Promise((resolve) => setTimeout(resolve, ms));\n    }\n\n    disableMapMovement(map) {\n        map.zoomControl.disable();\n        map.dragging.disable();\n    }\n\n    enableMapMovement(map) {\n        map.zoomControl.enable();\n        map.dragging.enable();\n    }\n\n    stopAll() {\n        this.introRunning = null;\n        // todo stop path drawing transition\n        this.svg.selectAll(\"*\").interrupt();\n    }\n\n    clearSvg() {\n        this.svg.selectAll(\"*\").remove();\n        this.svgDrawn = false;\n    }\n\n\n    async SectionIntro(map, slideid) {\n        //&& !this.introRunning\n        console.log(\"Section Intro counter: \" + this.triggered);\n        this.triggered += 1;\n        if (this.slideIds[slideid + \"\"]) {\n            let introRun = false;\n            // Clear any existing transitions and elements\n            this.stopAll();\n            this.clearSvg();\n            //map.on(\"moveend\", slideUpdate);\n            // Run this when we've reached the story frame\n            let playIntro = async function () {\n\n                switch (this.slideIds[slideid + \"\"]) {\n                    case \"homelands\":\n                        console.log(\"homelands\");\n                        this.introRunning = \"homelands\";\n                        introRun = await this.playHomelandsIntro(map);\n                        break;\n                    case \"pathways1\":\n                        this.introRunning = \"pathways1\";\n                        console.log(\"pathways1\");\n                        introRun = await this.playPathways1Intro(\n                            map, true, true, 2500, 1500, 1000\n                        );\n                        //introRun = await this.playPathways2Intro(map, startDelay);\n                        /*console.log(\"running: \" + this.introRunning);\n                        // If we haven't been interrupted, go on to second intro\n                        if (this.introRunning == \"pathways1\") {\n                            this.svg.selectAll(\"*\").interrupt();\n                            this.clearSvg();\n                            this.introRunning = \"pathways2\";\n                            //console.log(this.introRunning);\n                            introRun = await this.playPathways2Intro(map, startDelay);\n                        }*/\n                        break;\n                    case \"pathways2\":\n                        console.log(\"pathways2\");\n                        introRun = await this.playPathways2Intro(map, 0);\n                        break;\n                    case \"villagerssettlers\":\n                        console.log(\"settlers\");\n                        this.introRunning = \"villagerssettlers\";\n                        introRun = await this.playvillagerssettlersSlide(map);\n                        break;\n                    case \"lines\":\n                        console.log(\"lines\");\n                        this.introRunning = \"lines\";\n                        introRun = await this.playLinesIntro(map);\n                        break;\n                    case string_strip_html__WEBPACK_IMPORTED_MODULE_0__.defaults:\n                        this.introRunning = null;\n                }\n                map.off(\"moveend\", playIntro);\n            }.bind(this);\n            map.on(\"moveend\", playIntro);\n            let bounds = null;\n            switch (this.slideIds[slideid + \"\"]) {\n                case \"homelands\":\n                    bounds = this.startingBounds.homelands;\n                    break;\n                case \"pathways1\":\n                    bounds = this.startingBounds.pathways1;\n                    break;\n                case \"pathways2\":\n                    bounds = this.startingBounds.pathways2;\n                    break;\n                case \"villagerssettlers\":\n                    bounds = this.startingBounds.villagerssettlers;\n                    break;\n                case \"lines\":\n                    bounds = this.startingBounds.lines;\n                    break;\n            }\n            if (bounds) {\n                map.flyToBounds(bounds);\n            }\n\n\n            this.svgDrawn = introRun;\n        }\n        return this.svgDrawn;\n    }\n\n    async loadShapeFile(shape_url) {\n        let response = await fetch(shape_url);\n        let json = await response.json();\n        return json;\n    }\n\n    async loadD3(map) {\n        /*Setup overlar pane as d3 */\n        this.L.svg({clickable: true}).addTo(map);\n        const overlay = this.d3.select(map.getPanes().overlayPane);\n        this.svg = overlay.select(\"svg\").attr(\"pointer-events\", \"auto\");\n\n        /* Line generators that will work with features */\n        this.featureLineGenerator = this.d3\n            .line()\n            .x((d) => map.latLngToLayerPoint([d[1], d[0]]).x)\n            .y((d) => map.latLngToLayerPoint([d[1], d[0]]).y);\n\n        return this.svg;\n    }\n\n    /** Transform a feature into an svg path\n     * Coordinates are reversed by feature line generator\n     * @param feature\n     * @return svg path string of feature\n     */\n    featureToPath(feature) {\n        let pathString = \"\";\n        switch (feature.geometry.type) {\n            case \"MultiPolygon\":\n                pathString = this.featureLineGenerator(\n                    feature.geometry.coordinates[0][0]\n                );\n                break;\n            case \"MultiLineString\":\n                pathString = this.featureLineGenerator(feature.geometry.coordinates[0]);\n                break;\n        }\n        return pathString;\n    }\n\n    getHomelandLabel(id, european) {\n        let label = \"\";\n        if (this.homelandsLabels) {\n\n            for (let x = 0; x < this.homelandsLabels.length; x++) {\n                if (parseInt(this.homelandsLabels[x].id) == parseInt(id)) {\n                    // console.log(this.homelandsLabels[x]);\n                    if (european) {\n                        label = this.homelandsLabels[x][\"Current normalised text\"];\n                    } else {\n                        label = this.homelandsLabels[x].Indigenous_name;\n                    }\n                    break;\n                }\n            }\n        }\n\n        return label;\n    }\n\n    async drawHomelandsIntro(map, features) {\n\n\n        this.svg\n            .selectAll(\".homelands\")\n            .data(features)\n            .join(\"path\")\n            .attr(\"class\", \"homelands\")\n            .attr(\"title\", function (d) {\n                this.getHomelandLabel(d.properties.id, true);\n            }.bind(this))\n            .attr(\"stroke\", \"black\")\n            .attr(\"fill\", \"none\")\n            .attr(\"stroke-width\", \"0\")\n            .attr(\"d\", (d) => this.featureToPath(d));\n\n        this.svg\n            .selectAll(\".homelands\") // <-- now we can select the paths and get the bbox\n            .each((d, i, nodes) => {\n                // https://stackoverflow.com/questions/74358276/add-title-text-to-the-center-of-path-in-d3\n                const bbox = this.d3.select(nodes[i]).node().getBBox();\n                const centreX = bbox.x + bbox.width / 2; // <-- get x centre\n                const centreY = bbox.y + bbox.height / 2;\n                this.svg\n                    .append(\"text\") // <-- now add the text element\n                    .text(this.getHomelandLabel(d.properties.id, true))\n                    .attr(\"indigenousLabel\", this.getHomelandLabel(d.properties.id, false))\n                    .attr(\"class\", \"homelandLabel\")\n                    .attr(\"x\", centreX)\n                    .attr(\"y\", centreY)\n                    .attr(\"opacity\", 1)\n                    .attr(\"fill\", \"#0804ee\")\n                    .attr(\"text-anchor\", \"middle\")\n                    .transition()\n                    .delay((d, i) => i * 20 + 2000)\n                    .duration(2000)\n                    .style('opacity', 0).on(\"end\", function (d, i, nodes) {\n                    // Now do the label transition\n                    nodes[i].innerHTML = nodes[i].getAttribute(\"indigenousLabel\");\n                    d3.select(nodes[i]).transition().delay((d, i) => i * 20).duration(2000).style('opacity', 1);\n                });\n            });\n    }\n\n    /** Animated intro for the homelands section in D3*/\n    async playHomelandsIntro(map) {\n\n        if (!this.homelandsLabels) {\n            let homelandsData = await this.loadShapeFile(\n                this.geometryUris.homelands\n            );\n            if (homelandsData) {\n                this.homelandsLabels = homelandsData.homelandsData;\n            }\n\n        }\n\n        if (this.homelandsSlide) {\n            //map.flyToBounds(this.startingBounds.homelands);\n            await this.sleep(500);\n            await this.drawHomelandsIntro(map, this.homelandsSlide.features);\n\n        } else {\n            console.log('homelands slide not present!');\n        }\n\n        return true;\n    }\n\n    /**\n     * The D3 intro for the first pathways section\n     * Rivers drawn using dash css method: https://medium.com/@louisemoxy/create-a-d3-line-chart-animation-336f1cb7dd61\n     * @param map our leaflet map\n     * @return {Promise<void>}\n     */\n    async playPathways1Intro(map, playPathways2, fadeout, drawDuration, fadeoutDelay, fadeoutDuration) {\n        //map.flyToBounds(this.startingBounds.pathways1);\n        if (this.introRunning != \"pathways1\") {\n            return false;\n        }\n        let fadeCounter = 0;\n        if (this.introRunning == \"pathways1\" && this.pathways1Slide && this.pathways1Slide.features.length > 0) {\n            this.svg\n                .selectAll(\".river\")\n                .data(this.pathways1Slide.features)\n                .join(\"path\")\n                .attr(\"class\", \"pathways1 river\")\n                .attr(\"stroke\", \"blue\")\n                .attr(\"fill\", \"none\")\n                .attr(\"stroke-width\", \"1.5\")\n                .attr('opacity', 1)\n                .attr(\"d\", (d) => this.featureToPath(d));\n\n            this.svg\n                .selectAll(\"path.river\")\n                .each(function (d) {\n                    d.totalLength = this.getTotalLength();\n                })\n                .attr(\"stroke-dashoffset\", (d) => d.totalLength)\n                .attr(\"stroke-dasharray\", (d) => d.totalLength)\n                .transition()\n                .duration(drawDuration)\n                .attr(\"stroke-dashoffset\", 0)\n                .on(\"end\", function (d, i, nodes) {\n                    // Clear previous lines (except for the last one)\n                    if (fadeCounter >= (nodes.length - 1)) {\n                        this.d3.selectAll(\".river\")\n                            .transition()\n                            .attr('opacity', 0)\n                            .delay(fadeoutDelay)\n                            .duration(fadeoutDuration);\n                        if (playPathways2) {\n                            this.playPathways2Intro(map, fadeoutDelay + fadeoutDuration);\n                        }\n\n\n                    } else {\n                        fadeCounter += 1;\n                    }\n                }.bind(this));\n\n        }\n        return true;\n    }\n\n    /**\n     Split slides features by shape to display differently in d3\n     */\n    static splitFeatures(features) {\n        let splitFeatures = {\n            points: [],\n            polys: [],\n            lines: [],\n        };\n        for (let f in features) {\n            if (features[f].geometry && features[f].geometry.type) {\n                switch (features[f].geometry.type) {\n                    case \"MultiPolygon\":\n                        splitFeatures.polys.push(features[f]);\n                        break;\n                    case \"MultiLineString\":\n                        splitFeatures.lines.push(features[f]);\n                        break;\n                    case \"Point\":\n                        splitFeatures.points.push(features[f]);\n                        break;\n                }\n            }\n        }\n\n        return splitFeatures;\n    }\n\n    /**\n     * Animated reveal of drawn pathway\n     * @param feature to draw\n     * @param duration duration of drawing\n     * @param delay before we start the transition\n     * @return {Promise<boolean>}\n     */\n    async drawPathway(feature, duration, delay) {\n        this.svg\n            .selectAll(\"path.road-\" + feature.properties.id)\n            .each(function (d) {\n                d.totalLength = this.getTotalLength();\n            })\n            .attr(\"stroke-dashoffset\", (d) => d.totalLength)\n            .attr(\"stroke-dasharray\", (d) => d.totalLength)\n            .attr(\"opacity\", 1)\n            .transition()\n            .delay(delay)\n            .duration(duration)\n            .attr(\"stroke-dashoffset\", 0)\n            .end();\n\n        return true;\n    }\n\n    /**\n     *  Pathways 2 intro (slide 14)\n     * @param map\n     * @return {Promise<boolean>}\n     */\n    async playPathways2Intro(map, startDelay) {\n        //map.flyToBounds(this.startingBounds.pathways2);\n        let pathwayDuration = 2000;\n        console.log(\"pathways2\");\n\n        if (!this.pathways2Slide || this.pathways2Slide.features.length == 0) {\n            return false;\n        }\n\n        let splitFeatures = D3intro.splitFeatures(this.pathways2Slide.features);\n        if (splitFeatures.lines && splitFeatures.lines.length > 0) {\n            this.svg\n                .selectAll(\".roadHighlight\")\n                .data(splitFeatures.lines)\n                .join(\"path\")\n                .attr(\"class\", (d) => \"pathways2 roadHighlist road-\" + d.properties.id)\n                .attr(\"lineCap\", \"square\")\n                .attr(\"lineJoin\", \"round\")\n                .attr(\"stroke\", \"#000000\")\n                .attr(\"weight\", \"5\")\n                .attr(\"opacity\", 0)\n                .attr(\"fill\", \"none\")\n                .attr(\"stroke-width\", \"5\")\n                .attr(\"d\", (d) => this.featureToPath(d));\n\n            this.svg\n                .selectAll(\".road\")\n                .data(splitFeatures.lines)\n                .join(\"path\")\n                .attr(\"class\", (d) => \"pathways2 road-\" + d.properties.id)\n                .attr(\"lineCap\", \"square\")\n                .attr(\"lineJoin\", \"arcs\")\n                .attr(\"stroke\", \"#FFFFFF\")\n                .attr(\"weight\", \"3\")\n                .attr(\"opacity\", 1)\n                .attr(\"fill\", \"none\")\n                .attr(\"stroke-width\", \"3\")\n                .attr(\"d\", (d) => this.featureToPath(d));\n\n\n            // Draw these in order so they look better\n            this.drawPathway(splitFeatures.lines[0], pathwayDuration, startDelay);\n            this.drawPathway(splitFeatures.lines[1], pathwayDuration, startDelay + pathwayDuration);\n\n        }\n\n        // Sort the features so they follow the points order in bcc_slides\n        let pointOrder = this.pathways2Slide.points.includes.id;\n\n        let sortedPoints = [];\n        for (let o = 0; o < pointOrder.length; o++) {\n            for (let p = 0; p < splitFeatures.points.length; p++) {\n                if (splitFeatures.points[p].properties.id === pointOrder[o]) {\n                    sortedPoints.push(splitFeatures.points[p]);\n                    break;\n                }\n            }\n        }\n\n        if (sortedPoints && sortedPoints.length > 0) {\n            console.log(sortedPoints);\n            //append('img').attr('src',\"/assets/icon.svg\")\n            //d3.select('svg').append('svg:image').attr('id', 'wtf2').attr('width','2%').attr('x', 1247).attr('y',292);\n            this.svg\n                .selectAll(\"image.pathways2\")\n                .data(sortedPoints)\n                .join(\"svg:image\")\n                .attr(\"class\", \"pathways2 dipsites\")\n                .attr('xlink:href', \"/bcc-11ty/assets/img/icons/council-fire.svg\")\n                .attr('width', \"1%\")\n                .attr(\n                    \"x\",\n                    (d) =>\n                        map.latLngToLayerPoint([\n                            d.geometry.coordinates[1],\n                            d.geometry.coordinates[0],\n                        ]).x\n                )\n                .attr(\n                    \"y\",\n                    (d) =>\n                        map.latLngToLayerPoint([\n                            d.geometry.coordinates[1],\n                            d.geometry.coordinates[0],\n                        ]).y\n                ).attr(\"opacity\", 0)\n                .transition()\n                .delay((d, i) => startDelay + i * 500)\n                .attr(\"opacity\", 1)\n                .duration(1000);\n\n\n        }\n\n        return true;\n    }\n\n    async playvillagerssettlersSlide(map) {\n        /*map.flyToBounds(\n            this.startingBounds.villagerssettlers\n        );*/\n        //await this.sleep(1500);\n        if (\n            !this.villagerssettlersSlide ||\n            this.villagerssettlersSlide.features.length == 0\n        ) {\n            return false;\n        }\n\n        let splitFeatures = D3intro.splitFeatures(\n            this.villagerssettlersSlide.features\n        );\n        //console.log(splitFeatures.points);\n        this.svg\n            .selectAll(\"circle.villagerssettlers\")\n            .data(splitFeatures.points)\n            .join(\"circle\")\n            .attr(\"class\", \"villagerssettlers\")\n            .attr(\"fill\", function (d) {\n                if (d.properties && d.properties.sub_type == 12) {\n                    return \"red\";\n                }\n                return \"green\";\n            })\n            .attr(\n                \"cx\",\n                (d) =>\n                    map.latLngToLayerPoint([\n                        d.geometry.coordinates[1],\n                        d.geometry.coordinates[0],\n                    ]).x\n            )\n            .attr(\n                \"cy\",\n                (d) =>\n                    map.latLngToLayerPoint([\n                        d.geometry.coordinates[1],\n                        d.geometry.coordinates[0],\n                    ]).y\n            )\n            .attr(\"r\", 20)\n            .transition()\n            .attr(\"r\", 3)\n            .duration(1000);\n            \n\n        let dipsites = [];\n        for (let p = 0; p < splitFeatures.points.length; p++) {\n            let point = splitFeatures.points[p];\n            if (\n                point.properties &&\n                point.properties.sub_type &&\n                point.properties.sub_type == 12\n            ) {\n                dipsites.push(point);\n            }\n        }\n\n        let villagerspulseSelector = \"circle.villagerssettlers.pulse\";\n\n        this.svg\n            .selectAll(villagerspulseSelector)\n            .data(dipsites)\n            .join(\"circle\")\n            .attr(\"class\", \"villagerssettlers pulse\")\n            .attr(\"fill\", \"black\")\n            .attr(\"opacity\", \"0.5\")\n            .attr(\n                \"cx\",\n                (d) =>\n                    map.latLngToLayerPoint([\n                        d.geometry.coordinates[1],\n                        d.geometry.coordinates[0],\n                    ]).x\n            )\n            .attr(\n                \"cy\",\n                (d) =>\n                    map.latLngToLayerPoint([\n                        d.geometry.coordinates[1],\n                        d.geometry.coordinates[0],\n                    ]).y\n            )\n            .attr(\"r\", 3);\n        this.pulseTransition(villagerspulseSelector);\n        return true;\n    }\n\n    async pulseTransition(selector) {\n\n        this.svg\n            .selectAll(selector)\n            .attr(\"r\", 3)\n            .attr(\"opacity\", \"0\")\n            .attr(\"fill\", \"black\")\n            .transition()\n            .delay(1000)\n            .duration(1000)\n            .attr(\"r\", 10)\n            .attr(\"opacity\", \"0.5\")\n            .styleTween(\"fill\", () => this.d3.interpolateRgb(\"black\", \"red\"))\n            .transition()\n            .duration(500)\n            .attr(\"opacity\", \"0\")\n            .on('end', function () {\n                if (this.introRunning == \"villagerssettlers\") {\n                    // Call it again\n                    this.pulseTransition(selector);\n                }\n            }.bind(this));\n\n\n        return true;\n    }\n\n    /*\n    this.lineLandRouteStyle = {\n                stroke: true,\n                //dashArray: \"7 6\",\n                lineCap: \"square\",\n                lineJoin: \"arcs\",\n                color: \"#FFFFFF\",\n                weight: 3,\n                fill: false,\n            };\n     */\n    async drawLines(features, duration, colour, majorClass, minorClass) {\n        if (this.introRunning == \"lines\") {\n            this.svg\n                .selectAll(\".\" + minorClass)\n                .data(features)\n                .join(\"path\")\n                .attr(\"class\", majorClass + \" \" + minorClass)\n                .attr(\"stroke\", colour)\n                .attr(\"fill\", \"none\")\n                .attr(\"stroke-width\", \"1\")\n                .attr(\"d\", (d) => this.featureToPath(d));\n\n            return this.svg\n                .selectAll(\"path.\" + minorClass)\n                .each(function (d) {\n                    d.totalLength = this.getTotalLength();\n                })\n                .attr(\"stroke-dashoffset\", (d) => d.totalLength)\n                .attr(\"stroke-dasharray\", (d) => d.totalLength)\n                .transition()\n                .duration(duration)\n                .attr(\"stroke-dashoffset\", 0)\n                .end();\n        }\n\n    }\n\n    async playLinesIntro(map) {\n\n        let drawDuration = 2500;\n        let colour = \"black\";\n        let majorClass = \"lines\";\n        let minorClass = \"border\";\n        let frameDelay = 2500;\n\n        if (this.linesSlide && this.linesSlide.length > 0 && this.introRunning == \"lines\") {\n            // Draw all the lines\n            for (let f = 0; f < this.linesSlide.length; f++) {\n                this.svg\n                    .selectAll(\".\" + minorClass)\n                    .data(this.linesSlide[f].features)\n                    .join(\"path\")\n                    .attr(\"class\", majorClass + \" \" + minorClass + f)\n                    .attr(\"stroke\", colour)\n                    .attr(\"opacity\", 1)\n                    .attr(\"fill\", \"none\")\n                    .attr(\"stroke-width\", \"1\")\n                    .attr(\"d\", (d) => this.featureToPath(d));\n\n\n            }\n            // Start all the draw animations\n            for (let f = 0; f < this.linesSlide.length; f++) {\n                this.svg\n                    .selectAll(\"path.\" + minorClass + f)\n                    .each(function (d) {\n                        d.totalLength = this.getTotalLength();\n                        let delay = (f > 0 ? frameDelay : 0);\n                        d.drawDelay = (drawDuration + delay) * f;\n                    })\n                    .attr(\"stroke-dashoffset\", (d) => d.totalLength)\n                    .attr(\"stroke-dasharray\", (d) => d.totalLength)\n                    .transition()\n                    .delay((d) => d.drawDelay)\n                    .duration(drawDuration)\n                    .attr(\"stroke-dashoffset\", 0)\n                    .on(\"end\", function (d, i, nodes) {\n                        // Clear previous lines (except for the last one)\n                        if (f != (this.linesSlide.length - 1)) {\n                            this.d3.selectAll(\"path.\" + minorClass + f)\n                                .transition()\n                                .attr('opacity', 0)\n                                .duration(frameDelay * 0.5);\n                        }\n\n                    }.bind(this));\n\n            }\n        }\n\n        return true;\n    }\n}\n\n\n//# sourceURL=webpack://frontend/./src/d3intro.js?");

/***/ }),

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _storymap_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./storymap.js */ \"./src/storymap.js\");\n/*jshint esversion: 8 */\n\n\n\n//Custom Canvas Renderer);\n\n\n/* eslint-disable */\n\nlet storyMap = new _storymap_js__WEBPACK_IMPORTED_MODULE_0__.StoryMap(storyURIs, L, d3);\nstoryMap.initMap(startLat, startLng, startZoom);\n//return storyMap;\n\n/* eslint-enable */\n\n\n//# sourceURL=webpack://frontend/./src/index.js?");

/***/ }),

/***/ "./src/storymap.js":
/*!*************************!*\
  !*** ./src/storymap.js ***!
  \*************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   StoryMap: () => (/* binding */ StoryMap)\n/* harmony export */ });\n/* harmony import */ var _d3intro_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./d3intro.js */ \"./src/d3intro.js\");\n/*jshint esversion: 8 */\n\n\nclass StoryMap {\n    constructor(storyUris, L, d3) {\n        this.overlay = null;\n        // Data parameters\n        this.storyUris = storyUris;\n        this.map = null;\n        this.L = L;\n        this.d3 = d3;\n        this.layerGroups = {};\n        this.storyFrames = [];\n\n        // Geojson feature types\n        this.featureTypes = [\"points\", \"lines\", \"polys\"];\n\n        // Map parameters\n        this.mapMinZoom = 1;\n        this.mapMaxZoom = 11;\n\n        this.slideElementTagName = \"article\";\n        this.topSlideElement = null;\n\n        // Styles for Features\n        // fillColor: '#ff7800', fill: true\n        this.highlightLineStyle = {\n            stroke: true,\n            color: \"#0000ff\",\n            weight: 5,\n            opacity: 1,\n        };\n\n        // color: 'rgba(0,0,0,0)',\n        this.defaultLineStyle = {\n            stroke: true,\n            color: \"#ff0000\",\n            fillColor: \"#ff0000\",\n            weight: 2,\n            opacity: 0.6,\n            fill: true,\n        };\n\n        // Slides for map features with include\n        // rules, features, and frame\n        this.slides = {};\n        this.lastSlideDisplayed = null;\n\n        // <article elements> on page\n        this.slideElements = {};\n\n        this.allFeatures = [];\n        this.allFeaturesLayer = null;\n\n        // Text features (e.g.) rivers info stored hers\n        // So it can be added/changed by zoom\n        this.textFeatures = {};\n        this.textMinZoomLevel = 8;\n        this.defaultTextAttributes = {\n            fill: \"black\",\n            \"font-family\": \"EB Garamond, serif\",\n            \"font-weight\": \"bold\",\n            \"offset\": -10,\n        };\n        this.initStyles();\n        // Map lookup\n        this.mapLookup = {\n            1: \"White, 1590\",\n            2: \"Bleau, 1650\",\n            3: \"Seller, 1676\",\n            4: \"n/a\",\n            5: \"Foster, 1677\",\n            6: \"Moll, 1720\",\n            7: \"Burghers, 1738\",\n            8: \"Evans, 1752\",\n            9: \"n/a\",\n            10: \"Herbert, 1755\",\n            11: \"Moll, 1755\",\n            12: \"Mitchell, 1755\",\n            13: \"Bowen, 1772\",\n            14: \"Jeffreys, 1774\",\n            15: \"Hutchins, 1778\",\n            16: \"Cary,  1783\",\n            17: \"Buell, 1784\",\n            18: \"Russell, 1794\",\n            19: \"Bradley, 1796\",\n        };\n\n        // Explore/filter variables\n\n        this.exploreFilterControl = {\n            id: 0,\n            fid: 0, // We should look at this\n            sub_type: [[], [], [], [], [], [], [], [], [], [], [], [], [], []],\n            maps: [],\n            features: [],\n\n            lines: {\n                includes: {},\n                excludes: {},\n            },\n            points: {\n                includes: {},\n                excludes: {},\n            },\n            polys: {\n                includes: {},\n                excludes: {},\n            },\n            excludes: {},\n        };\n\n        // Selector dict for explore controls\n        this.exploreSelectors = {\n            explore_filter: \"input.explore_filter\",\n            map_filter: \"input.map_selector\",\n            explore_counter: \"totalExploreFiltersApplied\",\n            map_counter: \"totalMapFiltersApplied\",\n            selectall_maps: \"selectallMaps\",\n            selectall_features: \"selectallFeatures\"\n        };\n\n        // Explore filters disabled by default\n        this.exploreFiltersDisabled = true;\n        this.exploreFiltersDisabledClass = \"filterDisabled\";\n        this.filterControlsVisible = false;\n\n        // Total map and explore filters currently applied\n        this.totalExploreFilters = 7;\n        this.exploreSlideId = 1000;\n        this.totalExploreFiltersApplied = 0;\n        this.totalMapFilters = 17;\n        this.totalMapFiltersApplied = 0;\n        // This is all the subtypes used in explore\n        this.exploreFeatureSubtypes = [10, 4, 12, 13, 3, 12];\n        this.exploreFeatures = [];\n        this.initExploreFilters();\n    }\n\n    initStyles() {\n\n        // line Styles\n        this.lineBorderStyle = {\n            stroke: true,\n            dashArray: \"3 6\",\n            lineCap: \"square\",\n            color: \"#000000\",\n            weight: 2.5,\n            fill: false,\n        };\n        this.lineLandRouteStyle = {\n            stroke: true,\n            //dashArray: \"7 6\",\n            lineCap: \"square\",\n            lineJoin: \"arcs\",\n            color: \"#FFFFFF\",\n            weight: 3,\n            fill: false,\n        };\n        this.lineLandRouteHighlightStyle = {\n            stroke: true,\n            lineCap: \"square\",\n            lineJoin: \"round\",\n            color: \"#000000\",\n            weight: 5,\n            fill: false,\n        };\n        this.lineSeaRouteStyle = {\n            stroke: true,\n            dashArray: \"7 6\",\n            lineCap: \"square\",\n            lineJoin: \"arcs\",\n            color: \"#ffbd59\",\n            weight: 3,\n            fill: false,\n        };\n        this.lineRiverRouteStyle = {\n            stroke: true,\n            color: \"#2D9BF0\",\n            lineCap: \"square\",\n            lineJoin: \"round\",\n            weight: 2,\n            fill: false,\n            opacity: 0.5,\n        };\n        this.lineRiverRouteStyleLabel = {\n            stroke: true,\n            smoothFactor: 15,\n            dashArray: \"7 9\",\n            color: \"#000000FF\",\n            lineCap: \"square\",\n            lineJoin: \"round\",\n            weight: 2,\n            fill: false,\n        };\n        this.lineMiscStyle = {\n            stroke: true,\n            color: \"#ffff00\",\n            weight: 4,\n            fill: false,\n        };\n        this.lineToponymStyle = {\n            stroke: true,\n            color: \"#ff0000\",\n            weight: 5,\n            fill: false,\n        };\n\n        // Poly Styles\n        this.polyBorderStyle = {\n            stroke: true,\n            dashArray: \"4 6\",\n            color: \"#000000\",\n            fillColor: \"#000000\",\n            lineCap: \"square\",\n            weight: 2,\n            fill: true,\n            opacity: 0.2,\n            fillOpacity: 0.25,\n        };\n        this.polySettlementStyle = {\n            stroke: true,\n            dashArray: \"2 6\",\n            lineCap: \"square\",\n            lineJoin: \"arcs\",\n            color: \"#ff0000\",\n            fillColor: \"#ff0000\",\n            weight: 2,\n            fill: true,\n            opacity: 0.75,\n            fillOpacity: 0.5,\n        };\n        this.polySeaRouteStyle = {\n            stroke: true,\n            dashArray: \"7 6\",\n            lineCap: \"square\",\n            lineJoin: \"arcs\",\n            color: \"#ffbd59\",\n            fillColor: \"#ffbd59\",\n            weight: 2,\n            fill: true,\n            opacity: 0.75,\n            fillOpacity: 0.5,\n        };\n        this.polyDescriptiveStyle = {\n            stroke: true,\n            fillColor: \"#ff0000\",\n            weight: 1,\n            fill: true,\n            opacity: 0.5,\n            fillOpacity: 0.2,\n        };\n\n        this.polyRiverRouteStyle = {\n            stroke: true,\n            dashArray: \"7 6\",\n            lineCap: \"square\",\n            lineJoin: \"arcs\",\n            color: \"#00c2cb\",\n            fillColor: \"#00c2cb\",\n            weight: 2,\n            fill: true,\n            opacity: 0.75,\n            fillOpacity: 0.5,\n        };\n        this.polyMiscStyle = {\n            stroke: true,\n            fillColor: \"#ff0000\",\n            weight: 1,\n            fill: true,\n            opacity: 0.5,\n            fillOpacity: 0.5,\n        };\n        this.polyNativeStyle = {\n            stroke: true,\n            fillColor: \"#ff0000\",\n            weight: 2,\n            fill: true,\n            opacity: 0.25,\n            fillOpacity: 0.2,\n        };\n        this.polyEuroStyle = {\n            stroke: true,\n            fillColor: \"#00ff00\",\n            weight: 2,\n            fill: true,\n            opacity: 0.5,\n            fillOpacity: 0.2,\n        };\n        this.polyAnnoStyle = {\n            stroke: true,\n            dashArray: \"10 10\",\n            lineCap: \"square\",\n            lineJoin: \"arcs\",\n            color: \"#000000\",\n            fillColor: \"#80808050\",\n            fill: 'url(/bcc-11ty/assets/img/stories/image-writing.png)',\n            weight: 2,\n            opacity: 0.3,\n            fillOpacity: 1,\n        };\n        this.polyToponymStyle = {\n            stroke: true,\n            dashArray: \"7 6\",\n            lineCap: \"square\",\n            lineJoin: \"arcs\",\n            color: \"#ff0000\",\n            fillColor: \"#ff0000\",\n            weight: 1,\n            fill: true,\n            opacity: 0.5,\n            fillOpacity: 0.5,\n        };\n\t\t// New poly styles for sub_type 14\n        this.polyDomainNativeStyle = {\n            stroke: true,\n            lineCap: \"square\",\n            lineJoin: \"arcs\",\n            color: \"#5D1206\",\n\t\t\tfillOpacity: 0.5,\n            fillColor: \"#5D120600\", //fill colour completely transparent\n\t\t\tfill: 'url(/bcc-11ty/assets/img/stories/vertical-hatch-red-5D1206.webp)',\n            weight: 3,\n            opacity: 1,\n\t\t};\n\t\tthis.polyDomainHaudenasuaneeStyle = {\n            stroke: true,\n            lineCap: \"square\",\n            lineJoin: \"arcs\",\n            color: \"#BFBFBF\",\n            fillColor: \"#BFBFBF00\",\n\t\t\tfill:'url(/bcc-11ty/assets/img/stories/vertical-hatch-gray-BFBFBF.webp)',\n            weight: 3,\n            opacity: 0.3,\n\t\t};\n\t\tthis.polyDomainEuroStyle = {\n\t\t\tstroke: true,\n            lineCap: \"square\",\n            lineJoin: \"arcs\",\n            color: \"#427D67\",\n\t\t\tfillOpacity: 0.5,\n            fillColor: \"#427D6700\",\n\t\t\tfill:'url(/bcc-11ty/assets/img/stories/vertical-hatch-green-427D67.webp)',\n            weight: 3,\n            opacity: 1,\n\t\t};\n\n\t\tthis.councilFireIcon = L.icon({\n\t\t\ticonUrl: '/bcc-11ty/assets/img/stories/council-fire-optimised.webp',\n\t\t\tshadowUrl: '/bcc-11ty/assets/img/stories/council-fire-shadow.webp',\n\t\t\ticonSize: [20,20],\n\t\t\tshadowSize: [20, 15],\n\t\t\ticonAnchor: [10,19],\n\t\t\tshadowAnchor: [10,14],\n\t\t\tpopupAnchor: [-3,-20]\n\t\t})\n    }\n\n    async loadShapeFile(shape_url) {\n        let response = await fetch(shape_url);\n        let json = await response.json();\n        return json;\n    }\n\n    /**\n     * Load all shape files asynchronously\n     */\n    async loadShapes(shape_urls) {\n        let shapePromises = [];\n        let shapeGeoJSON = [];\n        let storyFeatures = [];\n\n        for (let u = 0; u < shape_urls.length; u++) {\n            shapePromises.push(this.loadShapeFile(shape_urls[u]));\n        }\n        await Promise.all(shapePromises).then((values) => {\n            for (let v = 0; v < values.length; v++) {\n                shapeGeoJSON.push(...values[v].features);\n            }\n        });\n\n        // Arrange into stories and default layer\n        for (let s = 0; s < shapeGeoJSON.length; s++) {\n            let feature = shapeGeoJSON[s];\n            if (feature.properties) {\n                // add to all features\n                this.allFeatures.push(feature);\n                storyFeatures.push(feature);\n\n\n            }\n        }\n\n        return storyFeatures;\n    }\n\n    async loadSlides() {\n        if (this.storyUris && this.storyUris.slides) {\n            let storySlides = await this.loadShapeFile(this.storyUris.slides);\n            this.slides = storySlides.slides;\n        }\n    }\n\n    getSlideById(slideid) {\n        for (let s = 0; s < this.slides.length; s++) {\n            if (this.slides[s].id == slideid) {\n                return this.slides[s];\n            }\n        }\n        console.log('Warning! slide ' + slideid + ' not found');\n    }\n\n    pointToLayer(feature, latlng) {\n        switch (feature.properties.sub_type) {\n            // Indigenous : Circle - Red\n            case 1:\n                return this.L.circleMarker(latlng, {\n                    radius: 4,\n                    fillColor: \"#7A0707\",\n                    color: \"#7A0707\",\n                    weight: 0.5,\n                    opacity: 1,\n                    fillOpacity: 1,\n                    bubblingMouseEvents: true,\n                });\n            // Settlement : Squares - dark green - point up\n            case 4:\n                // Capture Indig vs Haudenasnee\n                switch (feature.properties.identity) {\n                    case 1:\n                        // European - Red Square\n                        return new this.L.RegularPolygonMarker(latlng, {\n                            numberOfSides: 4,\n                            rotation: -45,\n                            radius: 6,\n                            //this.L.Path style options\n                            fill: true,\n                            fillColor: \"#7A0707\",\n                            color: \"#7A0707\",\n                            weight: 0.5,\n                            fillOpacity: 1,\n                            stroke: true,\n                            bubblingMouseEvents: true,\n                        });\n                    // Default - Indigenous Red circle - everything else\n                    default:\n                        return this.L.circleMarker(latlng, {\n                            radius: 5,\n                            fillColor: \"#7A0707\",\n                            color: \"#7A0707\",\n                            weight: 0.5,\n                            opacity: 1,\n                            fillOpacity: 1,\n                            bubblingMouseEvents: true,\n                        });\n                }\n            // Land route -\n            case 5:\n                return this.L.circleMarker(latlng, {\n                    radius: 4,\n                    fillColor: \"#0000ff\",\n                    color: \"#000\",\n                    weight: 0.5,\n                    opacity: 1,\n                    fillOpacity: 1,\n                    bubblingMouseEvents: true,\n                });\n\n            // Sea route\n            case 6:\n                return this.L.circleMarker(latlng, {\n                    radius: 4,\n                    fillColor: \"#ffbd59\",\n                    color: \"#ffbd59\",\n                    weight: 0.5,\n                    opacity: 1,\n                    fillOpacity: 0.9,\n                    bubblingMouseEvents: true,\n                });\n\n            // Descriptive - white squares\n            case 7:\n                return new this.L.RegularPolygonMarker(latlng, {\n                    numberOfSides: 4,\n                    rotation: -45,\n                    radius: 5,\n                    //this.L.Path style options\n                    fill: true,\n                    fillColor: \"#ffffff\",\n                    color: \"#000000\",\n                    weight: 0.5,\n                    fillOpacity: 1,\n                    stroke: true,\n                    bubblingMouseEvents: true,\n                });\n\n            //River route\n            case 8:\n                return this.L.circleMarker(latlng, {\n                    radius: 4,\n                    fillColor: \"#ff00ff\",\n                    color: \"#000\",\n                    weight: 0.5,\n                    opacity: 1,\n                    fillOpacity: 1,\n                    bubblingMouseEvents: true,\n                });\n\n            // Miscellaneous\n            case 9:\n                return this.L.circleMarker(latlng, {\n                    radius: 4,\n                    fillColor: \"#000000\",\n                    color: \"#000\",\n                    weight: 0.5,\n                    opacity: 1,\n                    fillOpacity: 1,\n                    bubblingMouseEvents: true,\n                });\n\n            // Toponym\n            // Purple - to differentiate!\n            case 10:\n                // Capture Indig vs Haudenasnee\n                switch (feature.properties.identity) {\n                    case 1: //European - green sq, white centre\n                        return new this.L.RegularPolygonMarker(latlng, {\n                            numberOfSides: 4,\n                            rotation: -45,\n                            radius: 7,\n                            //this.L.Path style options\n                            fill: true,\n                            fillColor: \"#FFFFFF\",\n                            color: \"#48A795\",\n                            weight: 2.5,\n                            fillOpacity: 1,\n                            stroke: true,\n                            bubblingMouseEvents: true,\n                        });\n                    default: //indigenouns - green circle,white centre\n                        return this.L.circleMarker(latlng, {\n                            radius: 6,\n                            fillColor: \"#FFFFFF\",\n                            color: \"#48A795\",\n                            weight: 2.5,\n                            opacity: 1,\n                            fillOpacity: 1,\n                            bubblingMouseEvents: true,\n                        });\n                }\n\n            case 12: // Council fire\n                return this.L.marker(latlng, {\n                    icon: this.councilFireIcon,\n                    bubblingMouseEvents: true\n                });\n\n            default: //other\n                return this.L.circleMarker(latlng, {\n                    radius: 4,\n                    fillColor: \"#000ff\",\n                    color: \"#0000ff\",\n                    weight: 0.5,\n                    opacity: 1,\n                    fillOpacity: 1,\n                    bubblingMouseEvents: true,\n                });\n        }\n    }\n\n    initStoryFeatureLayers() {\n        for (let s = 0; s < this.slides.length; s++) {\n            let slide = this.slides[s];\n            this.shadowFeatures = [];\n            slide.layer = this.L.geoJSON(slide.features, {\n                // Stopping style override here\n                //style: this.defaultLineStyle,\n                pointToLayer: this.pointToLayer.bind(this),\n                onEachFeature: this.onEachFeature.bind(this),\n            });\n\n            if (this.shadowFeatures && this.shadowFeatures.length > 0) {\n                //console.log(this.shadowFeatures);\n                slide.shadowLayer = this.L.geoJSON(this.shadowFeatures, {\n                    pane: 'lane-lines-pane',\n                    onEachFeature: this.onEachShadowFeature.bind(this),\n                });\n            }\n\n        }\n    }\n\n    initAllFeaturesLayer() {\n        this.allFeaturesLayer = this.L.geoJSON(this.allFeatures, {\n            //style: this.defaultLineStyle,\n            pointToLayer: this.pointToLayer.bind(this),\n            onEachFeature: this.onEachFeature.bind(this),\n        });\n    }\n\n    /**\n     * Get all the slide html elements and sort them by their offset top\n     * So we can track user scrolling and trigger map events\n     */\n    getSlideElements() {\n        this.slideElements = Array.from(\n            document.getElementsByTagName(this.slideElementTagName)\n        );\n        this.slideElements.sort(function (a, b) {\n            if (a.offsetTop < 0) {\n                return 1;\n            }\n            if (b.offsetTop < 0) {\n                return -1;\n            }\n            return a.offsetTop - b.offsetTop;\n        });\n    }\n\n    // Fade-in function for Leaflet\n    fadeLayerLeaflet(lyr, startOpacity, finalOpacity, opacityStep, delay) {\n        let opacity = startOpacity;\n        setTimeout(function changeOpacity() {\n            if (opacity < finalOpacity) {\n                lyr.setStyle({\n                    opacity: opacity,\n                    fillOpacity: opacity,\n                });\n                opacity = opacity + opacityStep;\n            }\n\n            setTimeout(changeOpacity, delay);\n        }, delay);\n    }\n\n    /**\n     * Fly the map to the slide's storyframe\n     * clear existing layers\n     * add this slide's layer\n     *\n     * @param slideid slide to display\n     */\n    async triggerSlideMapEvents(slideid) {\n        /* Trigger intros */\n        //console.log(slideid);\n\n\n        if (slideid == this.exploreSlideId) {\n            this.storyFeatureLayerGroup.clearLayers();\n            this.loadExploreLayer();\n        } else if (this.d3Intro.slideIds[slideid + \"\"]) {\n            // This slide triggers an animated slide\n            // Clear layers\n            console.log(\"Section intro :\" + slideid);\n            this.storyFeatureLayerGroup.clearLayers();\n            this.d3Intro.SectionIntro(this.map, slideid, this.slides);\n            if (this.filterControlsVisible) {\n                this.toggleFilterControls();\n            }\n        } else if (slideid != this.exploreSlideId) {\n\n            // Clear the svg overlay so we can replace with layers\n            this.d3Intro.stopAll(this.map);\n            this.d3Intro.clearSvg();\n            if (this.filterControlsVisible) {\n                this.toggleFilterControls();\n            }\n\n            let slide = this.getSlideById(slideid);\n            if (slide) {\n                // Clear layers and text\n                this.clearFeatureText();\n                if (slide.layer) {\n                    this.storyFeatureLayerGroup.clearLayers();\n                }\n\n                // Move to bounds\n                this.map.flyToBounds(this.getStoryFrameBounds(slide.fid));\n\n                // Add new layer once move is finished\n                if (slide.layer) {\n                    let slideUpdate = function () {\n                        slide.layer.setStyle({\n                            opacity: 0,\n                            fillOpacity: 0,\n                        });\n\n                        if (slide.shadowLayer) {\n                            this.storyFeatureLayerGroup.addLayer(slide.shadowLayer);\n                        }\n                        this.storyFeatureLayerGroup.addLayer(slide.layer);\n                        this.fadeLayerLeaflet(slide.layer, 0, 1, 0.2, 0.01);\n                        this.map.off(\"moveend\", slideUpdate);\n                    }.bind(this);\n                    this.map.on(\"moveend\", slideUpdate);\n                }\n                this.lastSlideDisplayed = slide;\n            }\n        }\n        return true;\n    }\n\n    async initMap(lat, lng, zoom) {\n        this.map = this.L.map(\"basemap\", {\n            scrollWheelZoom: false,\n            zoomControl: false,\n        });\n\n        this.L.control\n            .zoom({\n                position: \"bottomleft\",\n            })\n            .addTo(this.map);\n\n\n        var worldStreet = this.L.tileLayer(\n            \"https://server.arcgisonline.com/ArcGIS/rest/services/World_Street_Map/MapServer/tile/{z}/{y}/{x}\",\n            {\n                minZoom: this.mapMinZoom,\n                maxZoom: this.mapMaxZoom,\n                attribution: \"ESRI World Street Map\",\n                opacity: 1,\n            }\n        );\n\n\n        var bcc = this.L.tileLayer(\n            \"https://api.mapbox.com/styles/v1/neiljakeman1000/cljyd364o006701pdgs7ec6qa/tiles/{z}/{x}/{y}?access_token=pk.eyJ1IjoibmVpbGpha2VtYW4xMDAwIiwiYSI6ImNqcGpoenBtdDA2aTczdnBmYjhsNGc5c2oifQ.vqIAnhyoZnnNeBsaNOzQGw\",\n            {\n                tileSize: 512,\n                zoomOffset: -1,\n                minZoom: this.mapMinZoom,\n                maxZoom: this.mapMaxZoom,\n                attribution: \"MapBox BCC\",\n                opacity: 1,\n            }\n        ).addTo(this.map);\n\n\n        var baseLayers = {\n            //\"Clean Terrain\": worldTerrain,\n            \"BCC\": bcc,\n            \"ESRI World Street Map\": worldStreet,\n        };\n\n        // Create Layer Switcher\n        this.L.control\n            .layers(baseLayers, {}, {position: \"bottomleft\", collapsed: false})\n            .addTo(this.map);\n\n        // Initial view\n        // This could be changed based on get string etc.\n        this.map.setView([lat, lng], zoom);\n        this.map.createPane('lane-lines-pane').style.zIndex = 300;\n        this.storyFeatureLayerGroup = this.L.layerGroup().addTo(this.map);\n\n        await this.loadSlides();\n        await this.loadStoryFrames();\n        await this.loadFeatures();\n        this.attachMapEvents();\n        this.initStoryFeatureLayers();\n\n        // All features layer used for building filtered layers\n        this.initAllFeaturesLayer();\n\n        this.getSlideElements();\n        let observerTimeouts = {};\n        /* This observer controls the scrolling behaviour:\n                        - triggering slides and animations\n                        - clearing the map layers and svg after a triggered slide is no longer visible\n                        (Timeout is to stop fast scrolling triggering slides as it goes past)\n                         */\n        this.lastIntersected = \"\";\n        this.iIndex = 0;\n        let slideIndex = -1;\n        let intersectionY = 0;\n        let slides = document.getElementsByClassName(\"mapSlide\");\n        this.observerEnabled = true;\n\n        //console.log(slides);\n\n        let observer = new IntersectionObserver(\n            function (entries) {\n                if (!this.observerEnabled) {\n                    return;\n                }\n                let nextSlide = null;\n                let lastIntersected = this.lastIntersected;\n                //console.log(entries);\n                entries.forEach((entry) => {\n                    if (entry.isIntersecting && entry.target.dataset.slideid != this.lastIntersected) {\n                        // New interesection event, save id and window y\n                        this.lastIntersected = entry.target.dataset.slideid;\n                        intersectionY = window.scrollY;\n                    } else if (!entry.isIntersecting && entry.target.dataset.slideid == this.lastIntersected) {\n                        //console.log(this.iIndex + \": \" + entry.isIntersecting + \" \" + this.lastIntersected);\n                        for (let x = 0; x < slides.length; x++) {\n                            if (slides[x].dataset.slideid == lastIntersected) {\n                                // Are we scrolling up or down, set previous or next slide\n                                if (window.scrollY < intersectionY && x > 0) {\n                                    nextSlide = slides[x - 1];\n                                } else if (window.scrollY > intersectionY && (x + 1) < slides.length) {\n                                    nextSlide = slides[x + 1];\n                                } else {\n                                    nextSlide = slides[x];\n                                }\n                            }\n                        }\n                        this.lastIntersected = \"\";\n                    }\n                });\n                if (nextSlide) {\n                    console.log('trigger: ' + nextSlide.dataset.slideid);\n                    observerTimeouts[nextSlide.dataset.slideid] = setTimeout(\n                        function () {\n                            nextSlide.dataset.isActive = \"true\";\n                            this.triggerSlideMapEvents(nextSlide.dataset.slideid);\n                        }.bind(this),\n                        1000\n                    );\n                }\n                this.iIndex += 1;\n            }.bind(this),\n            {\n                threshold: [0.4],\n            }\n        );\n\n        // Scroll end listener to catch the end of an over link jump\n        /*document.addEventListener(\"scrollend\", function (e) {\n\n            if (!this.observerEnabled) {\n                console.log(\"Enabled\");\n                this.observerEnabled = true;\n            }\n        });*/\n\n        //this.storyFeatureLayerGroup.addLayer(this.allFeaturesLayer);\n        for (let s = 0; s < this.slideElements.length; s++) {\n            observer.observe(this.slideElements[s]);\n        }\n        // Add intersection observer for filters\n        observer.observe(document.getElementById(\"filters\"));\n\n        let overviewLinks = document.getElementsByClassName(\"overviewLink\");\n\n        for (let i = 0; i < overviewLinks.length; i++) {\n            overviewLinks[i].addEventListener('click', this.onOverviewLinkClick.bind(this));\n        }\n\n        let homelandsSlide = this.getSlideById(500);\n        let pathways1Slide = this.getSlideById(600);\n        let pathways2Slide = this.getSlideById(700);\n        let villagerssettlersSlide = this.getSlideById(800);\n        let linesSlide = this.getSlideById(900);\n\n        let StartingBounds = {\n            \"homelands\": this.getStoryFrameBounds(homelandsSlide.fid),\n            \"pathways1\": this.getStoryFrameBounds(pathways1Slide.fid),\n            \"pathways2\": this.getStoryFrameBounds(pathways2Slide.fid),\n            \"villagerssettlers\": this.getStoryFrameBounds(villagerssettlersSlide.fid),\n            \"lines\": this.getStoryFrameBounds(linesSlide.fid),\n        };\n        console.log(StartingBounds);\n\n        // Init our d3 intro class and pass relevant layer data\n        this.d3Intro = new _d3intro_js__WEBPACK_IMPORTED_MODULE_0__.D3intro(this.storyUris, this.L, this.d3, StartingBounds);\n        this.d3Intro.homelandsSlide = homelandsSlide;\n        this.d3Intro.pathways1Slide = pathways1Slide;\n        this.d3Intro.pathways2Slide = pathways2Slide;\n        this.d3Intro.villagerssettlersSlide = villagerssettlersSlide;\n        this.d3Intro.linesSlide.push(linesSlide);\n        this.d3Intro.linesSlide.push(this.getSlideById(901));\n        this.d3Intro.linesSlide.push(this.getSlideById(902));\n        this.d3Intro.linesSlide.push(this.getSlideById(903));\n        this.svg = await this.d3Intro.loadD3(this.map);\n    }\n\n    onOverviewLinkClick(evt) {\n        let target = evt.target;\n        if (target.nodeName == \"SPAN\") {\n            // get the parent\n            target = target.parentElement;\n        }\n        // Clear our svgs and layers\n        this.d3Intro.stopAll(this.map);\n        this.d3Intro.clearSvg();\n        this.storyFeatureLayerGroup.clearLayers();\n\n        this.observerEnabled = false;\n        let dataset = target.dataset;\n        if (target.dataset) {\n            // In a timeout so we have time to scroll there\n            this.overviewTimeout = setTimeout(function () {\n                 // Make sure it's clear\n                 this.storyFeatureLayerGroup.clearLayers();\n                 // Trigger the d3 slide we've arrived at.\n                 let slideId = dataset.slideid;\n                 if (slideId) {\n                     console.log(slideId);\n                     this.triggerSlideMapEvents(slideId);\n                 }\n                 // re-enable observer\n                 this.observerEnabled = true;\n             }.bind(this), 1500);\n        }\n        return true;\n    }\n\n\n    clearFeatureText() {\n        this.storyFeatureLayerGroup.eachLayer(\n            function (layer) {\n                let features = layer._layers;\n                for (let [key, feature] of Object.entries(features)) {\n                    let featureId = feature.feature.properties.id;\n                    if (key && this.textFeatures[featureId] && feature._text != null) {\n                        feature.setText(null);\n                    }\n                }\n            }.bind(this)\n        );\n    }\n\n    /** Map level events such as zoom, used to update text levels\n     *\n     */\n    attachMapEvents() {\n        this.map.on(\n            \"zoomend\",\n            function () {\n                let TextSize = this.map.getZoom() + 4 + \"px\";\n\n                this.storyFeatureLayerGroup.eachLayer(\n                    function (layer) {\n                        if (this.clonedRiverLayer && layer == this.clonedRiverLayer) {\n                            let features = layer._layers;\n                            for (let [key, feature] of Object.entries(features)) {\n                                let featureId = feature.feature.properties.id;\n                                if (key && this.textFeatures[featureId]) {\n                                    feature.setText(null);\n                                    if (this.map.getZoom() >= this.textMinZoomLevel) {\n                                        let textAttributes = this.defaultTextAttributes;\n                                        textAttributes[\"font-size\"] = TextSize;\n                                        // nullifying text - not sure that this is needed\n                                        // but leaving code in place incase ...\n                                        feature.setText(null/*this.textFeatures[featureId].text*/, {\n                                            orientation: this.textFeatures[featureId].orientation,\n                                            offset: 5,\n                                            center: true,\n                                            attributes: textAttributes,\n                                        });\n                                    }\n                                }\n                            }\n                        }\n                    }.bind(this)\n                );\n                //for (let x=0; x< this.storyFeatureLayerGroup.getLayers());\n            }.bind(this)\n        );\n\n    }\n\n    /*\n    Adding features to the shadow layer e.g. lines that have a second feature layer\n     */\n    onEachShadowFeature(feature, layer) {\n        switch (feature.geometry.type) {\n            case \"MultiLineString\":\n                switch (feature.properties.sub_type) {\n                    case 5:\n                        layer.setStyle(this.lineLandRouteHighlightStyle);\n                        layer.bindPopup(\"This is one of those duplicated lines\");\n                        //layer.setText(feature.properties.norm_text);\n                        // Can we instantiate the layer twice here - once with an offset ??\n                        //let lineCopy = JSON.stringify(layer.feature);\n                        // need to get the \"feature\" info from this cloned object\n                        //let dupLine = JSON.parse(lineCopy);\n                        // Create a new pane to hold the centre lane (z-index < 400)\n                        //this.map.createPane('lane-lines').style.zIndex = 300;\n                        //let dupLayer = new L.geoJSON();\n                        //dupLayer.addData(dupLine);\n                        //dupLayer.addTo(this.map);\n                        //dupLayer.setStyle(this.lineLandRouteHighlightStyle);\n                        // Viewport debugging\n                        //dupLayer.bindPopup(\"This is one of those duplicated lines\");\n                        break;\n                }\n                break;\n        }\n    }\n\n    onEachFeature(feature, layer) {\n        // does this feature have a property named popupContent?\n        if (\n            (feature.properties &&\n                (feature.properties.map_text || feature.properties.norm_text)) ||\n            feature.properties.Name\n        ) {\n            if (feature.properties.map_text && [7, 11].includes(feature.properties.sub_type)) {\n                // Catching if this is just a text region on the map ...\n                layer.bindPopup(feature.properties.map_text);\n                if (feature.properties.date_yr) {\n                    layer.bindPopup(\n                        \"<p style='font-family:Playfair Display,serif'><em>\" + '\"'\n                        + feature.properties.map_text + '\"' + \"</em></p>\" +\n                        \"<strong>\" +\n                        this.mapLookup[feature.properties.map_source] +\n                        \"</strong>\"\n                        // temp adding sub_type and type to popups\n                        + \"<p>sub_type:\" + feature.properties.sub_type + \"</p>\"\n                    );\n                }\n            } else if (feature.properties.map_text) {\n                layer.bindPopup(feature.properties.map_text);\n                if (feature.properties.date_yr) {\n                    layer.bindPopup(\n                        feature.properties.map_text +\n                        \"<br><strong>\" +\n                        this.mapLookup[feature.properties.map_source] +\n                        \"</strong>\"\n                        // temp adding sub_type and type to popups\n                        + \"<p>sub_type:\" + feature.properties.sub_type + \"</p>\"\n                    );\n                }\n            } else if (feature.properties.norm_text) {\n                layer.bindPopup(feature.properties.norm_text);\n                if (feature.properties.date_yr) {\n                    layer.bindPopup(\n                        feature.properties.norm_text +\n                        \"</br><strong>\" +\n                        this.mapLookup[feature.properties.map_source] +\n                        \"</strong>\"\n                        // temp adding sub_type and type to popups\n                        + \"<p>sub_type:\" + feature.properties.sub_type + \"</p>\"\n                    );\n                }\n            } else {\n                layer.bindPopup(\n                    feature.properties.Name + \"</br><strong>Native Land Data API</strong>\"\n                );\n            }\n        }\n        switch (feature.geometry.type) {\n            case \"Point\":\n                // Do nothing - point styles are defined in pointToFeature\n                break;\n            // If polys\n            case \"MultiPolygon\":\n                switch (feature.properties.sub_type) {\n                    case 3:\n                        layer.setStyle(this.polyBorderStyle);\n                        break;\n                    case 4:\n                        layer.setStyle(this.polySettlementStyle);\n                        break;\n                    case 6:\n                        layer.setStyle(this.polySeaRouteStyle);\n                        break;\n                    case 7:\n                        layer.setStyle(this.polyDescriptiveStyle);\n\t\t\t\t\t\t//layer.setStyle(this.polyDomainNativeStyle);\n                        break;\n                    case 8:\n                        layer.setStyle(this.polyRiverRouteStyle);\n                        break;\n                    case 9:\n                        layer.setStyle(this.polyMiscStyle);\n                        break;\n                    case 10:\n                        layer.setStyle(this.polyToponymStyle);\n                        break;\n                    case 11:\n                        // Capture Indig vs Haudenasnee\n                        switch (feature.properties.identity) {\n                            case 2:\n                                // Red poly\n                                layer.setStyle(this.polyNativeStyle);\n                                break;\n                            case 3:\n                                //Grey poly (Haudenasuanee)\n                                layer.setStyle(this.polyAnnoStyle);\n                                break;\n                            default:\n                                layer.setStyle(this.polyEuroStyle);\n                        }\n                        break;\n\t\t\t        case 14:\n\t\t\t\t\t\t// new sub_type for geographical features\n                        // Capture Indig vs Haudenasnee\n                        switch (feature.properties.identity) {\n                            case 2:\n                                // Red poly\n                                layer.setStyle(this.polyDomainNativeStyle);\n                                break;\n                            case 3:\n                                //Grey poly (Haudenasuanee)\n                                layer.setStyle(this.polyDomainHaudenasuaneeStyle);\n                                break;\n                            default:\n                                layer.setStyle(this.polyDomainEuroStyle);\n                        }\n                        break;\n                }\n                break;\n            // If lines\n            case \"MultiLineString\":\n                switch (feature.properties.sub_type) {\n                    case 3:\n                        layer.setStyle(this.lineBorderStyle);\n                        //layer.setText(feature.properties.norm_text);\n                        break;\n                    case 5:\n                        layer.setStyle(this.lineLandRouteStyle);\n                        //layer.setText(feature.properties.norm_text);\n                        this.shadowFeatures.push(feature);\n                        // Can we instantiate the layer twice here - once with an offset ??\n                        //let lineCopy = JSON.stringify(layer.feature);\n                        // need to get the \"feature\" info from this cloned object\n                        //let dupLine = JSON.parse(lineCopy);\n                        // Create a new pane to hold the centre lane (z-index < 400)\n                        //this.map.createPane('lane-lines').style.zIndex = 300;\n                        //let dupLayer = new L.geoJSON();\n                        //dupLayer.addData(dupLine);\n                        //dupLayer.addTo(this.map);\n                        //dupLayer.setStyle(this.lineLandRouteHighlightStyle);\n                        // Viewport debugging\n                        //dupLayer.bindPopup(\"This is one of those duplicated lines\");\n                        break;\n                    case 6:\n                        layer.setStyle(this.lineSeaRouteStyle);\n                        break;\n                    case 8:\n                        layer.setStyle(this.lineRiverRouteStyle);\n                        break;\n                    case 9:\n                        layer.setStyle(this.lineMiscStyle);\n                        break;\n                    case 10:\n                        layer.setStyle(this.lineToponymStyle);\n                        break;\n                }\n                break;\n            default:\n                layer.setStyle(this.defaultLineStyle);\n        }\n    }\n\n    getStoryFrameBounds(fid) {\n        for (let f = 0; f < this.storyFrames.length; f++) {\n            if (this.storyFrames[f].FID == fid) {\n                return this.storyFrames[f].bounds;\n            }\n        }\n        return null;\n    }\n\n    /**\n     * Load the story frame objects from json, convert the feature to bounds and\n     * store to be added to slides later\n     * @returns {Promise<void>}\n     */\n    async loadStoryFrames() {\n        if (this.storyUris && this.storyUris.storyFrame) {\n            let storyFrames = await this.loadShapeFile(this.storyUris.storyFrame); // loadShapes([this.storyFrame_uri]);\n\n            for (let s = 0; s < storyFrames.features.length; s++) {\n                let feature = storyFrames.features[s];\n                let bounds = this.L.geoJson(feature.geometry).getBounds();\n                this.storyFrames.push({\n                    FID: feature.properties.FID,\n                    feature: feature,\n                    bounds: bounds,\n                });\n\n            }\n        }\n    }\n\n    /** Load separate feature files and assign to slides\n     *\n     * @returns {Promise<void>}\n     */\n    async loadFeatures() {\n        if (this.storyUris && this.storyUris.lines) {\n            // console.log(storyFeatures);\n            let storyFeatures = await this.loadShapes([this.storyUris.lines]);\n\n            for (let f = 0; f < storyFeatures.length; f++) {\n                this.addFeatureToAllSlides(\"lines\", storyFeatures[f]);\n                // todo add feature to river labels group here\n                // Then use this layer only\n            }\n\n            storyFeatures = await this.loadShapes([this.storyUris.points]);\n            for (let f = 0; f < storyFeatures.length; f++) {\n                this.addFeatureToAllSlides(\"points\", storyFeatures[f]);\n            }\n\n            storyFeatures = await this.loadShapes([this.storyUris.polys]);\n            for (let f = 0; f < storyFeatures.length; f++) {\n                this.addFeatureToAllSlides(\"polys\", storyFeatures[f]);\n            }\n\n            storyFeatures = await this.loadShapeFile([this.storyUris.indigenous]);\n\n            for (let f = 0; f < storyFeatures.features.length; f++) {\n                this.addFeatureToAllSlides(\"indigenous\", storyFeatures.features[f]);\n            }\n        }\n    }\n\n    /** Add a single criteria value to our search filters */\n    addSubtypeFilter(subtypeValue, filterValue, include) {\n\n        if (\n            this.exploreFilterControl.sub_type &&\n            this.exploreFilterControl.sub_type.length >= filterValue\n        ) {\n            const index =\n                this.exploreFilterControl.sub_type[subtypeValue].indexOf(filterValue);\n            //console.log(\"index: \" + index);\n            if (include && index < 0) {\n                this.exploreFilterControl.sub_type[subtypeValue].push(filterValue);\n                this.totalExploreFiltersApplied += 1;\n            } else if (!include) {\n                // Remove from array\n                this.exploreFilterControl.sub_type[subtypeValue].splice(index, 1);\n                if (this.totalExploreFiltersApplied > 0) {\n                    this.totalExploreFiltersApplied -= 1;\n                }\n            }\n        }\n\n        /*if (this.exploreFilterControl[featureType]) {\n\n                  if (!this.exploreFilterControl[featureType].includes[criteria]) {\n                    this.exploreFilterControl[featureType].includes[criteria] = [];\n                  }\n                  const index =\n                    this.exploreFilterControl[featureType].includes[criteria].indexOf(\n                      value\n                    );\n                  // If we're including and it isn't there already\n                  if (include && index < 0) {\n                    this.exploreFilterControl[featureType].includes[criteria].push(value);\n                  } else {\n                    // Remove\n                    // If value already in filters, turn off\n\n                    console.log(this.exploreFilterControl[featureType].includes.identity);\n                    // Special case for sub_type, don't remove if we still have identity values\n                    if (\n                      index > -1 &&\n                      (criteria != \"sub_type\" ||\n                        !this.exploreFilterControl[featureType].includes.identity ||\n                        this.exploreFilterControl[featureType].includes.identity.length ==\n                          0)\n                    ) {\n                      console.log(index);\n\n                    }\n                  }\n                }*/\n    }\n\n    /**\n     * Attach click events to control the explore controls\n     *\n     */\n    initExploreFilters() {\n        // Map filters\n        let mapFilters = document.querySelectorAll(this.exploreSelectors.map_filter);\n        if (mapFilters) {\n            for (let f = 0; f < mapFilters.length; f++) {\n                mapFilters[f].addEventListener(\n                    \"click\",\n                    this.mapFilterClickEvent.bind(this)\n                );\n                mapFilters[f].checked = false;\n            }\n        }\n\n        // Subtype filters (borders, land routes, etc.)\n        let subtypeFilters = document.querySelectorAll(this.exploreSelectors.explore_filter);\n        if (subtypeFilters) {\n            for (let f = 0; f < subtypeFilters.length; f++) {\n                subtypeFilters[f].addEventListener(\n                    \"click\",\n                    this.subtypeFilterClickEvent.bind(this)\n                );\n                subtypeFilters[f].checked = false;\n            }\n        }\n\n        //selectallFeatures\n        let selectAllExplore = document.getElementById(this.exploreSelectors.selectall_features);\n        if (selectAllExplore) {\n            selectAllExplore.addEventListener(\n                \"click\",\n                function (event) {\n                    let status = event.target.checked;\n                    this.toggleAllFeaturesEnabled = event.target.checked;\n                    this.toggleAll(this.exploreSelectors.explore_filter, event.target.checked);\n                    selectAllExplore.checked = status;\n                }.bind(this)\n            );\n            selectAllExplore.checked = false;\n        }\n        //selectallMaps\n        let selectAllMaps = document.getElementById(this.exploreSelectors.selectall_maps);\n        if (selectAllMaps) {\n            selectAllMaps.addEventListener(\n                \"click\",\n                function (event) {\n                    let status = event.target.checked;\n                    this.toggleAllMapsEnabled = event.target.checked;\n                    this.toggleAll(this.exploreSelectors.map_filter, event.target.checked);\n                    selectAllMaps.checked = status;\n                }.bind(this)\n            );\n            selectAllMaps.checked = false;\n        }\n\n        this.toggleAllFeaturesEnabled = false;\n        this.toggleAllMapsEnabled = false;\n\n        let filterWrapper = document.getElementById(\"filter-wrapper\");\n        filterWrapper.style.display = \"none\";\n\n    }\n\n    /**\n     * Function to toggle all filters or maps\n     * @param selector which group we're toggling on as selector\n     */\n    toggleAll(selector, checked) {\n\n        let elements = document.querySelectorAll(selector);\n        console.log(elements);\n        // Switch to prevent updates on each criteria selected\n        Array.prototype.forEach.call(elements, function (el) {\n            if (el.checked != checked) {\n                el.click();\n            }\n        });\n        // Apply filters and update counts\n        this.applyExploreFilters();\n        this.updateFilterCounts();\n\n    }\n\n    mapFilterClickEvent(e) {\n        let dataset = e.target.dataset;\n        this.updateToggleAllElement(this.exploreSelectors.selectall_maps, e.target.checked);\n        if (dataset) {\n            const filterValue = parseInt(dataset.filtervalue);\n            const index = this.exploreFilterControl.maps.indexOf(filterValue);\n            if (index < 0) {\n                this.exploreFilterControl.maps.push(filterValue);\n                this.totalMapFiltersApplied += 1;\n            } else {\n                this.exploreFilterControl.maps.splice(index, 1);\n                if (this.totalMapFiltersApplied > 0) {\n                    this.totalMapFiltersApplied -= 1;\n                }\n            }\n            if (!this.toggleAllFeaturesEnabled) {\n                this.applyExploreFilters();\n                // Update filter counts for map and explore\n                this.updateFilterCounts();\n            }\n\n        }\n    }\n\n    /** Updates the total filters applied numbers in the filter box */\n    updateFilterCounts() {\n        let filterTotal = document.getElementById(this.exploreSelectors.explore_counter);\n        let mapTotal = document.getElementById(this.exploreSelectors.map_counter);\n        if (filterTotal) {\n            filterTotal.innerHTML = this.totalExploreFiltersApplied;\n            // Case when all filters have been individually clicked; silently turn on toggle all controls\n            let exploreToggleAll = document.getElementById(this.exploreSelectors.selectall_features);\n            if (this.totalExploreFiltersApplied == this.totalExploreFilters && exploreToggleAll.checked == false) {\n                exploreToggleAll.checked = true;\n            } else if (exploreToggleAll.checked == true && this.totalExploreFiltersApplied < this.totalExploreFilters) {\n                exploreToggleAll.checked = false;\n            }\n        }\n        if (mapTotal) {\n            mapTotal.innerHTML = this.totalMapFiltersApplied;\n            // same as above\n            let mapToggleAll = document.getElementById(this.exploreSelectors.selectall_maps);\n            if (this.totalMapFiltersApplied == this.totalMapFilters && mapToggleAll.checked == false) {\n                mapToggleAll.checked = true;\n            } else if (mapToggleAll.checked == true && this.totalMapFiltersApplied < this.totalMapFilters) {\n                mapToggleAll.checked = false;\n            }\n        }\n\n    }\n\n    /**\n     * Keeps the select all toggles in line with their list of criteria\n     * by turning off after all is selected, then one criteria is unselected.\n     * @param selector elements selector for which checkbox\n     * @param checked The status of the criteria calling it\n     */\n    updateToggleAllElement(selector, checked) {\n        if (this.toggleAllFeaturesEnabled && checked != this.toggleAllFeaturesEnabled) {\n            this.toggleAllEnabled = false;\n            let toggleAll = document.getElementById(selector);\n            if (toggleAll) {\n                toggleAll.checked = false;\n            }\n        }\n    }\n\n    subtypeFilterClickEvent(e) {\n        let dataset = e.target.dataset;\n        this.updateToggleAllElement(this.exploreSelectors.selectall_features, e.target.checked);\n        if (dataset) {\n            // [{\"sub_type\":3, \"identity\":[2,3,4]}]\n            const values = JSON.parse(dataset.filtervalue);\n            if (values.sub_type) {\n                let subtypeValue = values.sub_type;\n\n                // Add identities\n                for (let t = 0; t < values.identity.length; t++) {\n                    this.addSubtypeFilter(\n                        subtypeValue,\n                        values.identity[t],\n                        e.target.checked\n                    );\n                }\n            }\n\n            if (!this.toggleAllFeaturesEnabled) {\n                this.applyExploreFilters();\n                // Update filter counts for map and explore\n                this.updateFilterCounts();\n            }\n\n        }\n    }\n\n    /**\n     * Apply map and subtype filters to our full dataset\n     * @return filters in slide format\n     */\n    applyExploreFilters() {\n        this.storyFeatureLayerGroup.clearLayers();\n        // Filter by subtype first\n        let filteredFeatures = [];\n        let subtypeFeatures = [];\n        console.log(this.exploreFilterControl.sub_type);\n        if (this.exploreFeatures) {\n            let exploreFilteringEnabled = false;\n            if (!this.toggleAllFeaturesEnabled) {\n                // Check if any feature criteria are enabled\n                let subtypeFilters = document.querySelectorAll(this.exploreSelectors.explore_filter);\n                if (subtypeFilters) {\n                    for (let f = 0; f < subtypeFilters.length; f++) {\n                        if (subtypeFilters[f].checked) {\n                            exploreFilteringEnabled = true;\n                            break;\n                        }\n                    }\n                }\n            }\n            if (!this.exploreFiltersDisabled) {\n\n                this.exploreFeatures.forEach(\n                    function (item) {\n                        let subtypeIndex = -1;\n                        if (\n                            item.properties &&\n                            this.exploreFilterControl.sub_type[0].length > 0\n                        ) {\n                            // All features\n                            subtypeIndex = 0;\n                        } else if (item.properties && item.properties.sub_type) {\n                            subtypeIndex = item.properties.sub_type;\n                        }\n                        // If we've got an identity e.g. European and a subtype OR just a subtype (0 in criteria)\n                        if (\n                            subtypeIndex >= 0 &&\n                            item.properties &&\n                            this.exploreFilterControl.sub_type.length > subtypeIndex) {\n                            if (\n                                (item.properties.identity && this.exploreFilterControl.sub_type[subtypeIndex].indexOf(item.properties.identity) > -1) ||\n                                (this.exploreFilterControl.sub_type[subtypeIndex].indexOf(0) > -1)\n                            ) {\n                                subtypeFeatures.push(item);\n                            }\n                        }\n                    }.bind(this)\n                );\n            }\n        }\n\n        // Filter what we've done in subtype by map\n        // todo we need default behaviour so toggle all if explore filter selected\n        // but don't filter\n        // Otherwise filter\n        if (this.toggleAllMapsEnabled) {\n            filteredFeatures = subtypeFeatures;\n        } else if (this.exploreFilterControl.maps.length == 0 && !this.toggleAllMapsEnabled) {\n            // In this case, no maps selected, show nothing\n            filteredFeatures = [];\n        } else if (this.exploreFilterControl.maps.length > 0 && !this.toggleAllMapsEnabled) {\n            // Filter by map\n\n            // If explored filters are disabled, enable them\n            if (this.exploreFiltersDisabled) {\n                let filters = document.getElementById(\"mapFilters\");\n                let removeClass = filters.getAttribute(\"class\").replace(this.exploreFiltersDisabledClass, \"\");\n                console.log(removeClass);\n                filters.setAttribute(\"class\", removeClass);\n                this.exploreFiltersDisabled = false;\n            }\n            console.log(subtypeFeatures);\n\n            let iterateFeatures = subtypeFeatures;\n            iterateFeatures.forEach(\n                function (item) {\n                    if (\n                        item.properties &&\n                        item.properties.map_source &&\n                        this.exploreFilterControl.maps.indexOf(item.properties.map_source) >\n                        -1\n                    ) {\n                        filteredFeatures.push(item);\n                    }\n                }.bind(this)\n            );\n        }\n\n        if (filteredFeatures && filteredFeatures.length > 0) {\n\n            // ONLY show the layer if we've got something at the end.\n            this.exploreFeaturesLayer = this.L.geoJSON(filteredFeatures, {\n                //style: this.defaultLineStyle,\n                pointToLayer: this.pointToLayer.bind(this),\n                onEachFeature: this.onEachFeature.bind(this),\n            });\n            this.storyFeatureLayerGroup.addLayer(this.exploreFeaturesLayer);\n        }\n\n\n    }\n\n    /** Apply filter logic to feature of one type\n     * To be included it must pass all inclcudes (e.g sub type 12 and map_type 5)\n     * If filters passed are for excludes, then a true result means exclude this feature\n     * @param feature\n     * @param filters filters for this type\n     * @return {boolean} Include\n     */\n    filterFeature(feature, filters) {\n        let result = false;\n        for (const [field, includeValues] of Object.entries(filters)) {\n            if (field == \"id\" && field in feature.properties) {\n                // If there's an id include check that first\n                if (includeValues.includes(feature.properties.id)) {\n                    result = true;\n                    break;\n                }\n            }\n            // If they match ALL include rules, set to include\n            if (\n                field in feature.properties &&\n                includeValues.includes(feature.properties[field])\n            ) {\n                result = true;\n            } else {\n                result = false;\n                break;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * Apply filter criteria to a feature to see if it should be included in this\n     * slide\n     * @param feature\n     * @param featureType\n     * @param slide\n     * @return {boolean} include in feature\n     */\n    includeFeature(feature, featureType, slide) {\n        let includeFeature = false;\n        switch (featureType) {\n            case \"lines\":\n                if (slide.lines) {\n                    if (slide.lines.includes) {\n                        includeFeature = this.filterFeature(feature, slide.lines.includes);\n                    }\n                    if (slide.lines.excludes && includeFeature === true) {\n                        includeFeature = !this.filterFeature(feature, slide.lines.excludes);\n                    }\n                }\n                break;\n\n            case \"polys\":\n                if (slide.polys) {\n                    if (slide.polys.includes) {\n                        includeFeature = this.filterFeature(feature, slide.polys.includes);\n                    }\n                    if (slide.polys.excludes && includeFeature === true) {\n                        includeFeature = !this.filterFeature(feature, slide.polys.excludes);\n                    }\n                }\n                break;\n            case \"points\":\n                if (slide.points) {\n                    if (slide.points.includes) {\n                        includeFeature = this.filterFeature(feature, slide.points.includes);\n                    }\n                    if (slide.points.excludes && includeFeature === true) {\n                        includeFeature = !this.filterFeature(\n                            feature,\n                            slide.points.excludes\n                        );\n                    }\n                }\n                break;\n            case \"indigenous\":\n                if (slide.indigenous) {\n                    includeFeature = this.filterFeature(\n                        feature,\n                        slide.indigenous.includes\n                    );\n                }\n                break;\n            default:\n                break;\n        }\n\n\n        return includeFeature;\n    }\n\n    /**\n     * Add the feature to as many slide groups\n     * as pass the conditions in slideRules.\n     *\n     * @param featureType point, poly, line\n     * @param feature the feature to assign\n     */\n    addFeatureToAllSlides(featureType, feature) {\n        for (let s = 0; s < this.slides.length; s++) {\n            // Foreach slide rule\n            let slide = this.slides[s];\n            let includeFeature = this.includeFeature(feature, featureType, slide);\n            if (includeFeature) {\n                slide.features.push(feature);\n            }\n        }\n\n        // Add to explorefeatures if it has one of our subtypes\n        if (feature && feature.properties && feature.properties.sub_type &&\n            this.exploreFeatureSubtypes.includes(feature.properties.sub_type)) {\n            this.exploreFeatures.push(feature);\n\n        }\n    }\n\n    // Explore and filter functionality\n\n    loadExploreLayer() {\n        console.log('init explore layer');\n        // Make sure d3 is clear\n        this.d3Intro.stopAll(this.map);\n        this.d3Intro.clearSvg();\n        clearTimeout(this.overviewTimeout);\n        this.toggleFilterControls();\n\n        let mapFilters = document.querySelectorAll(this.exploreSelectors.map_filter);\n        if (mapFilters) {\n            for (let f = 0; f < mapFilters.length; f++) {\n                mapFilters[f].checked = false;\n            }\n        }\n\n        // Subtype filters (borders, land routes, etc.)\n        let subtypeFilters = document.querySelectorAll(this.exploreSelectors.explore_filter);\n        if (subtypeFilters) {\n            for (let f = 0; f < subtypeFilters.length; f++) {\n                subtypeFilters[f].checked = false;\n            }\n        }\n\n        //selectallFeatures\n        let selectAllExplore = document.getElementById(this.exploreSelectors.selectall_features);\n        if (selectAllExplore) {\n            selectAllExplore.checked = false;\n        }\n        //selectallMaps\n        let selectAllMaps = document.getElementById(this.exploreSelectors.selectall_maps);\n        if (selectAllMaps) {\n            selectAllMaps.checked = false;\n        }\n\n        this.toggleAllFeaturesEnabled = false;\n        this.toggleAllMapsEnabled = false;\n\n    }\n\n    toggleFilterControls() {\n        let filterWrapper = document.getElementById(\"filter-wrapper\");\n        let filterButton = document.getElementsByClassName(\"filter-button\")[0];\n        if (this.filterControlsVisible) {\n            filterButton.click();\n            filterWrapper.style.display = \"none\";\n            this.filterControlsVisible = false;\n        } else {\n            // Toggle the filter and make it visible\n            filterWrapper.style.display = \"block\";\n            filterButton.click();\n            this.filterControlsVisible = true;\n        }\n\n    }\n}\n\n//# sourceURL=webpack://frontend/./src/storymap.js?");

/***/ }),

/***/ "../node_modules/string-strip-html/dist/string-strip-html.cjs.js":
/*!***********************************************************************!*\
  !*** ../node_modules/string-strip-html/dist/string-strip-html.cjs.js ***!
  \***********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("/**\n * @name string-strip-html\n * @fileoverview Strip HTML tags from strings. No parser, accepts mixed sources.\n * @version 8.5.0\n * @author Roy Revelt, Codsen Ltd\n * @license MIT\n * {@link https://codsen.com/os/string-strip-html/}\n */\n\n\nvar __create = Object.create;\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __getProtoOf = Object.getPrototypeOf;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __commonJS = (cb, mod) => function __require() {\n  return mod || (0, cb[__getOwnPropNames(cb)[0]])((mod = { exports: {} }).exports, mod), mod.exports;\n};\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(\n  // If the importer is in node compatibility mode or this is not an ESM\n  // file that has been converted to a CommonJS file using a Babel-\n  // compatible transform (i.e. \"__esModule\" has not been set), then set\n  // \"default\" to the CommonJS \"module.exports\" for node compatibility.\n  isNodeMode || !mod || !mod.__esModule ? __defProp(target, \"default\", { value: mod, enumerable: true }) : target,\n  mod\n));\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, \"__esModule\", { value: true }), mod);\n\n// ../../node_modules/html-entities/lib/named-references.js\nvar require_named_references = __commonJS({\n  \"../../node_modules/html-entities/lib/named-references.js\"(exports) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    exports.bodyRegExps = { xml: /&(?:#\\d+|#[xX][\\da-fA-F]+|[0-9a-zA-Z]+);?/g, html4: /&(?:nbsp|iexcl|cent|pound|curren|yen|brvbar|sect|uml|copy|ordf|laquo|not|shy|reg|macr|deg|plusmn|sup2|sup3|acute|micro|para|middot|cedil|sup1|ordm|raquo|frac14|frac12|frac34|iquest|Agrave|Aacute|Acirc|Atilde|Auml|Aring|AElig|Ccedil|Egrave|Eacute|Ecirc|Euml|Igrave|Iacute|Icirc|Iuml|ETH|Ntilde|Ograve|Oacute|Ocirc|Otilde|Ouml|times|Oslash|Ugrave|Uacute|Ucirc|Uuml|Yacute|THORN|szlig|agrave|aacute|acirc|atilde|auml|aring|aelig|ccedil|egrave|eacute|ecirc|euml|igrave|iacute|icirc|iuml|eth|ntilde|ograve|oacute|ocirc|otilde|ouml|divide|oslash|ugrave|uacute|ucirc|uuml|yacute|thorn|yuml|quot|amp|lt|gt|#\\d+|#[xX][\\da-fA-F]+|[0-9a-zA-Z]+);?/g, html5: /&(?:AElig|AMP|Aacute|Acirc|Agrave|Aring|Atilde|Auml|COPY|Ccedil|ETH|Eacute|Ecirc|Egrave|Euml|GT|Iacute|Icirc|Igrave|Iuml|LT|Ntilde|Oacute|Ocirc|Ograve|Oslash|Otilde|Ouml|QUOT|REG|THORN|Uacute|Ucirc|Ugrave|Uuml|Yacute|aacute|acirc|acute|aelig|agrave|amp|aring|atilde|auml|brvbar|ccedil|cedil|cent|copy|curren|deg|divide|eacute|ecirc|egrave|eth|euml|frac12|frac14|frac34|gt|iacute|icirc|iexcl|igrave|iquest|iuml|laquo|lt|macr|micro|middot|nbsp|not|ntilde|oacute|ocirc|ograve|ordf|ordm|oslash|otilde|ouml|para|plusmn|pound|quot|raquo|reg|sect|shy|sup1|sup2|sup3|szlig|thorn|times|uacute|ucirc|ugrave|uml|uuml|yacute|yen|yuml|#\\d+|#[xX][\\da-fA-F]+|[0-9a-zA-Z]+);?/g };\n    exports.namedReferences = { xml: { entities: { \"&lt;\": \"<\", \"&gt;\": \">\", \"&quot;\": '\"', \"&apos;\": \"'\", \"&amp;\": \"&\" }, characters: { \"<\": \"&lt;\", \">\": \"&gt;\", '\"': \"&quot;\", \"'\": \"&apos;\", \"&\": \"&amp;\" } }, html4: { entities: { \"&apos;\": \"'\", \"&nbsp\": \"\\xA0\", \"&nbsp;\": \"\\xA0\", \"&iexcl\": \"\\xA1\", \"&iexcl;\": \"\\xA1\", \"&cent\": \"\\xA2\", \"&cent;\": \"\\xA2\", \"&pound\": \"\\xA3\", \"&pound;\": \"\\xA3\", \"&curren\": \"\\xA4\", \"&curren;\": \"\\xA4\", \"&yen\": \"\\xA5\", \"&yen;\": \"\\xA5\", \"&brvbar\": \"\\xA6\", \"&brvbar;\": \"\\xA6\", \"&sect\": \"\\xA7\", \"&sect;\": \"\\xA7\", \"&uml\": \"\\xA8\", \"&uml;\": \"\\xA8\", \"&copy\": \"\\xA9\", \"&copy;\": \"\\xA9\", \"&ordf\": \"\\xAA\", \"&ordf;\": \"\\xAA\", \"&laquo\": \"\\xAB\", \"&laquo;\": \"\\xAB\", \"&not\": \"\\xAC\", \"&not;\": \"\\xAC\", \"&shy\": \"\\xAD\", \"&shy;\": \"\\xAD\", \"&reg\": \"\\xAE\", \"&reg;\": \"\\xAE\", \"&macr\": \"\\xAF\", \"&macr;\": \"\\xAF\", \"&deg\": \"\\xB0\", \"&deg;\": \"\\xB0\", \"&plusmn\": \"\\xB1\", \"&plusmn;\": \"\\xB1\", \"&sup2\": \"\\xB2\", \"&sup2;\": \"\\xB2\", \"&sup3\": \"\\xB3\", \"&sup3;\": \"\\xB3\", \"&acute\": \"\\xB4\", \"&acute;\": \"\\xB4\", \"&micro\": \"\\xB5\", \"&micro;\": \"\\xB5\", \"&para\": \"\\xB6\", \"&para;\": \"\\xB6\", \"&middot\": \"\\xB7\", \"&middot;\": \"\\xB7\", \"&cedil\": \"\\xB8\", \"&cedil;\": \"\\xB8\", \"&sup1\": \"\\xB9\", \"&sup1;\": \"\\xB9\", \"&ordm\": \"\\xBA\", \"&ordm;\": \"\\xBA\", \"&raquo\": \"\\xBB\", \"&raquo;\": \"\\xBB\", \"&frac14\": \"\\xBC\", \"&frac14;\": \"\\xBC\", \"&frac12\": \"\\xBD\", \"&frac12;\": \"\\xBD\", \"&frac34\": \"\\xBE\", \"&frac34;\": \"\\xBE\", \"&iquest\": \"\\xBF\", \"&iquest;\": \"\\xBF\", \"&Agrave\": \"\\xC0\", \"&Agrave;\": \"\\xC0\", \"&Aacute\": \"\\xC1\", \"&Aacute;\": \"\\xC1\", \"&Acirc\": \"\\xC2\", \"&Acirc;\": \"\\xC2\", \"&Atilde\": \"\\xC3\", \"&Atilde;\": \"\\xC3\", \"&Auml\": \"\\xC4\", \"&Auml;\": \"\\xC4\", \"&Aring\": \"\\xC5\", \"&Aring;\": \"\\xC5\", \"&AElig\": \"\\xC6\", \"&AElig;\": \"\\xC6\", \"&Ccedil\": \"\\xC7\", \"&Ccedil;\": \"\\xC7\", \"&Egrave\": \"\\xC8\", \"&Egrave;\": \"\\xC8\", \"&Eacute\": \"\\xC9\", \"&Eacute;\": \"\\xC9\", \"&Ecirc\": \"\\xCA\", \"&Ecirc;\": \"\\xCA\", \"&Euml\": \"\\xCB\", \"&Euml;\": \"\\xCB\", \"&Igrave\": \"\\xCC\", \"&Igrave;\": \"\\xCC\", \"&Iacute\": \"\\xCD\", \"&Iacute;\": \"\\xCD\", \"&Icirc\": \"\\xCE\", \"&Icirc;\": \"\\xCE\", \"&Iuml\": \"\\xCF\", \"&Iuml;\": \"\\xCF\", \"&ETH\": \"\\xD0\", \"&ETH;\": \"\\xD0\", \"&Ntilde\": \"\\xD1\", \"&Ntilde;\": \"\\xD1\", \"&Ograve\": \"\\xD2\", \"&Ograve;\": \"\\xD2\", \"&Oacute\": \"\\xD3\", \"&Oacute;\": \"\\xD3\", \"&Ocirc\": \"\\xD4\", \"&Ocirc;\": \"\\xD4\", \"&Otilde\": \"\\xD5\", \"&Otilde;\": \"\\xD5\", \"&Ouml\": \"\\xD6\", \"&Ouml;\": \"\\xD6\", \"&times\": \"\\xD7\", \"&times;\": \"\\xD7\", \"&Oslash\": \"\\xD8\", \"&Oslash;\": \"\\xD8\", \"&Ugrave\": \"\\xD9\", \"&Ugrave;\": \"\\xD9\", \"&Uacute\": \"\\xDA\", \"&Uacute;\": \"\\xDA\", \"&Ucirc\": \"\\xDB\", \"&Ucirc;\": \"\\xDB\", \"&Uuml\": \"\\xDC\", \"&Uuml;\": \"\\xDC\", \"&Yacute\": \"\\xDD\", \"&Yacute;\": \"\\xDD\", \"&THORN\": \"\\xDE\", \"&THORN;\": \"\\xDE\", \"&szlig\": \"\\xDF\", \"&szlig;\": \"\\xDF\", \"&agrave\": \"\\xE0\", \"&agrave;\": \"\\xE0\", \"&aacute\": \"\\xE1\", \"&aacute;\": \"\\xE1\", \"&acirc\": \"\\xE2\", \"&acirc;\": \"\\xE2\", \"&atilde\": \"\\xE3\", \"&atilde;\": \"\\xE3\", \"&auml\": \"\\xE4\", \"&auml;\": \"\\xE4\", \"&aring\": \"\\xE5\", \"&aring;\": \"\\xE5\", \"&aelig\": \"\\xE6\", \"&aelig;\": \"\\xE6\", \"&ccedil\": \"\\xE7\", \"&ccedil;\": \"\\xE7\", \"&egrave\": \"\\xE8\", \"&egrave;\": \"\\xE8\", \"&eacute\": \"\\xE9\", \"&eacute;\": \"\\xE9\", \"&ecirc\": \"\\xEA\", \"&ecirc;\": \"\\xEA\", \"&euml\": \"\\xEB\", \"&euml;\": \"\\xEB\", \"&igrave\": \"\\xEC\", \"&igrave;\": \"\\xEC\", \"&iacute\": \"\\xED\", \"&iacute;\": \"\\xED\", \"&icirc\": \"\\xEE\", \"&icirc;\": \"\\xEE\", \"&iuml\": \"\\xEF\", \"&iuml;\": \"\\xEF\", \"&eth\": \"\\xF0\", \"&eth;\": \"\\xF0\", \"&ntilde\": \"\\xF1\", \"&ntilde;\": \"\\xF1\", \"&ograve\": \"\\xF2\", \"&ograve;\": \"\\xF2\", \"&oacute\": \"\\xF3\", \"&oacute;\": \"\\xF3\", \"&ocirc\": \"\\xF4\", \"&ocirc;\": \"\\xF4\", \"&otilde\": \"\\xF5\", \"&otilde;\": \"\\xF5\", \"&ouml\": \"\\xF6\", \"&ouml;\": \"\\xF6\", \"&divide\": \"\\xF7\", \"&divide;\": \"\\xF7\", \"&oslash\": \"\\xF8\", \"&oslash;\": \"\\xF8\", \"&ugrave\": \"\\xF9\", \"&ugrave;\": \"\\xF9\", \"&uacute\": \"\\xFA\", \"&uacute;\": \"\\xFA\", \"&ucirc\": \"\\xFB\", \"&ucirc;\": \"\\xFB\", \"&uuml\": \"\\xFC\", \"&uuml;\": \"\\xFC\", \"&yacute\": \"\\xFD\", \"&yacute;\": \"\\xFD\", \"&thorn\": \"\\xFE\", \"&thorn;\": \"\\xFE\", \"&yuml\": \"\\xFF\", \"&yuml;\": \"\\xFF\", \"&quot\": '\"', \"&quot;\": '\"', \"&amp\": \"&\", \"&amp;\": \"&\", \"&lt\": \"<\", \"&lt;\": \"<\", \"&gt\": \">\", \"&gt;\": \">\", \"&OElig;\": \"\\u0152\", \"&oelig;\": \"\\u0153\", \"&Scaron;\": \"\\u0160\", \"&scaron;\": \"\\u0161\", \"&Yuml;\": \"\\u0178\", \"&circ;\": \"\\u02C6\", \"&tilde;\": \"\\u02DC\", \"&ensp;\": \"\\u2002\", \"&emsp;\": \"\\u2003\", \"&thinsp;\": \"\\u2009\", \"&zwnj;\": \"\\u200C\", \"&zwj;\": \"\\u200D\", \"&lrm;\": \"\\u200E\", \"&rlm;\": \"\\u200F\", \"&ndash;\": \"\\u2013\", \"&mdash;\": \"\\u2014\", \"&lsquo;\": \"\\u2018\", \"&rsquo;\": \"\\u2019\", \"&sbquo;\": \"\\u201A\", \"&ldquo;\": \"\\u201C\", \"&rdquo;\": \"\\u201D\", \"&bdquo;\": \"\\u201E\", \"&dagger;\": \"\\u2020\", \"&Dagger;\": \"\\u2021\", \"&permil;\": \"\\u2030\", \"&lsaquo;\": \"\\u2039\", \"&rsaquo;\": \"\\u203A\", \"&euro;\": \"\\u20AC\", \"&fnof;\": \"\\u0192\", \"&Alpha;\": \"\\u0391\", \"&Beta;\": \"\\u0392\", \"&Gamma;\": \"\\u0393\", \"&Delta;\": \"\\u0394\", \"&Epsilon;\": \"\\u0395\", \"&Zeta;\": \"\\u0396\", \"&Eta;\": \"\\u0397\", \"&Theta;\": \"\\u0398\", \"&Iota;\": \"\\u0399\", \"&Kappa;\": \"\\u039A\", \"&Lambda;\": \"\\u039B\", \"&Mu;\": \"\\u039C\", \"&Nu;\": \"\\u039D\", \"&Xi;\": \"\\u039E\", \"&Omicron;\": \"\\u039F\", \"&Pi;\": \"\\u03A0\", \"&Rho;\": \"\\u03A1\", \"&Sigma;\": \"\\u03A3\", \"&Tau;\": \"\\u03A4\", \"&Upsilon;\": \"\\u03A5\", \"&Phi;\": \"\\u03A6\", \"&Chi;\": \"\\u03A7\", \"&Psi;\": \"\\u03A8\", \"&Omega;\": \"\\u03A9\", \"&alpha;\": \"\\u03B1\", \"&beta;\": \"\\u03B2\", \"&gamma;\": \"\\u03B3\", \"&delta;\": \"\\u03B4\", \"&epsilon;\": \"\\u03B5\", \"&zeta;\": \"\\u03B6\", \"&eta;\": \"\\u03B7\", \"&theta;\": \"\\u03B8\", \"&iota;\": \"\\u03B9\", \"&kappa;\": \"\\u03BA\", \"&lambda;\": \"\\u03BB\", \"&mu;\": \"\\u03BC\", \"&nu;\": \"\\u03BD\", \"&xi;\": \"\\u03BE\", \"&omicron;\": \"\\u03BF\", \"&pi;\": \"\\u03C0\", \"&rho;\": \"\\u03C1\", \"&sigmaf;\": \"\\u03C2\", \"&sigma;\": \"\\u03C3\", \"&tau;\": \"\\u03C4\", \"&upsilon;\": \"\\u03C5\", \"&phi;\": \"\\u03C6\", \"&chi;\": \"\\u03C7\", \"&psi;\": \"\\u03C8\", \"&omega;\": \"\\u03C9\", \"&thetasym;\": \"\\u03D1\", \"&upsih;\": \"\\u03D2\", \"&piv;\": \"\\u03D6\", \"&bull;\": \"\\u2022\", \"&hellip;\": \"\\u2026\", \"&prime;\": \"\\u2032\", \"&Prime;\": \"\\u2033\", \"&oline;\": \"\\u203E\", \"&frasl;\": \"\\u2044\", \"&weierp;\": \"\\u2118\", \"&image;\": \"\\u2111\", \"&real;\": \"\\u211C\", \"&trade;\": \"\\u2122\", \"&alefsym;\": \"\\u2135\", \"&larr;\": \"\\u2190\", \"&uarr;\": \"\\u2191\", \"&rarr;\": \"\\u2192\", \"&darr;\": \"\\u2193\", \"&harr;\": \"\\u2194\", \"&crarr;\": \"\\u21B5\", \"&lArr;\": \"\\u21D0\", \"&uArr;\": \"\\u21D1\", \"&rArr;\": \"\\u21D2\", \"&dArr;\": \"\\u21D3\", \"&hArr;\": \"\\u21D4\", \"&forall;\": \"\\u2200\", \"&part;\": \"\\u2202\", \"&exist;\": \"\\u2203\", \"&empty;\": \"\\u2205\", \"&nabla;\": \"\\u2207\", \"&isin;\": \"\\u2208\", \"&notin;\": \"\\u2209\", \"&ni;\": \"\\u220B\", \"&prod;\": \"\\u220F\", \"&sum;\": \"\\u2211\", \"&minus;\": \"\\u2212\", \"&lowast;\": \"\\u2217\", \"&radic;\": \"\\u221A\", \"&prop;\": \"\\u221D\", \"&infin;\": \"\\u221E\", \"&ang;\": \"\\u2220\", \"&and;\": \"\\u2227\", \"&or;\": \"\\u2228\", \"&cap;\": \"\\u2229\", \"&cup;\": \"\\u222A\", \"&int;\": \"\\u222B\", \"&there4;\": \"\\u2234\", \"&sim;\": \"\\u223C\", \"&cong;\": \"\\u2245\", \"&asymp;\": \"\\u2248\", \"&ne;\": \"\\u2260\", \"&equiv;\": \"\\u2261\", \"&le;\": \"\\u2264\", \"&ge;\": \"\\u2265\", \"&sub;\": \"\\u2282\", \"&sup;\": \"\\u2283\", \"&nsub;\": \"\\u2284\", \"&sube;\": \"\\u2286\", \"&supe;\": \"\\u2287\", \"&oplus;\": \"\\u2295\", \"&otimes;\": \"\\u2297\", \"&perp;\": \"\\u22A5\", \"&sdot;\": \"\\u22C5\", \"&lceil;\": \"\\u2308\", \"&rceil;\": \"\\u2309\", \"&lfloor;\": \"\\u230A\", \"&rfloor;\": \"\\u230B\", \"&lang;\": \"\\u2329\", \"&rang;\": \"\\u232A\", \"&loz;\": \"\\u25CA\", \"&spades;\": \"\\u2660\", \"&clubs;\": \"\\u2663\", \"&hearts;\": \"\\u2665\", \"&diams;\": \"\\u2666\" }, characters: { \"'\": \"&apos;\", \"\\xA0\": \"&nbsp;\", \"\\xA1\": \"&iexcl;\", \"\\xA2\": \"&cent;\", \"\\xA3\": \"&pound;\", \"\\xA4\": \"&curren;\", \"\\xA5\": \"&yen;\", \"\\xA6\": \"&brvbar;\", \"\\xA7\": \"&sect;\", \"\\xA8\": \"&uml;\", \"\\xA9\": \"&copy;\", \"\\xAA\": \"&ordf;\", \"\\xAB\": \"&laquo;\", \"\\xAC\": \"&not;\", \"\\xAD\": \"&shy;\", \"\\xAE\": \"&reg;\", \"\\xAF\": \"&macr;\", \"\\xB0\": \"&deg;\", \"\\xB1\": \"&plusmn;\", \"\\xB2\": \"&sup2;\", \"\\xB3\": \"&sup3;\", \"\\xB4\": \"&acute;\", \"\\xB5\": \"&micro;\", \"\\xB6\": \"&para;\", \"\\xB7\": \"&middot;\", \"\\xB8\": \"&cedil;\", \"\\xB9\": \"&sup1;\", \"\\xBA\": \"&ordm;\", \"\\xBB\": \"&raquo;\", \"\\xBC\": \"&frac14;\", \"\\xBD\": \"&frac12;\", \"\\xBE\": \"&frac34;\", \"\\xBF\": \"&iquest;\", \"\\xC0\": \"&Agrave;\", \"\\xC1\": \"&Aacute;\", \"\\xC2\": \"&Acirc;\", \"\\xC3\": \"&Atilde;\", \"\\xC4\": \"&Auml;\", \"\\xC5\": \"&Aring;\", \"\\xC6\": \"&AElig;\", \"\\xC7\": \"&Ccedil;\", \"\\xC8\": \"&Egrave;\", \"\\xC9\": \"&Eacute;\", \"\\xCA\": \"&Ecirc;\", \"\\xCB\": \"&Euml;\", \"\\xCC\": \"&Igrave;\", \"\\xCD\": \"&Iacute;\", \"\\xCE\": \"&Icirc;\", \"\\xCF\": \"&Iuml;\", \"\\xD0\": \"&ETH;\", \"\\xD1\": \"&Ntilde;\", \"\\xD2\": \"&Ograve;\", \"\\xD3\": \"&Oacute;\", \"\\xD4\": \"&Ocirc;\", \"\\xD5\": \"&Otilde;\", \"\\xD6\": \"&Ouml;\", \"\\xD7\": \"&times;\", \"\\xD8\": \"&Oslash;\", \"\\xD9\": \"&Ugrave;\", \"\\xDA\": \"&Uacute;\", \"\\xDB\": \"&Ucirc;\", \"\\xDC\": \"&Uuml;\", \"\\xDD\": \"&Yacute;\", \"\\xDE\": \"&THORN;\", \"\\xDF\": \"&szlig;\", \"\\xE0\": \"&agrave;\", \"\\xE1\": \"&aacute;\", \"\\xE2\": \"&acirc;\", \"\\xE3\": \"&atilde;\", \"\\xE4\": \"&auml;\", \"\\xE5\": \"&aring;\", \"\\xE6\": \"&aelig;\", \"\\xE7\": \"&ccedil;\", \"\\xE8\": \"&egrave;\", \"\\xE9\": \"&eacute;\", \"\\xEA\": \"&ecirc;\", \"\\xEB\": \"&euml;\", \"\\xEC\": \"&igrave;\", \"\\xED\": \"&iacute;\", \"\\xEE\": \"&icirc;\", \"\\xEF\": \"&iuml;\", \"\\xF0\": \"&eth;\", \"\\xF1\": \"&ntilde;\", \"\\xF2\": \"&ograve;\", \"\\xF3\": \"&oacute;\", \"\\xF4\": \"&ocirc;\", \"\\xF5\": \"&otilde;\", \"\\xF6\": \"&ouml;\", \"\\xF7\": \"&divide;\", \"\\xF8\": \"&oslash;\", \"\\xF9\": \"&ugrave;\", \"\\xFA\": \"&uacute;\", \"\\xFB\": \"&ucirc;\", \"\\xFC\": \"&uuml;\", \"\\xFD\": \"&yacute;\", \"\\xFE\": \"&thorn;\", \"\\xFF\": \"&yuml;\", '\"': \"&quot;\", \"&\": \"&amp;\", \"<\": \"&lt;\", \">\": \"&gt;\", \"\\u0152\": \"&OElig;\", \"\\u0153\": \"&oelig;\", \"\\u0160\": \"&Scaron;\", \"\\u0161\": \"&scaron;\", \"\\u0178\": \"&Yuml;\", \"\\u02C6\": \"&circ;\", \"\\u02DC\": \"&tilde;\", \"\\u2002\": \"&ensp;\", \"\\u2003\": \"&emsp;\", \"\\u2009\": \"&thinsp;\", \"\\u200C\": \"&zwnj;\", \"\\u200D\": \"&zwj;\", \"\\u200E\": \"&lrm;\", \"\\u200F\": \"&rlm;\", \"\\u2013\": \"&ndash;\", \"\\u2014\": \"&mdash;\", \"\\u2018\": \"&lsquo;\", \"\\u2019\": \"&rsquo;\", \"\\u201A\": \"&sbquo;\", \"\\u201C\": \"&ldquo;\", \"\\u201D\": \"&rdquo;\", \"\\u201E\": \"&bdquo;\", \"\\u2020\": \"&dagger;\", \"\\u2021\": \"&Dagger;\", \"\\u2030\": \"&permil;\", \"\\u2039\": \"&lsaquo;\", \"\\u203A\": \"&rsaquo;\", \"\\u20AC\": \"&euro;\", \"\\u0192\": \"&fnof;\", \"\\u0391\": \"&Alpha;\", \"\\u0392\": \"&Beta;\", \"\\u0393\": \"&Gamma;\", \"\\u0394\": \"&Delta;\", \"\\u0395\": \"&Epsilon;\", \"\\u0396\": \"&Zeta;\", \"\\u0397\": \"&Eta;\", \"\\u0398\": \"&Theta;\", \"\\u0399\": \"&Iota;\", \"\\u039A\": \"&Kappa;\", \"\\u039B\": \"&Lambda;\", \"\\u039C\": \"&Mu;\", \"\\u039D\": \"&Nu;\", \"\\u039E\": \"&Xi;\", \"\\u039F\": \"&Omicron;\", \"\\u03A0\": \"&Pi;\", \"\\u03A1\": \"&Rho;\", \"\\u03A3\": \"&Sigma;\", \"\\u03A4\": \"&Tau;\", \"\\u03A5\": \"&Upsilon;\", \"\\u03A6\": \"&Phi;\", \"\\u03A7\": \"&Chi;\", \"\\u03A8\": \"&Psi;\", \"\\u03A9\": \"&Omega;\", \"\\u03B1\": \"&alpha;\", \"\\u03B2\": \"&beta;\", \"\\u03B3\": \"&gamma;\", \"\\u03B4\": \"&delta;\", \"\\u03B5\": \"&epsilon;\", \"\\u03B6\": \"&zeta;\", \"\\u03B7\": \"&eta;\", \"\\u03B8\": \"&theta;\", \"\\u03B9\": \"&iota;\", \"\\u03BA\": \"&kappa;\", \"\\u03BB\": \"&lambda;\", \"\\u03BC\": \"&mu;\", \"\\u03BD\": \"&nu;\", \"\\u03BE\": \"&xi;\", \"\\u03BF\": \"&omicron;\", \"\\u03C0\": \"&pi;\", \"\\u03C1\": \"&rho;\", \"\\u03C2\": \"&sigmaf;\", \"\\u03C3\": \"&sigma;\", \"\\u03C4\": \"&tau;\", \"\\u03C5\": \"&upsilon;\", \"\\u03C6\": \"&phi;\", \"\\u03C7\": \"&chi;\", \"\\u03C8\": \"&psi;\", \"\\u03C9\": \"&omega;\", \"\\u03D1\": \"&thetasym;\", \"\\u03D2\": \"&upsih;\", \"\\u03D6\": \"&piv;\", \"\\u2022\": \"&bull;\", \"\\u2026\": \"&hellip;\", \"\\u2032\": \"&prime;\", \"\\u2033\": \"&Prime;\", \"\\u203E\": \"&oline;\", \"\\u2044\": \"&frasl;\", \"\\u2118\": \"&weierp;\", \"\\u2111\": \"&image;\", \"\\u211C\": \"&real;\", \"\\u2122\": \"&trade;\", \"\\u2135\": \"&alefsym;\", \"\\u2190\": \"&larr;\", \"\\u2191\": \"&uarr;\", \"\\u2192\": \"&rarr;\", \"\\u2193\": \"&darr;\", \"\\u2194\": \"&harr;\", \"\\u21B5\": \"&crarr;\", \"\\u21D0\": \"&lArr;\", \"\\u21D1\": \"&uArr;\", \"\\u21D2\": \"&rArr;\", \"\\u21D3\": \"&dArr;\", \"\\u21D4\": \"&hArr;\", \"\\u2200\": \"&forall;\", \"\\u2202\": \"&part;\", \"\\u2203\": \"&exist;\", \"\\u2205\": \"&empty;\", \"\\u2207\": \"&nabla;\", \"\\u2208\": \"&isin;\", \"\\u2209\": \"&notin;\", \"\\u220B\": \"&ni;\", \"\\u220F\": \"&prod;\", \"\\u2211\": \"&sum;\", \"\\u2212\": \"&minus;\", \"\\u2217\": \"&lowast;\", \"\\u221A\": \"&radic;\", \"\\u221D\": \"&prop;\", \"\\u221E\": \"&infin;\", \"\\u2220\": \"&ang;\", \"\\u2227\": \"&and;\", \"\\u2228\": \"&or;\", \"\\u2229\": \"&cap;\", \"\\u222A\": \"&cup;\", \"\\u222B\": \"&int;\", \"\\u2234\": \"&there4;\", \"\\u223C\": \"&sim;\", \"\\u2245\": \"&cong;\", \"\\u2248\": \"&asymp;\", \"\\u2260\": \"&ne;\", \"\\u2261\": \"&equiv;\", \"\\u2264\": \"&le;\", \"\\u2265\": \"&ge;\", \"\\u2282\": \"&sub;\", \"\\u2283\": \"&sup;\", \"\\u2284\": \"&nsub;\", \"\\u2286\": \"&sube;\", \"\\u2287\": \"&supe;\", \"\\u2295\": \"&oplus;\", \"\\u2297\": \"&otimes;\", \"\\u22A5\": \"&perp;\", \"\\u22C5\": \"&sdot;\", \"\\u2308\": \"&lceil;\", \"\\u2309\": \"&rceil;\", \"\\u230A\": \"&lfloor;\", \"\\u230B\": \"&rfloor;\", \"\\u2329\": \"&lang;\", \"\\u232A\": \"&rang;\", \"\\u25CA\": \"&loz;\", \"\\u2660\": \"&spades;\", \"\\u2663\": \"&clubs;\", \"\\u2665\": \"&hearts;\", \"\\u2666\": \"&diams;\" } }, html5: { entities: { \"&AElig\": \"\\xC6\", \"&AElig;\": \"\\xC6\", \"&AMP\": \"&\", \"&AMP;\": \"&\", \"&Aacute\": \"\\xC1\", \"&Aacute;\": \"\\xC1\", \"&Abreve;\": \"\\u0102\", \"&Acirc\": \"\\xC2\", \"&Acirc;\": \"\\xC2\", \"&Acy;\": \"\\u0410\", \"&Afr;\": \"\\u{1D504}\", \"&Agrave\": \"\\xC0\", \"&Agrave;\": \"\\xC0\", \"&Alpha;\": \"\\u0391\", \"&Amacr;\": \"\\u0100\", \"&And;\": \"\\u2A53\", \"&Aogon;\": \"\\u0104\", \"&Aopf;\": \"\\u{1D538}\", \"&ApplyFunction;\": \"\\u2061\", \"&Aring\": \"\\xC5\", \"&Aring;\": \"\\xC5\", \"&Ascr;\": \"\\u{1D49C}\", \"&Assign;\": \"\\u2254\", \"&Atilde\": \"\\xC3\", \"&Atilde;\": \"\\xC3\", \"&Auml\": \"\\xC4\", \"&Auml;\": \"\\xC4\", \"&Backslash;\": \"\\u2216\", \"&Barv;\": \"\\u2AE7\", \"&Barwed;\": \"\\u2306\", \"&Bcy;\": \"\\u0411\", \"&Because;\": \"\\u2235\", \"&Bernoullis;\": \"\\u212C\", \"&Beta;\": \"\\u0392\", \"&Bfr;\": \"\\u{1D505}\", \"&Bopf;\": \"\\u{1D539}\", \"&Breve;\": \"\\u02D8\", \"&Bscr;\": \"\\u212C\", \"&Bumpeq;\": \"\\u224E\", \"&CHcy;\": \"\\u0427\", \"&COPY\": \"\\xA9\", \"&COPY;\": \"\\xA9\", \"&Cacute;\": \"\\u0106\", \"&Cap;\": \"\\u22D2\", \"&CapitalDifferentialD;\": \"\\u2145\", \"&Cayleys;\": \"\\u212D\", \"&Ccaron;\": \"\\u010C\", \"&Ccedil\": \"\\xC7\", \"&Ccedil;\": \"\\xC7\", \"&Ccirc;\": \"\\u0108\", \"&Cconint;\": \"\\u2230\", \"&Cdot;\": \"\\u010A\", \"&Cedilla;\": \"\\xB8\", \"&CenterDot;\": \"\\xB7\", \"&Cfr;\": \"\\u212D\", \"&Chi;\": \"\\u03A7\", \"&CircleDot;\": \"\\u2299\", \"&CircleMinus;\": \"\\u2296\", \"&CirclePlus;\": \"\\u2295\", \"&CircleTimes;\": \"\\u2297\", \"&ClockwiseContourIntegral;\": \"\\u2232\", \"&CloseCurlyDoubleQuote;\": \"\\u201D\", \"&CloseCurlyQuote;\": \"\\u2019\", \"&Colon;\": \"\\u2237\", \"&Colone;\": \"\\u2A74\", \"&Congruent;\": \"\\u2261\", \"&Conint;\": \"\\u222F\", \"&ContourIntegral;\": \"\\u222E\", \"&Copf;\": \"\\u2102\", \"&Coproduct;\": \"\\u2210\", \"&CounterClockwiseContourIntegral;\": \"\\u2233\", \"&Cross;\": \"\\u2A2F\", \"&Cscr;\": \"\\u{1D49E}\", \"&Cup;\": \"\\u22D3\", \"&CupCap;\": \"\\u224D\", \"&DD;\": \"\\u2145\", \"&DDotrahd;\": \"\\u2911\", \"&DJcy;\": \"\\u0402\", \"&DScy;\": \"\\u0405\", \"&DZcy;\": \"\\u040F\", \"&Dagger;\": \"\\u2021\", \"&Darr;\": \"\\u21A1\", \"&Dashv;\": \"\\u2AE4\", \"&Dcaron;\": \"\\u010E\", \"&Dcy;\": \"\\u0414\", \"&Del;\": \"\\u2207\", \"&Delta;\": \"\\u0394\", \"&Dfr;\": \"\\u{1D507}\", \"&DiacriticalAcute;\": \"\\xB4\", \"&DiacriticalDot;\": \"\\u02D9\", \"&DiacriticalDoubleAcute;\": \"\\u02DD\", \"&DiacriticalGrave;\": \"`\", \"&DiacriticalTilde;\": \"\\u02DC\", \"&Diamond;\": \"\\u22C4\", \"&DifferentialD;\": \"\\u2146\", \"&Dopf;\": \"\\u{1D53B}\", \"&Dot;\": \"\\xA8\", \"&DotDot;\": \"\\u20DC\", \"&DotEqual;\": \"\\u2250\", \"&DoubleContourIntegral;\": \"\\u222F\", \"&DoubleDot;\": \"\\xA8\", \"&DoubleDownArrow;\": \"\\u21D3\", \"&DoubleLeftArrow;\": \"\\u21D0\", \"&DoubleLeftRightArrow;\": \"\\u21D4\", \"&DoubleLeftTee;\": \"\\u2AE4\", \"&DoubleLongLeftArrow;\": \"\\u27F8\", \"&DoubleLongLeftRightArrow;\": \"\\u27FA\", \"&DoubleLongRightArrow;\": \"\\u27F9\", \"&DoubleRightArrow;\": \"\\u21D2\", \"&DoubleRightTee;\": \"\\u22A8\", \"&DoubleUpArrow;\": \"\\u21D1\", \"&DoubleUpDownArrow;\": \"\\u21D5\", \"&DoubleVerticalBar;\": \"\\u2225\", \"&DownArrow;\": \"\\u2193\", \"&DownArrowBar;\": \"\\u2913\", \"&DownArrowUpArrow;\": \"\\u21F5\", \"&DownBreve;\": \"\\u0311\", \"&DownLeftRightVector;\": \"\\u2950\", \"&DownLeftTeeVector;\": \"\\u295E\", \"&DownLeftVector;\": \"\\u21BD\", \"&DownLeftVectorBar;\": \"\\u2956\", \"&DownRightTeeVector;\": \"\\u295F\", \"&DownRightVector;\": \"\\u21C1\", \"&DownRightVectorBar;\": \"\\u2957\", \"&DownTee;\": \"\\u22A4\", \"&DownTeeArrow;\": \"\\u21A7\", \"&Downarrow;\": \"\\u21D3\", \"&Dscr;\": \"\\u{1D49F}\", \"&Dstrok;\": \"\\u0110\", \"&ENG;\": \"\\u014A\", \"&ETH\": \"\\xD0\", \"&ETH;\": \"\\xD0\", \"&Eacute\": \"\\xC9\", \"&Eacute;\": \"\\xC9\", \"&Ecaron;\": \"\\u011A\", \"&Ecirc\": \"\\xCA\", \"&Ecirc;\": \"\\xCA\", \"&Ecy;\": \"\\u042D\", \"&Edot;\": \"\\u0116\", \"&Efr;\": \"\\u{1D508}\", \"&Egrave\": \"\\xC8\", \"&Egrave;\": \"\\xC8\", \"&Element;\": \"\\u2208\", \"&Emacr;\": \"\\u0112\", \"&EmptySmallSquare;\": \"\\u25FB\", \"&EmptyVerySmallSquare;\": \"\\u25AB\", \"&Eogon;\": \"\\u0118\", \"&Eopf;\": \"\\u{1D53C}\", \"&Epsilon;\": \"\\u0395\", \"&Equal;\": \"\\u2A75\", \"&EqualTilde;\": \"\\u2242\", \"&Equilibrium;\": \"\\u21CC\", \"&Escr;\": \"\\u2130\", \"&Esim;\": \"\\u2A73\", \"&Eta;\": \"\\u0397\", \"&Euml\": \"\\xCB\", \"&Euml;\": \"\\xCB\", \"&Exists;\": \"\\u2203\", \"&ExponentialE;\": \"\\u2147\", \"&Fcy;\": \"\\u0424\", \"&Ffr;\": \"\\u{1D509}\", \"&FilledSmallSquare;\": \"\\u25FC\", \"&FilledVerySmallSquare;\": \"\\u25AA\", \"&Fopf;\": \"\\u{1D53D}\", \"&ForAll;\": \"\\u2200\", \"&Fouriertrf;\": \"\\u2131\", \"&Fscr;\": \"\\u2131\", \"&GJcy;\": \"\\u0403\", \"&GT\": \">\", \"&GT;\": \">\", \"&Gamma;\": \"\\u0393\", \"&Gammad;\": \"\\u03DC\", \"&Gbreve;\": \"\\u011E\", \"&Gcedil;\": \"\\u0122\", \"&Gcirc;\": \"\\u011C\", \"&Gcy;\": \"\\u0413\", \"&Gdot;\": \"\\u0120\", \"&Gfr;\": \"\\u{1D50A}\", \"&Gg;\": \"\\u22D9\", \"&Gopf;\": \"\\u{1D53E}\", \"&GreaterEqual;\": \"\\u2265\", \"&GreaterEqualLess;\": \"\\u22DB\", \"&GreaterFullEqual;\": \"\\u2267\", \"&GreaterGreater;\": \"\\u2AA2\", \"&GreaterLess;\": \"\\u2277\", \"&GreaterSlantEqual;\": \"\\u2A7E\", \"&GreaterTilde;\": \"\\u2273\", \"&Gscr;\": \"\\u{1D4A2}\", \"&Gt;\": \"\\u226B\", \"&HARDcy;\": \"\\u042A\", \"&Hacek;\": \"\\u02C7\", \"&Hat;\": \"^\", \"&Hcirc;\": \"\\u0124\", \"&Hfr;\": \"\\u210C\", \"&HilbertSpace;\": \"\\u210B\", \"&Hopf;\": \"\\u210D\", \"&HorizontalLine;\": \"\\u2500\", \"&Hscr;\": \"\\u210B\", \"&Hstrok;\": \"\\u0126\", \"&HumpDownHump;\": \"\\u224E\", \"&HumpEqual;\": \"\\u224F\", \"&IEcy;\": \"\\u0415\", \"&IJlig;\": \"\\u0132\", \"&IOcy;\": \"\\u0401\", \"&Iacute\": \"\\xCD\", \"&Iacute;\": \"\\xCD\", \"&Icirc\": \"\\xCE\", \"&Icirc;\": \"\\xCE\", \"&Icy;\": \"\\u0418\", \"&Idot;\": \"\\u0130\", \"&Ifr;\": \"\\u2111\", \"&Igrave\": \"\\xCC\", \"&Igrave;\": \"\\xCC\", \"&Im;\": \"\\u2111\", \"&Imacr;\": \"\\u012A\", \"&ImaginaryI;\": \"\\u2148\", \"&Implies;\": \"\\u21D2\", \"&Int;\": \"\\u222C\", \"&Integral;\": \"\\u222B\", \"&Intersection;\": \"\\u22C2\", \"&InvisibleComma;\": \"\\u2063\", \"&InvisibleTimes;\": \"\\u2062\", \"&Iogon;\": \"\\u012E\", \"&Iopf;\": \"\\u{1D540}\", \"&Iota;\": \"\\u0399\", \"&Iscr;\": \"\\u2110\", \"&Itilde;\": \"\\u0128\", \"&Iukcy;\": \"\\u0406\", \"&Iuml\": \"\\xCF\", \"&Iuml;\": \"\\xCF\", \"&Jcirc;\": \"\\u0134\", \"&Jcy;\": \"\\u0419\", \"&Jfr;\": \"\\u{1D50D}\", \"&Jopf;\": \"\\u{1D541}\", \"&Jscr;\": \"\\u{1D4A5}\", \"&Jsercy;\": \"\\u0408\", \"&Jukcy;\": \"\\u0404\", \"&KHcy;\": \"\\u0425\", \"&KJcy;\": \"\\u040C\", \"&Kappa;\": \"\\u039A\", \"&Kcedil;\": \"\\u0136\", \"&Kcy;\": \"\\u041A\", \"&Kfr;\": \"\\u{1D50E}\", \"&Kopf;\": \"\\u{1D542}\", \"&Kscr;\": \"\\u{1D4A6}\", \"&LJcy;\": \"\\u0409\", \"&LT\": \"<\", \"&LT;\": \"<\", \"&Lacute;\": \"\\u0139\", \"&Lambda;\": \"\\u039B\", \"&Lang;\": \"\\u27EA\", \"&Laplacetrf;\": \"\\u2112\", \"&Larr;\": \"\\u219E\", \"&Lcaron;\": \"\\u013D\", \"&Lcedil;\": \"\\u013B\", \"&Lcy;\": \"\\u041B\", \"&LeftAngleBracket;\": \"\\u27E8\", \"&LeftArrow;\": \"\\u2190\", \"&LeftArrowBar;\": \"\\u21E4\", \"&LeftArrowRightArrow;\": \"\\u21C6\", \"&LeftCeiling;\": \"\\u2308\", \"&LeftDoubleBracket;\": \"\\u27E6\", \"&LeftDownTeeVector;\": \"\\u2961\", \"&LeftDownVector;\": \"\\u21C3\", \"&LeftDownVectorBar;\": \"\\u2959\", \"&LeftFloor;\": \"\\u230A\", \"&LeftRightArrow;\": \"\\u2194\", \"&LeftRightVector;\": \"\\u294E\", \"&LeftTee;\": \"\\u22A3\", \"&LeftTeeArrow;\": \"\\u21A4\", \"&LeftTeeVector;\": \"\\u295A\", \"&LeftTriangle;\": \"\\u22B2\", \"&LeftTriangleBar;\": \"\\u29CF\", \"&LeftTriangleEqual;\": \"\\u22B4\", \"&LeftUpDownVector;\": \"\\u2951\", \"&LeftUpTeeVector;\": \"\\u2960\", \"&LeftUpVector;\": \"\\u21BF\", \"&LeftUpVectorBar;\": \"\\u2958\", \"&LeftVector;\": \"\\u21BC\", \"&LeftVectorBar;\": \"\\u2952\", \"&Leftarrow;\": \"\\u21D0\", \"&Leftrightarrow;\": \"\\u21D4\", \"&LessEqualGreater;\": \"\\u22DA\", \"&LessFullEqual;\": \"\\u2266\", \"&LessGreater;\": \"\\u2276\", \"&LessLess;\": \"\\u2AA1\", \"&LessSlantEqual;\": \"\\u2A7D\", \"&LessTilde;\": \"\\u2272\", \"&Lfr;\": \"\\u{1D50F}\", \"&Ll;\": \"\\u22D8\", \"&Lleftarrow;\": \"\\u21DA\", \"&Lmidot;\": \"\\u013F\", \"&LongLeftArrow;\": \"\\u27F5\", \"&LongLeftRightArrow;\": \"\\u27F7\", \"&LongRightArrow;\": \"\\u27F6\", \"&Longleftarrow;\": \"\\u27F8\", \"&Longleftrightarrow;\": \"\\u27FA\", \"&Longrightarrow;\": \"\\u27F9\", \"&Lopf;\": \"\\u{1D543}\", \"&LowerLeftArrow;\": \"\\u2199\", \"&LowerRightArrow;\": \"\\u2198\", \"&Lscr;\": \"\\u2112\", \"&Lsh;\": \"\\u21B0\", \"&Lstrok;\": \"\\u0141\", \"&Lt;\": \"\\u226A\", \"&Map;\": \"\\u2905\", \"&Mcy;\": \"\\u041C\", \"&MediumSpace;\": \"\\u205F\", \"&Mellintrf;\": \"\\u2133\", \"&Mfr;\": \"\\u{1D510}\", \"&MinusPlus;\": \"\\u2213\", \"&Mopf;\": \"\\u{1D544}\", \"&Mscr;\": \"\\u2133\", \"&Mu;\": \"\\u039C\", \"&NJcy;\": \"\\u040A\", \"&Nacute;\": \"\\u0143\", \"&Ncaron;\": \"\\u0147\", \"&Ncedil;\": \"\\u0145\", \"&Ncy;\": \"\\u041D\", \"&NegativeMediumSpace;\": \"\\u200B\", \"&NegativeThickSpace;\": \"\\u200B\", \"&NegativeThinSpace;\": \"\\u200B\", \"&NegativeVeryThinSpace;\": \"\\u200B\", \"&NestedGreaterGreater;\": \"\\u226B\", \"&NestedLessLess;\": \"\\u226A\", \"&NewLine;\": \"\\n\", \"&Nfr;\": \"\\u{1D511}\", \"&NoBreak;\": \"\\u2060\", \"&NonBreakingSpace;\": \"\\xA0\", \"&Nopf;\": \"\\u2115\", \"&Not;\": \"\\u2AEC\", \"&NotCongruent;\": \"\\u2262\", \"&NotCupCap;\": \"\\u226D\", \"&NotDoubleVerticalBar;\": \"\\u2226\", \"&NotElement;\": \"\\u2209\", \"&NotEqual;\": \"\\u2260\", \"&NotEqualTilde;\": \"\\u2242\\u0338\", \"&NotExists;\": \"\\u2204\", \"&NotGreater;\": \"\\u226F\", \"&NotGreaterEqual;\": \"\\u2271\", \"&NotGreaterFullEqual;\": \"\\u2267\\u0338\", \"&NotGreaterGreater;\": \"\\u226B\\u0338\", \"&NotGreaterLess;\": \"\\u2279\", \"&NotGreaterSlantEqual;\": \"\\u2A7E\\u0338\", \"&NotGreaterTilde;\": \"\\u2275\", \"&NotHumpDownHump;\": \"\\u224E\\u0338\", \"&NotHumpEqual;\": \"\\u224F\\u0338\", \"&NotLeftTriangle;\": \"\\u22EA\", \"&NotLeftTriangleBar;\": \"\\u29CF\\u0338\", \"&NotLeftTriangleEqual;\": \"\\u22EC\", \"&NotLess;\": \"\\u226E\", \"&NotLessEqual;\": \"\\u2270\", \"&NotLessGreater;\": \"\\u2278\", \"&NotLessLess;\": \"\\u226A\\u0338\", \"&NotLessSlantEqual;\": \"\\u2A7D\\u0338\", \"&NotLessTilde;\": \"\\u2274\", \"&NotNestedGreaterGreater;\": \"\\u2AA2\\u0338\", \"&NotNestedLessLess;\": \"\\u2AA1\\u0338\", \"&NotPrecedes;\": \"\\u2280\", \"&NotPrecedesEqual;\": \"\\u2AAF\\u0338\", \"&NotPrecedesSlantEqual;\": \"\\u22E0\", \"&NotReverseElement;\": \"\\u220C\", \"&NotRightTriangle;\": \"\\u22EB\", \"&NotRightTriangleBar;\": \"\\u29D0\\u0338\", \"&NotRightTriangleEqual;\": \"\\u22ED\", \"&NotSquareSubset;\": \"\\u228F\\u0338\", \"&NotSquareSubsetEqual;\": \"\\u22E2\", \"&NotSquareSuperset;\": \"\\u2290\\u0338\", \"&NotSquareSupersetEqual;\": \"\\u22E3\", \"&NotSubset;\": \"\\u2282\\u20D2\", \"&NotSubsetEqual;\": \"\\u2288\", \"&NotSucceeds;\": \"\\u2281\", \"&NotSucceedsEqual;\": \"\\u2AB0\\u0338\", \"&NotSucceedsSlantEqual;\": \"\\u22E1\", \"&NotSucceedsTilde;\": \"\\u227F\\u0338\", \"&NotSuperset;\": \"\\u2283\\u20D2\", \"&NotSupersetEqual;\": \"\\u2289\", \"&NotTilde;\": \"\\u2241\", \"&NotTildeEqual;\": \"\\u2244\", \"&NotTildeFullEqual;\": \"\\u2247\", \"&NotTildeTilde;\": \"\\u2249\", \"&NotVerticalBar;\": \"\\u2224\", \"&Nscr;\": \"\\u{1D4A9}\", \"&Ntilde\": \"\\xD1\", \"&Ntilde;\": \"\\xD1\", \"&Nu;\": \"\\u039D\", \"&OElig;\": \"\\u0152\", \"&Oacute\": \"\\xD3\", \"&Oacute;\": \"\\xD3\", \"&Ocirc\": \"\\xD4\", \"&Ocirc;\": \"\\xD4\", \"&Ocy;\": \"\\u041E\", \"&Odblac;\": \"\\u0150\", \"&Ofr;\": \"\\u{1D512}\", \"&Ograve\": \"\\xD2\", \"&Ograve;\": \"\\xD2\", \"&Omacr;\": \"\\u014C\", \"&Omega;\": \"\\u03A9\", \"&Omicron;\": \"\\u039F\", \"&Oopf;\": \"\\u{1D546}\", \"&OpenCurlyDoubleQuote;\": \"\\u201C\", \"&OpenCurlyQuote;\": \"\\u2018\", \"&Or;\": \"\\u2A54\", \"&Oscr;\": \"\\u{1D4AA}\", \"&Oslash\": \"\\xD8\", \"&Oslash;\": \"\\xD8\", \"&Otilde\": \"\\xD5\", \"&Otilde;\": \"\\xD5\", \"&Otimes;\": \"\\u2A37\", \"&Ouml\": \"\\xD6\", \"&Ouml;\": \"\\xD6\", \"&OverBar;\": \"\\u203E\", \"&OverBrace;\": \"\\u23DE\", \"&OverBracket;\": \"\\u23B4\", \"&OverParenthesis;\": \"\\u23DC\", \"&PartialD;\": \"\\u2202\", \"&Pcy;\": \"\\u041F\", \"&Pfr;\": \"\\u{1D513}\", \"&Phi;\": \"\\u03A6\", \"&Pi;\": \"\\u03A0\", \"&PlusMinus;\": \"\\xB1\", \"&Poincareplane;\": \"\\u210C\", \"&Popf;\": \"\\u2119\", \"&Pr;\": \"\\u2ABB\", \"&Precedes;\": \"\\u227A\", \"&PrecedesEqual;\": \"\\u2AAF\", \"&PrecedesSlantEqual;\": \"\\u227C\", \"&PrecedesTilde;\": \"\\u227E\", \"&Prime;\": \"\\u2033\", \"&Product;\": \"\\u220F\", \"&Proportion;\": \"\\u2237\", \"&Proportional;\": \"\\u221D\", \"&Pscr;\": \"\\u{1D4AB}\", \"&Psi;\": \"\\u03A8\", \"&QUOT\": '\"', \"&QUOT;\": '\"', \"&Qfr;\": \"\\u{1D514}\", \"&Qopf;\": \"\\u211A\", \"&Qscr;\": \"\\u{1D4AC}\", \"&RBarr;\": \"\\u2910\", \"&REG\": \"\\xAE\", \"&REG;\": \"\\xAE\", \"&Racute;\": \"\\u0154\", \"&Rang;\": \"\\u27EB\", \"&Rarr;\": \"\\u21A0\", \"&Rarrtl;\": \"\\u2916\", \"&Rcaron;\": \"\\u0158\", \"&Rcedil;\": \"\\u0156\", \"&Rcy;\": \"\\u0420\", \"&Re;\": \"\\u211C\", \"&ReverseElement;\": \"\\u220B\", \"&ReverseEquilibrium;\": \"\\u21CB\", \"&ReverseUpEquilibrium;\": \"\\u296F\", \"&Rfr;\": \"\\u211C\", \"&Rho;\": \"\\u03A1\", \"&RightAngleBracket;\": \"\\u27E9\", \"&RightArrow;\": \"\\u2192\", \"&RightArrowBar;\": \"\\u21E5\", \"&RightArrowLeftArrow;\": \"\\u21C4\", \"&RightCeiling;\": \"\\u2309\", \"&RightDoubleBracket;\": \"\\u27E7\", \"&RightDownTeeVector;\": \"\\u295D\", \"&RightDownVector;\": \"\\u21C2\", \"&RightDownVectorBar;\": \"\\u2955\", \"&RightFloor;\": \"\\u230B\", \"&RightTee;\": \"\\u22A2\", \"&RightTeeArrow;\": \"\\u21A6\", \"&RightTeeVector;\": \"\\u295B\", \"&RightTriangle;\": \"\\u22B3\", \"&RightTriangleBar;\": \"\\u29D0\", \"&RightTriangleEqual;\": \"\\u22B5\", \"&RightUpDownVector;\": \"\\u294F\", \"&RightUpTeeVector;\": \"\\u295C\", \"&RightUpVector;\": \"\\u21BE\", \"&RightUpVectorBar;\": \"\\u2954\", \"&RightVector;\": \"\\u21C0\", \"&RightVectorBar;\": \"\\u2953\", \"&Rightarrow;\": \"\\u21D2\", \"&Ropf;\": \"\\u211D\", \"&RoundImplies;\": \"\\u2970\", \"&Rrightarrow;\": \"\\u21DB\", \"&Rscr;\": \"\\u211B\", \"&Rsh;\": \"\\u21B1\", \"&RuleDelayed;\": \"\\u29F4\", \"&SHCHcy;\": \"\\u0429\", \"&SHcy;\": \"\\u0428\", \"&SOFTcy;\": \"\\u042C\", \"&Sacute;\": \"\\u015A\", \"&Sc;\": \"\\u2ABC\", \"&Scaron;\": \"\\u0160\", \"&Scedil;\": \"\\u015E\", \"&Scirc;\": \"\\u015C\", \"&Scy;\": \"\\u0421\", \"&Sfr;\": \"\\u{1D516}\", \"&ShortDownArrow;\": \"\\u2193\", \"&ShortLeftArrow;\": \"\\u2190\", \"&ShortRightArrow;\": \"\\u2192\", \"&ShortUpArrow;\": \"\\u2191\", \"&Sigma;\": \"\\u03A3\", \"&SmallCircle;\": \"\\u2218\", \"&Sopf;\": \"\\u{1D54A}\", \"&Sqrt;\": \"\\u221A\", \"&Square;\": \"\\u25A1\", \"&SquareIntersection;\": \"\\u2293\", \"&SquareSubset;\": \"\\u228F\", \"&SquareSubsetEqual;\": \"\\u2291\", \"&SquareSuperset;\": \"\\u2290\", \"&SquareSupersetEqual;\": \"\\u2292\", \"&SquareUnion;\": \"\\u2294\", \"&Sscr;\": \"\\u{1D4AE}\", \"&Star;\": \"\\u22C6\", \"&Sub;\": \"\\u22D0\", \"&Subset;\": \"\\u22D0\", \"&SubsetEqual;\": \"\\u2286\", \"&Succeeds;\": \"\\u227B\", \"&SucceedsEqual;\": \"\\u2AB0\", \"&SucceedsSlantEqual;\": \"\\u227D\", \"&SucceedsTilde;\": \"\\u227F\", \"&SuchThat;\": \"\\u220B\", \"&Sum;\": \"\\u2211\", \"&Sup;\": \"\\u22D1\", \"&Superset;\": \"\\u2283\", \"&SupersetEqual;\": \"\\u2287\", \"&Supset;\": \"\\u22D1\", \"&THORN\": \"\\xDE\", \"&THORN;\": \"\\xDE\", \"&TRADE;\": \"\\u2122\", \"&TSHcy;\": \"\\u040B\", \"&TScy;\": \"\\u0426\", \"&Tab;\": \"\t\", \"&Tau;\": \"\\u03A4\", \"&Tcaron;\": \"\\u0164\", \"&Tcedil;\": \"\\u0162\", \"&Tcy;\": \"\\u0422\", \"&Tfr;\": \"\\u{1D517}\", \"&Therefore;\": \"\\u2234\", \"&Theta;\": \"\\u0398\", \"&ThickSpace;\": \"\\u205F\\u200A\", \"&ThinSpace;\": \"\\u2009\", \"&Tilde;\": \"\\u223C\", \"&TildeEqual;\": \"\\u2243\", \"&TildeFullEqual;\": \"\\u2245\", \"&TildeTilde;\": \"\\u2248\", \"&Topf;\": \"\\u{1D54B}\", \"&TripleDot;\": \"\\u20DB\", \"&Tscr;\": \"\\u{1D4AF}\", \"&Tstrok;\": \"\\u0166\", \"&Uacute\": \"\\xDA\", \"&Uacute;\": \"\\xDA\", \"&Uarr;\": \"\\u219F\", \"&Uarrocir;\": \"\\u2949\", \"&Ubrcy;\": \"\\u040E\", \"&Ubreve;\": \"\\u016C\", \"&Ucirc\": \"\\xDB\", \"&Ucirc;\": \"\\xDB\", \"&Ucy;\": \"\\u0423\", \"&Udblac;\": \"\\u0170\", \"&Ufr;\": \"\\u{1D518}\", \"&Ugrave\": \"\\xD9\", \"&Ugrave;\": \"\\xD9\", \"&Umacr;\": \"\\u016A\", \"&UnderBar;\": \"_\", \"&UnderBrace;\": \"\\u23DF\", \"&UnderBracket;\": \"\\u23B5\", \"&UnderParenthesis;\": \"\\u23DD\", \"&Union;\": \"\\u22C3\", \"&UnionPlus;\": \"\\u228E\", \"&Uogon;\": \"\\u0172\", \"&Uopf;\": \"\\u{1D54C}\", \"&UpArrow;\": \"\\u2191\", \"&UpArrowBar;\": \"\\u2912\", \"&UpArrowDownArrow;\": \"\\u21C5\", \"&UpDownArrow;\": \"\\u2195\", \"&UpEquilibrium;\": \"\\u296E\", \"&UpTee;\": \"\\u22A5\", \"&UpTeeArrow;\": \"\\u21A5\", \"&Uparrow;\": \"\\u21D1\", \"&Updownarrow;\": \"\\u21D5\", \"&UpperLeftArrow;\": \"\\u2196\", \"&UpperRightArrow;\": \"\\u2197\", \"&Upsi;\": \"\\u03D2\", \"&Upsilon;\": \"\\u03A5\", \"&Uring;\": \"\\u016E\", \"&Uscr;\": \"\\u{1D4B0}\", \"&Utilde;\": \"\\u0168\", \"&Uuml\": \"\\xDC\", \"&Uuml;\": \"\\xDC\", \"&VDash;\": \"\\u22AB\", \"&Vbar;\": \"\\u2AEB\", \"&Vcy;\": \"\\u0412\", \"&Vdash;\": \"\\u22A9\", \"&Vdashl;\": \"\\u2AE6\", \"&Vee;\": \"\\u22C1\", \"&Verbar;\": \"\\u2016\", \"&Vert;\": \"\\u2016\", \"&VerticalBar;\": \"\\u2223\", \"&VerticalLine;\": \"|\", \"&VerticalSeparator;\": \"\\u2758\", \"&VerticalTilde;\": \"\\u2240\", \"&VeryThinSpace;\": \"\\u200A\", \"&Vfr;\": \"\\u{1D519}\", \"&Vopf;\": \"\\u{1D54D}\", \"&Vscr;\": \"\\u{1D4B1}\", \"&Vvdash;\": \"\\u22AA\", \"&Wcirc;\": \"\\u0174\", \"&Wedge;\": \"\\u22C0\", \"&Wfr;\": \"\\u{1D51A}\", \"&Wopf;\": \"\\u{1D54E}\", \"&Wscr;\": \"\\u{1D4B2}\", \"&Xfr;\": \"\\u{1D51B}\", \"&Xi;\": \"\\u039E\", \"&Xopf;\": \"\\u{1D54F}\", \"&Xscr;\": \"\\u{1D4B3}\", \"&YAcy;\": \"\\u042F\", \"&YIcy;\": \"\\u0407\", \"&YUcy;\": \"\\u042E\", \"&Yacute\": \"\\xDD\", \"&Yacute;\": \"\\xDD\", \"&Ycirc;\": \"\\u0176\", \"&Ycy;\": \"\\u042B\", \"&Yfr;\": \"\\u{1D51C}\", \"&Yopf;\": \"\\u{1D550}\", \"&Yscr;\": \"\\u{1D4B4}\", \"&Yuml;\": \"\\u0178\", \"&ZHcy;\": \"\\u0416\", \"&Zacute;\": \"\\u0179\", \"&Zcaron;\": \"\\u017D\", \"&Zcy;\": \"\\u0417\", \"&Zdot;\": \"\\u017B\", \"&ZeroWidthSpace;\": \"\\u200B\", \"&Zeta;\": \"\\u0396\", \"&Zfr;\": \"\\u2128\", \"&Zopf;\": \"\\u2124\", \"&Zscr;\": \"\\u{1D4B5}\", \"&aacute\": \"\\xE1\", \"&aacute;\": \"\\xE1\", \"&abreve;\": \"\\u0103\", \"&ac;\": \"\\u223E\", \"&acE;\": \"\\u223E\\u0333\", \"&acd;\": \"\\u223F\", \"&acirc\": \"\\xE2\", \"&acirc;\": \"\\xE2\", \"&acute\": \"\\xB4\", \"&acute;\": \"\\xB4\", \"&acy;\": \"\\u0430\", \"&aelig\": \"\\xE6\", \"&aelig;\": \"\\xE6\", \"&af;\": \"\\u2061\", \"&afr;\": \"\\u{1D51E}\", \"&agrave\": \"\\xE0\", \"&agrave;\": \"\\xE0\", \"&alefsym;\": \"\\u2135\", \"&aleph;\": \"\\u2135\", \"&alpha;\": \"\\u03B1\", \"&amacr;\": \"\\u0101\", \"&amalg;\": \"\\u2A3F\", \"&amp\": \"&\", \"&amp;\": \"&\", \"&and;\": \"\\u2227\", \"&andand;\": \"\\u2A55\", \"&andd;\": \"\\u2A5C\", \"&andslope;\": \"\\u2A58\", \"&andv;\": \"\\u2A5A\", \"&ang;\": \"\\u2220\", \"&ange;\": \"\\u29A4\", \"&angle;\": \"\\u2220\", \"&angmsd;\": \"\\u2221\", \"&angmsdaa;\": \"\\u29A8\", \"&angmsdab;\": \"\\u29A9\", \"&angmsdac;\": \"\\u29AA\", \"&angmsdad;\": \"\\u29AB\", \"&angmsdae;\": \"\\u29AC\", \"&angmsdaf;\": \"\\u29AD\", \"&angmsdag;\": \"\\u29AE\", \"&angmsdah;\": \"\\u29AF\", \"&angrt;\": \"\\u221F\", \"&angrtvb;\": \"\\u22BE\", \"&angrtvbd;\": \"\\u299D\", \"&angsph;\": \"\\u2222\", \"&angst;\": \"\\xC5\", \"&angzarr;\": \"\\u237C\", \"&aogon;\": \"\\u0105\", \"&aopf;\": \"\\u{1D552}\", \"&ap;\": \"\\u2248\", \"&apE;\": \"\\u2A70\", \"&apacir;\": \"\\u2A6F\", \"&ape;\": \"\\u224A\", \"&apid;\": \"\\u224B\", \"&apos;\": \"'\", \"&approx;\": \"\\u2248\", \"&approxeq;\": \"\\u224A\", \"&aring\": \"\\xE5\", \"&aring;\": \"\\xE5\", \"&ascr;\": \"\\u{1D4B6}\", \"&ast;\": \"*\", \"&asymp;\": \"\\u2248\", \"&asympeq;\": \"\\u224D\", \"&atilde\": \"\\xE3\", \"&atilde;\": \"\\xE3\", \"&auml\": \"\\xE4\", \"&auml;\": \"\\xE4\", \"&awconint;\": \"\\u2233\", \"&awint;\": \"\\u2A11\", \"&bNot;\": \"\\u2AED\", \"&backcong;\": \"\\u224C\", \"&backepsilon;\": \"\\u03F6\", \"&backprime;\": \"\\u2035\", \"&backsim;\": \"\\u223D\", \"&backsimeq;\": \"\\u22CD\", \"&barvee;\": \"\\u22BD\", \"&barwed;\": \"\\u2305\", \"&barwedge;\": \"\\u2305\", \"&bbrk;\": \"\\u23B5\", \"&bbrktbrk;\": \"\\u23B6\", \"&bcong;\": \"\\u224C\", \"&bcy;\": \"\\u0431\", \"&bdquo;\": \"\\u201E\", \"&becaus;\": \"\\u2235\", \"&because;\": \"\\u2235\", \"&bemptyv;\": \"\\u29B0\", \"&bepsi;\": \"\\u03F6\", \"&bernou;\": \"\\u212C\", \"&beta;\": \"\\u03B2\", \"&beth;\": \"\\u2136\", \"&between;\": \"\\u226C\", \"&bfr;\": \"\\u{1D51F}\", \"&bigcap;\": \"\\u22C2\", \"&bigcirc;\": \"\\u25EF\", \"&bigcup;\": \"\\u22C3\", \"&bigodot;\": \"\\u2A00\", \"&bigoplus;\": \"\\u2A01\", \"&bigotimes;\": \"\\u2A02\", \"&bigsqcup;\": \"\\u2A06\", \"&bigstar;\": \"\\u2605\", \"&bigtriangledown;\": \"\\u25BD\", \"&bigtriangleup;\": \"\\u25B3\", \"&biguplus;\": \"\\u2A04\", \"&bigvee;\": \"\\u22C1\", \"&bigwedge;\": \"\\u22C0\", \"&bkarow;\": \"\\u290D\", \"&blacklozenge;\": \"\\u29EB\", \"&blacksquare;\": \"\\u25AA\", \"&blacktriangle;\": \"\\u25B4\", \"&blacktriangledown;\": \"\\u25BE\", \"&blacktriangleleft;\": \"\\u25C2\", \"&blacktriangleright;\": \"\\u25B8\", \"&blank;\": \"\\u2423\", \"&blk12;\": \"\\u2592\", \"&blk14;\": \"\\u2591\", \"&blk34;\": \"\\u2593\", \"&block;\": \"\\u2588\", \"&bne;\": \"=\\u20E5\", \"&bnequiv;\": \"\\u2261\\u20E5\", \"&bnot;\": \"\\u2310\", \"&bopf;\": \"\\u{1D553}\", \"&bot;\": \"\\u22A5\", \"&bottom;\": \"\\u22A5\", \"&bowtie;\": \"\\u22C8\", \"&boxDL;\": \"\\u2557\", \"&boxDR;\": \"\\u2554\", \"&boxDl;\": \"\\u2556\", \"&boxDr;\": \"\\u2553\", \"&boxH;\": \"\\u2550\", \"&boxHD;\": \"\\u2566\", \"&boxHU;\": \"\\u2569\", \"&boxHd;\": \"\\u2564\", \"&boxHu;\": \"\\u2567\", \"&boxUL;\": \"\\u255D\", \"&boxUR;\": \"\\u255A\", \"&boxUl;\": \"\\u255C\", \"&boxUr;\": \"\\u2559\", \"&boxV;\": \"\\u2551\", \"&boxVH;\": \"\\u256C\", \"&boxVL;\": \"\\u2563\", \"&boxVR;\": \"\\u2560\", \"&boxVh;\": \"\\u256B\", \"&boxVl;\": \"\\u2562\", \"&boxVr;\": \"\\u255F\", \"&boxbox;\": \"\\u29C9\", \"&boxdL;\": \"\\u2555\", \"&boxdR;\": \"\\u2552\", \"&boxdl;\": \"\\u2510\", \"&boxdr;\": \"\\u250C\", \"&boxh;\": \"\\u2500\", \"&boxhD;\": \"\\u2565\", \"&boxhU;\": \"\\u2568\", \"&boxhd;\": \"\\u252C\", \"&boxhu;\": \"\\u2534\", \"&boxminus;\": \"\\u229F\", \"&boxplus;\": \"\\u229E\", \"&boxtimes;\": \"\\u22A0\", \"&boxuL;\": \"\\u255B\", \"&boxuR;\": \"\\u2558\", \"&boxul;\": \"\\u2518\", \"&boxur;\": \"\\u2514\", \"&boxv;\": \"\\u2502\", \"&boxvH;\": \"\\u256A\", \"&boxvL;\": \"\\u2561\", \"&boxvR;\": \"\\u255E\", \"&boxvh;\": \"\\u253C\", \"&boxvl;\": \"\\u2524\", \"&boxvr;\": \"\\u251C\", \"&bprime;\": \"\\u2035\", \"&breve;\": \"\\u02D8\", \"&brvbar\": \"\\xA6\", \"&brvbar;\": \"\\xA6\", \"&bscr;\": \"\\u{1D4B7}\", \"&bsemi;\": \"\\u204F\", \"&bsim;\": \"\\u223D\", \"&bsime;\": \"\\u22CD\", \"&bsol;\": \"\\\\\", \"&bsolb;\": \"\\u29C5\", \"&bsolhsub;\": \"\\u27C8\", \"&bull;\": \"\\u2022\", \"&bullet;\": \"\\u2022\", \"&bump;\": \"\\u224E\", \"&bumpE;\": \"\\u2AAE\", \"&bumpe;\": \"\\u224F\", \"&bumpeq;\": \"\\u224F\", \"&cacute;\": \"\\u0107\", \"&cap;\": \"\\u2229\", \"&capand;\": \"\\u2A44\", \"&capbrcup;\": \"\\u2A49\", \"&capcap;\": \"\\u2A4B\", \"&capcup;\": \"\\u2A47\", \"&capdot;\": \"\\u2A40\", \"&caps;\": \"\\u2229\\uFE00\", \"&caret;\": \"\\u2041\", \"&caron;\": \"\\u02C7\", \"&ccaps;\": \"\\u2A4D\", \"&ccaron;\": \"\\u010D\", \"&ccedil\": \"\\xE7\", \"&ccedil;\": \"\\xE7\", \"&ccirc;\": \"\\u0109\", \"&ccups;\": \"\\u2A4C\", \"&ccupssm;\": \"\\u2A50\", \"&cdot;\": \"\\u010B\", \"&cedil\": \"\\xB8\", \"&cedil;\": \"\\xB8\", \"&cemptyv;\": \"\\u29B2\", \"&cent\": \"\\xA2\", \"&cent;\": \"\\xA2\", \"&centerdot;\": \"\\xB7\", \"&cfr;\": \"\\u{1D520}\", \"&chcy;\": \"\\u0447\", \"&check;\": \"\\u2713\", \"&checkmark;\": \"\\u2713\", \"&chi;\": \"\\u03C7\", \"&cir;\": \"\\u25CB\", \"&cirE;\": \"\\u29C3\", \"&circ;\": \"\\u02C6\", \"&circeq;\": \"\\u2257\", \"&circlearrowleft;\": \"\\u21BA\", \"&circlearrowright;\": \"\\u21BB\", \"&circledR;\": \"\\xAE\", \"&circledS;\": \"\\u24C8\", \"&circledast;\": \"\\u229B\", \"&circledcirc;\": \"\\u229A\", \"&circleddash;\": \"\\u229D\", \"&cire;\": \"\\u2257\", \"&cirfnint;\": \"\\u2A10\", \"&cirmid;\": \"\\u2AEF\", \"&cirscir;\": \"\\u29C2\", \"&clubs;\": \"\\u2663\", \"&clubsuit;\": \"\\u2663\", \"&colon;\": \":\", \"&colone;\": \"\\u2254\", \"&coloneq;\": \"\\u2254\", \"&comma;\": \",\", \"&commat;\": \"@\", \"&comp;\": \"\\u2201\", \"&compfn;\": \"\\u2218\", \"&complement;\": \"\\u2201\", \"&complexes;\": \"\\u2102\", \"&cong;\": \"\\u2245\", \"&congdot;\": \"\\u2A6D\", \"&conint;\": \"\\u222E\", \"&copf;\": \"\\u{1D554}\", \"&coprod;\": \"\\u2210\", \"&copy\": \"\\xA9\", \"&copy;\": \"\\xA9\", \"&copysr;\": \"\\u2117\", \"&crarr;\": \"\\u21B5\", \"&cross;\": \"\\u2717\", \"&cscr;\": \"\\u{1D4B8}\", \"&csub;\": \"\\u2ACF\", \"&csube;\": \"\\u2AD1\", \"&csup;\": \"\\u2AD0\", \"&csupe;\": \"\\u2AD2\", \"&ctdot;\": \"\\u22EF\", \"&cudarrl;\": \"\\u2938\", \"&cudarrr;\": \"\\u2935\", \"&cuepr;\": \"\\u22DE\", \"&cuesc;\": \"\\u22DF\", \"&cularr;\": \"\\u21B6\", \"&cularrp;\": \"\\u293D\", \"&cup;\": \"\\u222A\", \"&cupbrcap;\": \"\\u2A48\", \"&cupcap;\": \"\\u2A46\", \"&cupcup;\": \"\\u2A4A\", \"&cupdot;\": \"\\u228D\", \"&cupor;\": \"\\u2A45\", \"&cups;\": \"\\u222A\\uFE00\", \"&curarr;\": \"\\u21B7\", \"&curarrm;\": \"\\u293C\", \"&curlyeqprec;\": \"\\u22DE\", \"&curlyeqsucc;\": \"\\u22DF\", \"&curlyvee;\": \"\\u22CE\", \"&curlywedge;\": \"\\u22CF\", \"&curren\": \"\\xA4\", \"&curren;\": \"\\xA4\", \"&curvearrowleft;\": \"\\u21B6\", \"&curvearrowright;\": \"\\u21B7\", \"&cuvee;\": \"\\u22CE\", \"&cuwed;\": \"\\u22CF\", \"&cwconint;\": \"\\u2232\", \"&cwint;\": \"\\u2231\", \"&cylcty;\": \"\\u232D\", \"&dArr;\": \"\\u21D3\", \"&dHar;\": \"\\u2965\", \"&dagger;\": \"\\u2020\", \"&daleth;\": \"\\u2138\", \"&darr;\": \"\\u2193\", \"&dash;\": \"\\u2010\", \"&dashv;\": \"\\u22A3\", \"&dbkarow;\": \"\\u290F\", \"&dblac;\": \"\\u02DD\", \"&dcaron;\": \"\\u010F\", \"&dcy;\": \"\\u0434\", \"&dd;\": \"\\u2146\", \"&ddagger;\": \"\\u2021\", \"&ddarr;\": \"\\u21CA\", \"&ddotseq;\": \"\\u2A77\", \"&deg\": \"\\xB0\", \"&deg;\": \"\\xB0\", \"&delta;\": \"\\u03B4\", \"&demptyv;\": \"\\u29B1\", \"&dfisht;\": \"\\u297F\", \"&dfr;\": \"\\u{1D521}\", \"&dharl;\": \"\\u21C3\", \"&dharr;\": \"\\u21C2\", \"&diam;\": \"\\u22C4\", \"&diamond;\": \"\\u22C4\", \"&diamondsuit;\": \"\\u2666\", \"&diams;\": \"\\u2666\", \"&die;\": \"\\xA8\", \"&digamma;\": \"\\u03DD\", \"&disin;\": \"\\u22F2\", \"&div;\": \"\\xF7\", \"&divide\": \"\\xF7\", \"&divide;\": \"\\xF7\", \"&divideontimes;\": \"\\u22C7\", \"&divonx;\": \"\\u22C7\", \"&djcy;\": \"\\u0452\", \"&dlcorn;\": \"\\u231E\", \"&dlcrop;\": \"\\u230D\", \"&dollar;\": \"$\", \"&dopf;\": \"\\u{1D555}\", \"&dot;\": \"\\u02D9\", \"&doteq;\": \"\\u2250\", \"&doteqdot;\": \"\\u2251\", \"&dotminus;\": \"\\u2238\", \"&dotplus;\": \"\\u2214\", \"&dotsquare;\": \"\\u22A1\", \"&doublebarwedge;\": \"\\u2306\", \"&downarrow;\": \"\\u2193\", \"&downdownarrows;\": \"\\u21CA\", \"&downharpoonleft;\": \"\\u21C3\", \"&downharpoonright;\": \"\\u21C2\", \"&drbkarow;\": \"\\u2910\", \"&drcorn;\": \"\\u231F\", \"&drcrop;\": \"\\u230C\", \"&dscr;\": \"\\u{1D4B9}\", \"&dscy;\": \"\\u0455\", \"&dsol;\": \"\\u29F6\", \"&dstrok;\": \"\\u0111\", \"&dtdot;\": \"\\u22F1\", \"&dtri;\": \"\\u25BF\", \"&dtrif;\": \"\\u25BE\", \"&duarr;\": \"\\u21F5\", \"&duhar;\": \"\\u296F\", \"&dwangle;\": \"\\u29A6\", \"&dzcy;\": \"\\u045F\", \"&dzigrarr;\": \"\\u27FF\", \"&eDDot;\": \"\\u2A77\", \"&eDot;\": \"\\u2251\", \"&eacute\": \"\\xE9\", \"&eacute;\": \"\\xE9\", \"&easter;\": \"\\u2A6E\", \"&ecaron;\": \"\\u011B\", \"&ecir;\": \"\\u2256\", \"&ecirc\": \"\\xEA\", \"&ecirc;\": \"\\xEA\", \"&ecolon;\": \"\\u2255\", \"&ecy;\": \"\\u044D\", \"&edot;\": \"\\u0117\", \"&ee;\": \"\\u2147\", \"&efDot;\": \"\\u2252\", \"&efr;\": \"\\u{1D522}\", \"&eg;\": \"\\u2A9A\", \"&egrave\": \"\\xE8\", \"&egrave;\": \"\\xE8\", \"&egs;\": \"\\u2A96\", \"&egsdot;\": \"\\u2A98\", \"&el;\": \"\\u2A99\", \"&elinters;\": \"\\u23E7\", \"&ell;\": \"\\u2113\", \"&els;\": \"\\u2A95\", \"&elsdot;\": \"\\u2A97\", \"&emacr;\": \"\\u0113\", \"&empty;\": \"\\u2205\", \"&emptyset;\": \"\\u2205\", \"&emptyv;\": \"\\u2205\", \"&emsp13;\": \"\\u2004\", \"&emsp14;\": \"\\u2005\", \"&emsp;\": \"\\u2003\", \"&eng;\": \"\\u014B\", \"&ensp;\": \"\\u2002\", \"&eogon;\": \"\\u0119\", \"&eopf;\": \"\\u{1D556}\", \"&epar;\": \"\\u22D5\", \"&eparsl;\": \"\\u29E3\", \"&eplus;\": \"\\u2A71\", \"&epsi;\": \"\\u03B5\", \"&epsilon;\": \"\\u03B5\", \"&epsiv;\": \"\\u03F5\", \"&eqcirc;\": \"\\u2256\", \"&eqcolon;\": \"\\u2255\", \"&eqsim;\": \"\\u2242\", \"&eqslantgtr;\": \"\\u2A96\", \"&eqslantless;\": \"\\u2A95\", \"&equals;\": \"=\", \"&equest;\": \"\\u225F\", \"&equiv;\": \"\\u2261\", \"&equivDD;\": \"\\u2A78\", \"&eqvparsl;\": \"\\u29E5\", \"&erDot;\": \"\\u2253\", \"&erarr;\": \"\\u2971\", \"&escr;\": \"\\u212F\", \"&esdot;\": \"\\u2250\", \"&esim;\": \"\\u2242\", \"&eta;\": \"\\u03B7\", \"&eth\": \"\\xF0\", \"&eth;\": \"\\xF0\", \"&euml\": \"\\xEB\", \"&euml;\": \"\\xEB\", \"&euro;\": \"\\u20AC\", \"&excl;\": \"!\", \"&exist;\": \"\\u2203\", \"&expectation;\": \"\\u2130\", \"&exponentiale;\": \"\\u2147\", \"&fallingdotseq;\": \"\\u2252\", \"&fcy;\": \"\\u0444\", \"&female;\": \"\\u2640\", \"&ffilig;\": \"\\uFB03\", \"&fflig;\": \"\\uFB00\", \"&ffllig;\": \"\\uFB04\", \"&ffr;\": \"\\u{1D523}\", \"&filig;\": \"\\uFB01\", \"&fjlig;\": \"fj\", \"&flat;\": \"\\u266D\", \"&fllig;\": \"\\uFB02\", \"&fltns;\": \"\\u25B1\", \"&fnof;\": \"\\u0192\", \"&fopf;\": \"\\u{1D557}\", \"&forall;\": \"\\u2200\", \"&fork;\": \"\\u22D4\", \"&forkv;\": \"\\u2AD9\", \"&fpartint;\": \"\\u2A0D\", \"&frac12\": \"\\xBD\", \"&frac12;\": \"\\xBD\", \"&frac13;\": \"\\u2153\", \"&frac14\": \"\\xBC\", \"&frac14;\": \"\\xBC\", \"&frac15;\": \"\\u2155\", \"&frac16;\": \"\\u2159\", \"&frac18;\": \"\\u215B\", \"&frac23;\": \"\\u2154\", \"&frac25;\": \"\\u2156\", \"&frac34\": \"\\xBE\", \"&frac34;\": \"\\xBE\", \"&frac35;\": \"\\u2157\", \"&frac38;\": \"\\u215C\", \"&frac45;\": \"\\u2158\", \"&frac56;\": \"\\u215A\", \"&frac58;\": \"\\u215D\", \"&frac78;\": \"\\u215E\", \"&frasl;\": \"\\u2044\", \"&frown;\": \"\\u2322\", \"&fscr;\": \"\\u{1D4BB}\", \"&gE;\": \"\\u2267\", \"&gEl;\": \"\\u2A8C\", \"&gacute;\": \"\\u01F5\", \"&gamma;\": \"\\u03B3\", \"&gammad;\": \"\\u03DD\", \"&gap;\": \"\\u2A86\", \"&gbreve;\": \"\\u011F\", \"&gcirc;\": \"\\u011D\", \"&gcy;\": \"\\u0433\", \"&gdot;\": \"\\u0121\", \"&ge;\": \"\\u2265\", \"&gel;\": \"\\u22DB\", \"&geq;\": \"\\u2265\", \"&geqq;\": \"\\u2267\", \"&geqslant;\": \"\\u2A7E\", \"&ges;\": \"\\u2A7E\", \"&gescc;\": \"\\u2AA9\", \"&gesdot;\": \"\\u2A80\", \"&gesdoto;\": \"\\u2A82\", \"&gesdotol;\": \"\\u2A84\", \"&gesl;\": \"\\u22DB\\uFE00\", \"&gesles;\": \"\\u2A94\", \"&gfr;\": \"\\u{1D524}\", \"&gg;\": \"\\u226B\", \"&ggg;\": \"\\u22D9\", \"&gimel;\": \"\\u2137\", \"&gjcy;\": \"\\u0453\", \"&gl;\": \"\\u2277\", \"&glE;\": \"\\u2A92\", \"&gla;\": \"\\u2AA5\", \"&glj;\": \"\\u2AA4\", \"&gnE;\": \"\\u2269\", \"&gnap;\": \"\\u2A8A\", \"&gnapprox;\": \"\\u2A8A\", \"&gne;\": \"\\u2A88\", \"&gneq;\": \"\\u2A88\", \"&gneqq;\": \"\\u2269\", \"&gnsim;\": \"\\u22E7\", \"&gopf;\": \"\\u{1D558}\", \"&grave;\": \"`\", \"&gscr;\": \"\\u210A\", \"&gsim;\": \"\\u2273\", \"&gsime;\": \"\\u2A8E\", \"&gsiml;\": \"\\u2A90\", \"&gt\": \">\", \"&gt;\": \">\", \"&gtcc;\": \"\\u2AA7\", \"&gtcir;\": \"\\u2A7A\", \"&gtdot;\": \"\\u22D7\", \"&gtlPar;\": \"\\u2995\", \"&gtquest;\": \"\\u2A7C\", \"&gtrapprox;\": \"\\u2A86\", \"&gtrarr;\": \"\\u2978\", \"&gtrdot;\": \"\\u22D7\", \"&gtreqless;\": \"\\u22DB\", \"&gtreqqless;\": \"\\u2A8C\", \"&gtrless;\": \"\\u2277\", \"&gtrsim;\": \"\\u2273\", \"&gvertneqq;\": \"\\u2269\\uFE00\", \"&gvnE;\": \"\\u2269\\uFE00\", \"&hArr;\": \"\\u21D4\", \"&hairsp;\": \"\\u200A\", \"&half;\": \"\\xBD\", \"&hamilt;\": \"\\u210B\", \"&hardcy;\": \"\\u044A\", \"&harr;\": \"\\u2194\", \"&harrcir;\": \"\\u2948\", \"&harrw;\": \"\\u21AD\", \"&hbar;\": \"\\u210F\", \"&hcirc;\": \"\\u0125\", \"&hearts;\": \"\\u2665\", \"&heartsuit;\": \"\\u2665\", \"&hellip;\": \"\\u2026\", \"&hercon;\": \"\\u22B9\", \"&hfr;\": \"\\u{1D525}\", \"&hksearow;\": \"\\u2925\", \"&hkswarow;\": \"\\u2926\", \"&hoarr;\": \"\\u21FF\", \"&homtht;\": \"\\u223B\", \"&hookleftarrow;\": \"\\u21A9\", \"&hookrightarrow;\": \"\\u21AA\", \"&hopf;\": \"\\u{1D559}\", \"&horbar;\": \"\\u2015\", \"&hscr;\": \"\\u{1D4BD}\", \"&hslash;\": \"\\u210F\", \"&hstrok;\": \"\\u0127\", \"&hybull;\": \"\\u2043\", \"&hyphen;\": \"\\u2010\", \"&iacute\": \"\\xED\", \"&iacute;\": \"\\xED\", \"&ic;\": \"\\u2063\", \"&icirc\": \"\\xEE\", \"&icirc;\": \"\\xEE\", \"&icy;\": \"\\u0438\", \"&iecy;\": \"\\u0435\", \"&iexcl\": \"\\xA1\", \"&iexcl;\": \"\\xA1\", \"&iff;\": \"\\u21D4\", \"&ifr;\": \"\\u{1D526}\", \"&igrave\": \"\\xEC\", \"&igrave;\": \"\\xEC\", \"&ii;\": \"\\u2148\", \"&iiiint;\": \"\\u2A0C\", \"&iiint;\": \"\\u222D\", \"&iinfin;\": \"\\u29DC\", \"&iiota;\": \"\\u2129\", \"&ijlig;\": \"\\u0133\", \"&imacr;\": \"\\u012B\", \"&image;\": \"\\u2111\", \"&imagline;\": \"\\u2110\", \"&imagpart;\": \"\\u2111\", \"&imath;\": \"\\u0131\", \"&imof;\": \"\\u22B7\", \"&imped;\": \"\\u01B5\", \"&in;\": \"\\u2208\", \"&incare;\": \"\\u2105\", \"&infin;\": \"\\u221E\", \"&infintie;\": \"\\u29DD\", \"&inodot;\": \"\\u0131\", \"&int;\": \"\\u222B\", \"&intcal;\": \"\\u22BA\", \"&integers;\": \"\\u2124\", \"&intercal;\": \"\\u22BA\", \"&intlarhk;\": \"\\u2A17\", \"&intprod;\": \"\\u2A3C\", \"&iocy;\": \"\\u0451\", \"&iogon;\": \"\\u012F\", \"&iopf;\": \"\\u{1D55A}\", \"&iota;\": \"\\u03B9\", \"&iprod;\": \"\\u2A3C\", \"&iquest\": \"\\xBF\", \"&iquest;\": \"\\xBF\", \"&iscr;\": \"\\u{1D4BE}\", \"&isin;\": \"\\u2208\", \"&isinE;\": \"\\u22F9\", \"&isindot;\": \"\\u22F5\", \"&isins;\": \"\\u22F4\", \"&isinsv;\": \"\\u22F3\", \"&isinv;\": \"\\u2208\", \"&it;\": \"\\u2062\", \"&itilde;\": \"\\u0129\", \"&iukcy;\": \"\\u0456\", \"&iuml\": \"\\xEF\", \"&iuml;\": \"\\xEF\", \"&jcirc;\": \"\\u0135\", \"&jcy;\": \"\\u0439\", \"&jfr;\": \"\\u{1D527}\", \"&jmath;\": \"\\u0237\", \"&jopf;\": \"\\u{1D55B}\", \"&jscr;\": \"\\u{1D4BF}\", \"&jsercy;\": \"\\u0458\", \"&jukcy;\": \"\\u0454\", \"&kappa;\": \"\\u03BA\", \"&kappav;\": \"\\u03F0\", \"&kcedil;\": \"\\u0137\", \"&kcy;\": \"\\u043A\", \"&kfr;\": \"\\u{1D528}\", \"&kgreen;\": \"\\u0138\", \"&khcy;\": \"\\u0445\", \"&kjcy;\": \"\\u045C\", \"&kopf;\": \"\\u{1D55C}\", \"&kscr;\": \"\\u{1D4C0}\", \"&lAarr;\": \"\\u21DA\", \"&lArr;\": \"\\u21D0\", \"&lAtail;\": \"\\u291B\", \"&lBarr;\": \"\\u290E\", \"&lE;\": \"\\u2266\", \"&lEg;\": \"\\u2A8B\", \"&lHar;\": \"\\u2962\", \"&lacute;\": \"\\u013A\", \"&laemptyv;\": \"\\u29B4\", \"&lagran;\": \"\\u2112\", \"&lambda;\": \"\\u03BB\", \"&lang;\": \"\\u27E8\", \"&langd;\": \"\\u2991\", \"&langle;\": \"\\u27E8\", \"&lap;\": \"\\u2A85\", \"&laquo\": \"\\xAB\", \"&laquo;\": \"\\xAB\", \"&larr;\": \"\\u2190\", \"&larrb;\": \"\\u21E4\", \"&larrbfs;\": \"\\u291F\", \"&larrfs;\": \"\\u291D\", \"&larrhk;\": \"\\u21A9\", \"&larrlp;\": \"\\u21AB\", \"&larrpl;\": \"\\u2939\", \"&larrsim;\": \"\\u2973\", \"&larrtl;\": \"\\u21A2\", \"&lat;\": \"\\u2AAB\", \"&latail;\": \"\\u2919\", \"&late;\": \"\\u2AAD\", \"&lates;\": \"\\u2AAD\\uFE00\", \"&lbarr;\": \"\\u290C\", \"&lbbrk;\": \"\\u2772\", \"&lbrace;\": \"{\", \"&lbrack;\": \"[\", \"&lbrke;\": \"\\u298B\", \"&lbrksld;\": \"\\u298F\", \"&lbrkslu;\": \"\\u298D\", \"&lcaron;\": \"\\u013E\", \"&lcedil;\": \"\\u013C\", \"&lceil;\": \"\\u2308\", \"&lcub;\": \"{\", \"&lcy;\": \"\\u043B\", \"&ldca;\": \"\\u2936\", \"&ldquo;\": \"\\u201C\", \"&ldquor;\": \"\\u201E\", \"&ldrdhar;\": \"\\u2967\", \"&ldrushar;\": \"\\u294B\", \"&ldsh;\": \"\\u21B2\", \"&le;\": \"\\u2264\", \"&leftarrow;\": \"\\u2190\", \"&leftarrowtail;\": \"\\u21A2\", \"&leftharpoondown;\": \"\\u21BD\", \"&leftharpoonup;\": \"\\u21BC\", \"&leftleftarrows;\": \"\\u21C7\", \"&leftrightarrow;\": \"\\u2194\", \"&leftrightarrows;\": \"\\u21C6\", \"&leftrightharpoons;\": \"\\u21CB\", \"&leftrightsquigarrow;\": \"\\u21AD\", \"&leftthreetimes;\": \"\\u22CB\", \"&leg;\": \"\\u22DA\", \"&leq;\": \"\\u2264\", \"&leqq;\": \"\\u2266\", \"&leqslant;\": \"\\u2A7D\", \"&les;\": \"\\u2A7D\", \"&lescc;\": \"\\u2AA8\", \"&lesdot;\": \"\\u2A7F\", \"&lesdoto;\": \"\\u2A81\", \"&lesdotor;\": \"\\u2A83\", \"&lesg;\": \"\\u22DA\\uFE00\", \"&lesges;\": \"\\u2A93\", \"&lessapprox;\": \"\\u2A85\", \"&lessdot;\": \"\\u22D6\", \"&lesseqgtr;\": \"\\u22DA\", \"&lesseqqgtr;\": \"\\u2A8B\", \"&lessgtr;\": \"\\u2276\", \"&lesssim;\": \"\\u2272\", \"&lfisht;\": \"\\u297C\", \"&lfloor;\": \"\\u230A\", \"&lfr;\": \"\\u{1D529}\", \"&lg;\": \"\\u2276\", \"&lgE;\": \"\\u2A91\", \"&lhard;\": \"\\u21BD\", \"&lharu;\": \"\\u21BC\", \"&lharul;\": \"\\u296A\", \"&lhblk;\": \"\\u2584\", \"&ljcy;\": \"\\u0459\", \"&ll;\": \"\\u226A\", \"&llarr;\": \"\\u21C7\", \"&llcorner;\": \"\\u231E\", \"&llhard;\": \"\\u296B\", \"&lltri;\": \"\\u25FA\", \"&lmidot;\": \"\\u0140\", \"&lmoust;\": \"\\u23B0\", \"&lmoustache;\": \"\\u23B0\", \"&lnE;\": \"\\u2268\", \"&lnap;\": \"\\u2A89\", \"&lnapprox;\": \"\\u2A89\", \"&lne;\": \"\\u2A87\", \"&lneq;\": \"\\u2A87\", \"&lneqq;\": \"\\u2268\", \"&lnsim;\": \"\\u22E6\", \"&loang;\": \"\\u27EC\", \"&loarr;\": \"\\u21FD\", \"&lobrk;\": \"\\u27E6\", \"&longleftarrow;\": \"\\u27F5\", \"&longleftrightarrow;\": \"\\u27F7\", \"&longmapsto;\": \"\\u27FC\", \"&longrightarrow;\": \"\\u27F6\", \"&looparrowleft;\": \"\\u21AB\", \"&looparrowright;\": \"\\u21AC\", \"&lopar;\": \"\\u2985\", \"&lopf;\": \"\\u{1D55D}\", \"&loplus;\": \"\\u2A2D\", \"&lotimes;\": \"\\u2A34\", \"&lowast;\": \"\\u2217\", \"&lowbar;\": \"_\", \"&loz;\": \"\\u25CA\", \"&lozenge;\": \"\\u25CA\", \"&lozf;\": \"\\u29EB\", \"&lpar;\": \"(\", \"&lparlt;\": \"\\u2993\", \"&lrarr;\": \"\\u21C6\", \"&lrcorner;\": \"\\u231F\", \"&lrhar;\": \"\\u21CB\", \"&lrhard;\": \"\\u296D\", \"&lrm;\": \"\\u200E\", \"&lrtri;\": \"\\u22BF\", \"&lsaquo;\": \"\\u2039\", \"&lscr;\": \"\\u{1D4C1}\", \"&lsh;\": \"\\u21B0\", \"&lsim;\": \"\\u2272\", \"&lsime;\": \"\\u2A8D\", \"&lsimg;\": \"\\u2A8F\", \"&lsqb;\": \"[\", \"&lsquo;\": \"\\u2018\", \"&lsquor;\": \"\\u201A\", \"&lstrok;\": \"\\u0142\", \"&lt\": \"<\", \"&lt;\": \"<\", \"&ltcc;\": \"\\u2AA6\", \"&ltcir;\": \"\\u2A79\", \"&ltdot;\": \"\\u22D6\", \"&lthree;\": \"\\u22CB\", \"&ltimes;\": \"\\u22C9\", \"&ltlarr;\": \"\\u2976\", \"&ltquest;\": \"\\u2A7B\", \"&ltrPar;\": \"\\u2996\", \"&ltri;\": \"\\u25C3\", \"&ltrie;\": \"\\u22B4\", \"&ltrif;\": \"\\u25C2\", \"&lurdshar;\": \"\\u294A\", \"&luruhar;\": \"\\u2966\", \"&lvertneqq;\": \"\\u2268\\uFE00\", \"&lvnE;\": \"\\u2268\\uFE00\", \"&mDDot;\": \"\\u223A\", \"&macr\": \"\\xAF\", \"&macr;\": \"\\xAF\", \"&male;\": \"\\u2642\", \"&malt;\": \"\\u2720\", \"&maltese;\": \"\\u2720\", \"&map;\": \"\\u21A6\", \"&mapsto;\": \"\\u21A6\", \"&mapstodown;\": \"\\u21A7\", \"&mapstoleft;\": \"\\u21A4\", \"&mapstoup;\": \"\\u21A5\", \"&marker;\": \"\\u25AE\", \"&mcomma;\": \"\\u2A29\", \"&mcy;\": \"\\u043C\", \"&mdash;\": \"\\u2014\", \"&measuredangle;\": \"\\u2221\", \"&mfr;\": \"\\u{1D52A}\", \"&mho;\": \"\\u2127\", \"&micro\": \"\\xB5\", \"&micro;\": \"\\xB5\", \"&mid;\": \"\\u2223\", \"&midast;\": \"*\", \"&midcir;\": \"\\u2AF0\", \"&middot\": \"\\xB7\", \"&middot;\": \"\\xB7\", \"&minus;\": \"\\u2212\", \"&minusb;\": \"\\u229F\", \"&minusd;\": \"\\u2238\", \"&minusdu;\": \"\\u2A2A\", \"&mlcp;\": \"\\u2ADB\", \"&mldr;\": \"\\u2026\", \"&mnplus;\": \"\\u2213\", \"&models;\": \"\\u22A7\", \"&mopf;\": \"\\u{1D55E}\", \"&mp;\": \"\\u2213\", \"&mscr;\": \"\\u{1D4C2}\", \"&mstpos;\": \"\\u223E\", \"&mu;\": \"\\u03BC\", \"&multimap;\": \"\\u22B8\", \"&mumap;\": \"\\u22B8\", \"&nGg;\": \"\\u22D9\\u0338\", \"&nGt;\": \"\\u226B\\u20D2\", \"&nGtv;\": \"\\u226B\\u0338\", \"&nLeftarrow;\": \"\\u21CD\", \"&nLeftrightarrow;\": \"\\u21CE\", \"&nLl;\": \"\\u22D8\\u0338\", \"&nLt;\": \"\\u226A\\u20D2\", \"&nLtv;\": \"\\u226A\\u0338\", \"&nRightarrow;\": \"\\u21CF\", \"&nVDash;\": \"\\u22AF\", \"&nVdash;\": \"\\u22AE\", \"&nabla;\": \"\\u2207\", \"&nacute;\": \"\\u0144\", \"&nang;\": \"\\u2220\\u20D2\", \"&nap;\": \"\\u2249\", \"&napE;\": \"\\u2A70\\u0338\", \"&napid;\": \"\\u224B\\u0338\", \"&napos;\": \"\\u0149\", \"&napprox;\": \"\\u2249\", \"&natur;\": \"\\u266E\", \"&natural;\": \"\\u266E\", \"&naturals;\": \"\\u2115\", \"&nbsp\": \"\\xA0\", \"&nbsp;\": \"\\xA0\", \"&nbump;\": \"\\u224E\\u0338\", \"&nbumpe;\": \"\\u224F\\u0338\", \"&ncap;\": \"\\u2A43\", \"&ncaron;\": \"\\u0148\", \"&ncedil;\": \"\\u0146\", \"&ncong;\": \"\\u2247\", \"&ncongdot;\": \"\\u2A6D\\u0338\", \"&ncup;\": \"\\u2A42\", \"&ncy;\": \"\\u043D\", \"&ndash;\": \"\\u2013\", \"&ne;\": \"\\u2260\", \"&neArr;\": \"\\u21D7\", \"&nearhk;\": \"\\u2924\", \"&nearr;\": \"\\u2197\", \"&nearrow;\": \"\\u2197\", \"&nedot;\": \"\\u2250\\u0338\", \"&nequiv;\": \"\\u2262\", \"&nesear;\": \"\\u2928\", \"&nesim;\": \"\\u2242\\u0338\", \"&nexist;\": \"\\u2204\", \"&nexists;\": \"\\u2204\", \"&nfr;\": \"\\u{1D52B}\", \"&ngE;\": \"\\u2267\\u0338\", \"&nge;\": \"\\u2271\", \"&ngeq;\": \"\\u2271\", \"&ngeqq;\": \"\\u2267\\u0338\", \"&ngeqslant;\": \"\\u2A7E\\u0338\", \"&nges;\": \"\\u2A7E\\u0338\", \"&ngsim;\": \"\\u2275\", \"&ngt;\": \"\\u226F\", \"&ngtr;\": \"\\u226F\", \"&nhArr;\": \"\\u21CE\", \"&nharr;\": \"\\u21AE\", \"&nhpar;\": \"\\u2AF2\", \"&ni;\": \"\\u220B\", \"&nis;\": \"\\u22FC\", \"&nisd;\": \"\\u22FA\", \"&niv;\": \"\\u220B\", \"&njcy;\": \"\\u045A\", \"&nlArr;\": \"\\u21CD\", \"&nlE;\": \"\\u2266\\u0338\", \"&nlarr;\": \"\\u219A\", \"&nldr;\": \"\\u2025\", \"&nle;\": \"\\u2270\", \"&nleftarrow;\": \"\\u219A\", \"&nleftrightarrow;\": \"\\u21AE\", \"&nleq;\": \"\\u2270\", \"&nleqq;\": \"\\u2266\\u0338\", \"&nleqslant;\": \"\\u2A7D\\u0338\", \"&nles;\": \"\\u2A7D\\u0338\", \"&nless;\": \"\\u226E\", \"&nlsim;\": \"\\u2274\", \"&nlt;\": \"\\u226E\", \"&nltri;\": \"\\u22EA\", \"&nltrie;\": \"\\u22EC\", \"&nmid;\": \"\\u2224\", \"&nopf;\": \"\\u{1D55F}\", \"&not\": \"\\xAC\", \"&not;\": \"\\xAC\", \"&notin;\": \"\\u2209\", \"&notinE;\": \"\\u22F9\\u0338\", \"&notindot;\": \"\\u22F5\\u0338\", \"&notinva;\": \"\\u2209\", \"&notinvb;\": \"\\u22F7\", \"&notinvc;\": \"\\u22F6\", \"&notni;\": \"\\u220C\", \"&notniva;\": \"\\u220C\", \"&notnivb;\": \"\\u22FE\", \"&notnivc;\": \"\\u22FD\", \"&npar;\": \"\\u2226\", \"&nparallel;\": \"\\u2226\", \"&nparsl;\": \"\\u2AFD\\u20E5\", \"&npart;\": \"\\u2202\\u0338\", \"&npolint;\": \"\\u2A14\", \"&npr;\": \"\\u2280\", \"&nprcue;\": \"\\u22E0\", \"&npre;\": \"\\u2AAF\\u0338\", \"&nprec;\": \"\\u2280\", \"&npreceq;\": \"\\u2AAF\\u0338\", \"&nrArr;\": \"\\u21CF\", \"&nrarr;\": \"\\u219B\", \"&nrarrc;\": \"\\u2933\\u0338\", \"&nrarrw;\": \"\\u219D\\u0338\", \"&nrightarrow;\": \"\\u219B\", \"&nrtri;\": \"\\u22EB\", \"&nrtrie;\": \"\\u22ED\", \"&nsc;\": \"\\u2281\", \"&nsccue;\": \"\\u22E1\", \"&nsce;\": \"\\u2AB0\\u0338\", \"&nscr;\": \"\\u{1D4C3}\", \"&nshortmid;\": \"\\u2224\", \"&nshortparallel;\": \"\\u2226\", \"&nsim;\": \"\\u2241\", \"&nsime;\": \"\\u2244\", \"&nsimeq;\": \"\\u2244\", \"&nsmid;\": \"\\u2224\", \"&nspar;\": \"\\u2226\", \"&nsqsube;\": \"\\u22E2\", \"&nsqsupe;\": \"\\u22E3\", \"&nsub;\": \"\\u2284\", \"&nsubE;\": \"\\u2AC5\\u0338\", \"&nsube;\": \"\\u2288\", \"&nsubset;\": \"\\u2282\\u20D2\", \"&nsubseteq;\": \"\\u2288\", \"&nsubseteqq;\": \"\\u2AC5\\u0338\", \"&nsucc;\": \"\\u2281\", \"&nsucceq;\": \"\\u2AB0\\u0338\", \"&nsup;\": \"\\u2285\", \"&nsupE;\": \"\\u2AC6\\u0338\", \"&nsupe;\": \"\\u2289\", \"&nsupset;\": \"\\u2283\\u20D2\", \"&nsupseteq;\": \"\\u2289\", \"&nsupseteqq;\": \"\\u2AC6\\u0338\", \"&ntgl;\": \"\\u2279\", \"&ntilde\": \"\\xF1\", \"&ntilde;\": \"\\xF1\", \"&ntlg;\": \"\\u2278\", \"&ntriangleleft;\": \"\\u22EA\", \"&ntrianglelefteq;\": \"\\u22EC\", \"&ntriangleright;\": \"\\u22EB\", \"&ntrianglerighteq;\": \"\\u22ED\", \"&nu;\": \"\\u03BD\", \"&num;\": \"#\", \"&numero;\": \"\\u2116\", \"&numsp;\": \"\\u2007\", \"&nvDash;\": \"\\u22AD\", \"&nvHarr;\": \"\\u2904\", \"&nvap;\": \"\\u224D\\u20D2\", \"&nvdash;\": \"\\u22AC\", \"&nvge;\": \"\\u2265\\u20D2\", \"&nvgt;\": \">\\u20D2\", \"&nvinfin;\": \"\\u29DE\", \"&nvlArr;\": \"\\u2902\", \"&nvle;\": \"\\u2264\\u20D2\", \"&nvlt;\": \"<\\u20D2\", \"&nvltrie;\": \"\\u22B4\\u20D2\", \"&nvrArr;\": \"\\u2903\", \"&nvrtrie;\": \"\\u22B5\\u20D2\", \"&nvsim;\": \"\\u223C\\u20D2\", \"&nwArr;\": \"\\u21D6\", \"&nwarhk;\": \"\\u2923\", \"&nwarr;\": \"\\u2196\", \"&nwarrow;\": \"\\u2196\", \"&nwnear;\": \"\\u2927\", \"&oS;\": \"\\u24C8\", \"&oacute\": \"\\xF3\", \"&oacute;\": \"\\xF3\", \"&oast;\": \"\\u229B\", \"&ocir;\": \"\\u229A\", \"&ocirc\": \"\\xF4\", \"&ocirc;\": \"\\xF4\", \"&ocy;\": \"\\u043E\", \"&odash;\": \"\\u229D\", \"&odblac;\": \"\\u0151\", \"&odiv;\": \"\\u2A38\", \"&odot;\": \"\\u2299\", \"&odsold;\": \"\\u29BC\", \"&oelig;\": \"\\u0153\", \"&ofcir;\": \"\\u29BF\", \"&ofr;\": \"\\u{1D52C}\", \"&ogon;\": \"\\u02DB\", \"&ograve\": \"\\xF2\", \"&ograve;\": \"\\xF2\", \"&ogt;\": \"\\u29C1\", \"&ohbar;\": \"\\u29B5\", \"&ohm;\": \"\\u03A9\", \"&oint;\": \"\\u222E\", \"&olarr;\": \"\\u21BA\", \"&olcir;\": \"\\u29BE\", \"&olcross;\": \"\\u29BB\", \"&oline;\": \"\\u203E\", \"&olt;\": \"\\u29C0\", \"&omacr;\": \"\\u014D\", \"&omega;\": \"\\u03C9\", \"&omicron;\": \"\\u03BF\", \"&omid;\": \"\\u29B6\", \"&ominus;\": \"\\u2296\", \"&oopf;\": \"\\u{1D560}\", \"&opar;\": \"\\u29B7\", \"&operp;\": \"\\u29B9\", \"&oplus;\": \"\\u2295\", \"&or;\": \"\\u2228\", \"&orarr;\": \"\\u21BB\", \"&ord;\": \"\\u2A5D\", \"&order;\": \"\\u2134\", \"&orderof;\": \"\\u2134\", \"&ordf\": \"\\xAA\", \"&ordf;\": \"\\xAA\", \"&ordm\": \"\\xBA\", \"&ordm;\": \"\\xBA\", \"&origof;\": \"\\u22B6\", \"&oror;\": \"\\u2A56\", \"&orslope;\": \"\\u2A57\", \"&orv;\": \"\\u2A5B\", \"&oscr;\": \"\\u2134\", \"&oslash\": \"\\xF8\", \"&oslash;\": \"\\xF8\", \"&osol;\": \"\\u2298\", \"&otilde\": \"\\xF5\", \"&otilde;\": \"\\xF5\", \"&otimes;\": \"\\u2297\", \"&otimesas;\": \"\\u2A36\", \"&ouml\": \"\\xF6\", \"&ouml;\": \"\\xF6\", \"&ovbar;\": \"\\u233D\", \"&par;\": \"\\u2225\", \"&para\": \"\\xB6\", \"&para;\": \"\\xB6\", \"&parallel;\": \"\\u2225\", \"&parsim;\": \"\\u2AF3\", \"&parsl;\": \"\\u2AFD\", \"&part;\": \"\\u2202\", \"&pcy;\": \"\\u043F\", \"&percnt;\": \"%\", \"&period;\": \".\", \"&permil;\": \"\\u2030\", \"&perp;\": \"\\u22A5\", \"&pertenk;\": \"\\u2031\", \"&pfr;\": \"\\u{1D52D}\", \"&phi;\": \"\\u03C6\", \"&phiv;\": \"\\u03D5\", \"&phmmat;\": \"\\u2133\", \"&phone;\": \"\\u260E\", \"&pi;\": \"\\u03C0\", \"&pitchfork;\": \"\\u22D4\", \"&piv;\": \"\\u03D6\", \"&planck;\": \"\\u210F\", \"&planckh;\": \"\\u210E\", \"&plankv;\": \"\\u210F\", \"&plus;\": \"+\", \"&plusacir;\": \"\\u2A23\", \"&plusb;\": \"\\u229E\", \"&pluscir;\": \"\\u2A22\", \"&plusdo;\": \"\\u2214\", \"&plusdu;\": \"\\u2A25\", \"&pluse;\": \"\\u2A72\", \"&plusmn\": \"\\xB1\", \"&plusmn;\": \"\\xB1\", \"&plussim;\": \"\\u2A26\", \"&plustwo;\": \"\\u2A27\", \"&pm;\": \"\\xB1\", \"&pointint;\": \"\\u2A15\", \"&popf;\": \"\\u{1D561}\", \"&pound\": \"\\xA3\", \"&pound;\": \"\\xA3\", \"&pr;\": \"\\u227A\", \"&prE;\": \"\\u2AB3\", \"&prap;\": \"\\u2AB7\", \"&prcue;\": \"\\u227C\", \"&pre;\": \"\\u2AAF\", \"&prec;\": \"\\u227A\", \"&precapprox;\": \"\\u2AB7\", \"&preccurlyeq;\": \"\\u227C\", \"&preceq;\": \"\\u2AAF\", \"&precnapprox;\": \"\\u2AB9\", \"&precneqq;\": \"\\u2AB5\", \"&precnsim;\": \"\\u22E8\", \"&precsim;\": \"\\u227E\", \"&prime;\": \"\\u2032\", \"&primes;\": \"\\u2119\", \"&prnE;\": \"\\u2AB5\", \"&prnap;\": \"\\u2AB9\", \"&prnsim;\": \"\\u22E8\", \"&prod;\": \"\\u220F\", \"&profalar;\": \"\\u232E\", \"&profline;\": \"\\u2312\", \"&profsurf;\": \"\\u2313\", \"&prop;\": \"\\u221D\", \"&propto;\": \"\\u221D\", \"&prsim;\": \"\\u227E\", \"&prurel;\": \"\\u22B0\", \"&pscr;\": \"\\u{1D4C5}\", \"&psi;\": \"\\u03C8\", \"&puncsp;\": \"\\u2008\", \"&qfr;\": \"\\u{1D52E}\", \"&qint;\": \"\\u2A0C\", \"&qopf;\": \"\\u{1D562}\", \"&qprime;\": \"\\u2057\", \"&qscr;\": \"\\u{1D4C6}\", \"&quaternions;\": \"\\u210D\", \"&quatint;\": \"\\u2A16\", \"&quest;\": \"?\", \"&questeq;\": \"\\u225F\", \"&quot\": '\"', \"&quot;\": '\"', \"&rAarr;\": \"\\u21DB\", \"&rArr;\": \"\\u21D2\", \"&rAtail;\": \"\\u291C\", \"&rBarr;\": \"\\u290F\", \"&rHar;\": \"\\u2964\", \"&race;\": \"\\u223D\\u0331\", \"&racute;\": \"\\u0155\", \"&radic;\": \"\\u221A\", \"&raemptyv;\": \"\\u29B3\", \"&rang;\": \"\\u27E9\", \"&rangd;\": \"\\u2992\", \"&range;\": \"\\u29A5\", \"&rangle;\": \"\\u27E9\", \"&raquo\": \"\\xBB\", \"&raquo;\": \"\\xBB\", \"&rarr;\": \"\\u2192\", \"&rarrap;\": \"\\u2975\", \"&rarrb;\": \"\\u21E5\", \"&rarrbfs;\": \"\\u2920\", \"&rarrc;\": \"\\u2933\", \"&rarrfs;\": \"\\u291E\", \"&rarrhk;\": \"\\u21AA\", \"&rarrlp;\": \"\\u21AC\", \"&rarrpl;\": \"\\u2945\", \"&rarrsim;\": \"\\u2974\", \"&rarrtl;\": \"\\u21A3\", \"&rarrw;\": \"\\u219D\", \"&ratail;\": \"\\u291A\", \"&ratio;\": \"\\u2236\", \"&rationals;\": \"\\u211A\", \"&rbarr;\": \"\\u290D\", \"&rbbrk;\": \"\\u2773\", \"&rbrace;\": \"}\", \"&rbrack;\": \"]\", \"&rbrke;\": \"\\u298C\", \"&rbrksld;\": \"\\u298E\", \"&rbrkslu;\": \"\\u2990\", \"&rcaron;\": \"\\u0159\", \"&rcedil;\": \"\\u0157\", \"&rceil;\": \"\\u2309\", \"&rcub;\": \"}\", \"&rcy;\": \"\\u0440\", \"&rdca;\": \"\\u2937\", \"&rdldhar;\": \"\\u2969\", \"&rdquo;\": \"\\u201D\", \"&rdquor;\": \"\\u201D\", \"&rdsh;\": \"\\u21B3\", \"&real;\": \"\\u211C\", \"&realine;\": \"\\u211B\", \"&realpart;\": \"\\u211C\", \"&reals;\": \"\\u211D\", \"&rect;\": \"\\u25AD\", \"&reg\": \"\\xAE\", \"&reg;\": \"\\xAE\", \"&rfisht;\": \"\\u297D\", \"&rfloor;\": \"\\u230B\", \"&rfr;\": \"\\u{1D52F}\", \"&rhard;\": \"\\u21C1\", \"&rharu;\": \"\\u21C0\", \"&rharul;\": \"\\u296C\", \"&rho;\": \"\\u03C1\", \"&rhov;\": \"\\u03F1\", \"&rightarrow;\": \"\\u2192\", \"&rightarrowtail;\": \"\\u21A3\", \"&rightharpoondown;\": \"\\u21C1\", \"&rightharpoonup;\": \"\\u21C0\", \"&rightleftarrows;\": \"\\u21C4\", \"&rightleftharpoons;\": \"\\u21CC\", \"&rightrightarrows;\": \"\\u21C9\", \"&rightsquigarrow;\": \"\\u219D\", \"&rightthreetimes;\": \"\\u22CC\", \"&ring;\": \"\\u02DA\", \"&risingdotseq;\": \"\\u2253\", \"&rlarr;\": \"\\u21C4\", \"&rlhar;\": \"\\u21CC\", \"&rlm;\": \"\\u200F\", \"&rmoust;\": \"\\u23B1\", \"&rmoustache;\": \"\\u23B1\", \"&rnmid;\": \"\\u2AEE\", \"&roang;\": \"\\u27ED\", \"&roarr;\": \"\\u21FE\", \"&robrk;\": \"\\u27E7\", \"&ropar;\": \"\\u2986\", \"&ropf;\": \"\\u{1D563}\", \"&roplus;\": \"\\u2A2E\", \"&rotimes;\": \"\\u2A35\", \"&rpar;\": \")\", \"&rpargt;\": \"\\u2994\", \"&rppolint;\": \"\\u2A12\", \"&rrarr;\": \"\\u21C9\", \"&rsaquo;\": \"\\u203A\", \"&rscr;\": \"\\u{1D4C7}\", \"&rsh;\": \"\\u21B1\", \"&rsqb;\": \"]\", \"&rsquo;\": \"\\u2019\", \"&rsquor;\": \"\\u2019\", \"&rthree;\": \"\\u22CC\", \"&rtimes;\": \"\\u22CA\", \"&rtri;\": \"\\u25B9\", \"&rtrie;\": \"\\u22B5\", \"&rtrif;\": \"\\u25B8\", \"&rtriltri;\": \"\\u29CE\", \"&ruluhar;\": \"\\u2968\", \"&rx;\": \"\\u211E\", \"&sacute;\": \"\\u015B\", \"&sbquo;\": \"\\u201A\", \"&sc;\": \"\\u227B\", \"&scE;\": \"\\u2AB4\", \"&scap;\": \"\\u2AB8\", \"&scaron;\": \"\\u0161\", \"&sccue;\": \"\\u227D\", \"&sce;\": \"\\u2AB0\", \"&scedil;\": \"\\u015F\", \"&scirc;\": \"\\u015D\", \"&scnE;\": \"\\u2AB6\", \"&scnap;\": \"\\u2ABA\", \"&scnsim;\": \"\\u22E9\", \"&scpolint;\": \"\\u2A13\", \"&scsim;\": \"\\u227F\", \"&scy;\": \"\\u0441\", \"&sdot;\": \"\\u22C5\", \"&sdotb;\": \"\\u22A1\", \"&sdote;\": \"\\u2A66\", \"&seArr;\": \"\\u21D8\", \"&searhk;\": \"\\u2925\", \"&searr;\": \"\\u2198\", \"&searrow;\": \"\\u2198\", \"&sect\": \"\\xA7\", \"&sect;\": \"\\xA7\", \"&semi;\": \";\", \"&seswar;\": \"\\u2929\", \"&setminus;\": \"\\u2216\", \"&setmn;\": \"\\u2216\", \"&sext;\": \"\\u2736\", \"&sfr;\": \"\\u{1D530}\", \"&sfrown;\": \"\\u2322\", \"&sharp;\": \"\\u266F\", \"&shchcy;\": \"\\u0449\", \"&shcy;\": \"\\u0448\", \"&shortmid;\": \"\\u2223\", \"&shortparallel;\": \"\\u2225\", \"&shy\": \"\\xAD\", \"&shy;\": \"\\xAD\", \"&sigma;\": \"\\u03C3\", \"&sigmaf;\": \"\\u03C2\", \"&sigmav;\": \"\\u03C2\", \"&sim;\": \"\\u223C\", \"&simdot;\": \"\\u2A6A\", \"&sime;\": \"\\u2243\", \"&simeq;\": \"\\u2243\", \"&simg;\": \"\\u2A9E\", \"&simgE;\": \"\\u2AA0\", \"&siml;\": \"\\u2A9D\", \"&simlE;\": \"\\u2A9F\", \"&simne;\": \"\\u2246\", \"&simplus;\": \"\\u2A24\", \"&simrarr;\": \"\\u2972\", \"&slarr;\": \"\\u2190\", \"&smallsetminus;\": \"\\u2216\", \"&smashp;\": \"\\u2A33\", \"&smeparsl;\": \"\\u29E4\", \"&smid;\": \"\\u2223\", \"&smile;\": \"\\u2323\", \"&smt;\": \"\\u2AAA\", \"&smte;\": \"\\u2AAC\", \"&smtes;\": \"\\u2AAC\\uFE00\", \"&softcy;\": \"\\u044C\", \"&sol;\": \"/\", \"&solb;\": \"\\u29C4\", \"&solbar;\": \"\\u233F\", \"&sopf;\": \"\\u{1D564}\", \"&spades;\": \"\\u2660\", \"&spadesuit;\": \"\\u2660\", \"&spar;\": \"\\u2225\", \"&sqcap;\": \"\\u2293\", \"&sqcaps;\": \"\\u2293\\uFE00\", \"&sqcup;\": \"\\u2294\", \"&sqcups;\": \"\\u2294\\uFE00\", \"&sqsub;\": \"\\u228F\", \"&sqsube;\": \"\\u2291\", \"&sqsubset;\": \"\\u228F\", \"&sqsubseteq;\": \"\\u2291\", \"&sqsup;\": \"\\u2290\", \"&sqsupe;\": \"\\u2292\", \"&sqsupset;\": \"\\u2290\", \"&sqsupseteq;\": \"\\u2292\", \"&squ;\": \"\\u25A1\", \"&square;\": \"\\u25A1\", \"&squarf;\": \"\\u25AA\", \"&squf;\": \"\\u25AA\", \"&srarr;\": \"\\u2192\", \"&sscr;\": \"\\u{1D4C8}\", \"&ssetmn;\": \"\\u2216\", \"&ssmile;\": \"\\u2323\", \"&sstarf;\": \"\\u22C6\", \"&star;\": \"\\u2606\", \"&starf;\": \"\\u2605\", \"&straightepsilon;\": \"\\u03F5\", \"&straightphi;\": \"\\u03D5\", \"&strns;\": \"\\xAF\", \"&sub;\": \"\\u2282\", \"&subE;\": \"\\u2AC5\", \"&subdot;\": \"\\u2ABD\", \"&sube;\": \"\\u2286\", \"&subedot;\": \"\\u2AC3\", \"&submult;\": \"\\u2AC1\", \"&subnE;\": \"\\u2ACB\", \"&subne;\": \"\\u228A\", \"&subplus;\": \"\\u2ABF\", \"&subrarr;\": \"\\u2979\", \"&subset;\": \"\\u2282\", \"&subseteq;\": \"\\u2286\", \"&subseteqq;\": \"\\u2AC5\", \"&subsetneq;\": \"\\u228A\", \"&subsetneqq;\": \"\\u2ACB\", \"&subsim;\": \"\\u2AC7\", \"&subsub;\": \"\\u2AD5\", \"&subsup;\": \"\\u2AD3\", \"&succ;\": \"\\u227B\", \"&succapprox;\": \"\\u2AB8\", \"&succcurlyeq;\": \"\\u227D\", \"&succeq;\": \"\\u2AB0\", \"&succnapprox;\": \"\\u2ABA\", \"&succneqq;\": \"\\u2AB6\", \"&succnsim;\": \"\\u22E9\", \"&succsim;\": \"\\u227F\", \"&sum;\": \"\\u2211\", \"&sung;\": \"\\u266A\", \"&sup1\": \"\\xB9\", \"&sup1;\": \"\\xB9\", \"&sup2\": \"\\xB2\", \"&sup2;\": \"\\xB2\", \"&sup3\": \"\\xB3\", \"&sup3;\": \"\\xB3\", \"&sup;\": \"\\u2283\", \"&supE;\": \"\\u2AC6\", \"&supdot;\": \"\\u2ABE\", \"&supdsub;\": \"\\u2AD8\", \"&supe;\": \"\\u2287\", \"&supedot;\": \"\\u2AC4\", \"&suphsol;\": \"\\u27C9\", \"&suphsub;\": \"\\u2AD7\", \"&suplarr;\": \"\\u297B\", \"&supmult;\": \"\\u2AC2\", \"&supnE;\": \"\\u2ACC\", \"&supne;\": \"\\u228B\", \"&supplus;\": \"\\u2AC0\", \"&supset;\": \"\\u2283\", \"&supseteq;\": \"\\u2287\", \"&supseteqq;\": \"\\u2AC6\", \"&supsetneq;\": \"\\u228B\", \"&supsetneqq;\": \"\\u2ACC\", \"&supsim;\": \"\\u2AC8\", \"&supsub;\": \"\\u2AD4\", \"&supsup;\": \"\\u2AD6\", \"&swArr;\": \"\\u21D9\", \"&swarhk;\": \"\\u2926\", \"&swarr;\": \"\\u2199\", \"&swarrow;\": \"\\u2199\", \"&swnwar;\": \"\\u292A\", \"&szlig\": \"\\xDF\", \"&szlig;\": \"\\xDF\", \"&target;\": \"\\u2316\", \"&tau;\": \"\\u03C4\", \"&tbrk;\": \"\\u23B4\", \"&tcaron;\": \"\\u0165\", \"&tcedil;\": \"\\u0163\", \"&tcy;\": \"\\u0442\", \"&tdot;\": \"\\u20DB\", \"&telrec;\": \"\\u2315\", \"&tfr;\": \"\\u{1D531}\", \"&there4;\": \"\\u2234\", \"&therefore;\": \"\\u2234\", \"&theta;\": \"\\u03B8\", \"&thetasym;\": \"\\u03D1\", \"&thetav;\": \"\\u03D1\", \"&thickapprox;\": \"\\u2248\", \"&thicksim;\": \"\\u223C\", \"&thinsp;\": \"\\u2009\", \"&thkap;\": \"\\u2248\", \"&thksim;\": \"\\u223C\", \"&thorn\": \"\\xFE\", \"&thorn;\": \"\\xFE\", \"&tilde;\": \"\\u02DC\", \"&times\": \"\\xD7\", \"&times;\": \"\\xD7\", \"&timesb;\": \"\\u22A0\", \"&timesbar;\": \"\\u2A31\", \"&timesd;\": \"\\u2A30\", \"&tint;\": \"\\u222D\", \"&toea;\": \"\\u2928\", \"&top;\": \"\\u22A4\", \"&topbot;\": \"\\u2336\", \"&topcir;\": \"\\u2AF1\", \"&topf;\": \"\\u{1D565}\", \"&topfork;\": \"\\u2ADA\", \"&tosa;\": \"\\u2929\", \"&tprime;\": \"\\u2034\", \"&trade;\": \"\\u2122\", \"&triangle;\": \"\\u25B5\", \"&triangledown;\": \"\\u25BF\", \"&triangleleft;\": \"\\u25C3\", \"&trianglelefteq;\": \"\\u22B4\", \"&triangleq;\": \"\\u225C\", \"&triangleright;\": \"\\u25B9\", \"&trianglerighteq;\": \"\\u22B5\", \"&tridot;\": \"\\u25EC\", \"&trie;\": \"\\u225C\", \"&triminus;\": \"\\u2A3A\", \"&triplus;\": \"\\u2A39\", \"&trisb;\": \"\\u29CD\", \"&tritime;\": \"\\u2A3B\", \"&trpezium;\": \"\\u23E2\", \"&tscr;\": \"\\u{1D4C9}\", \"&tscy;\": \"\\u0446\", \"&tshcy;\": \"\\u045B\", \"&tstrok;\": \"\\u0167\", \"&twixt;\": \"\\u226C\", \"&twoheadleftarrow;\": \"\\u219E\", \"&twoheadrightarrow;\": \"\\u21A0\", \"&uArr;\": \"\\u21D1\", \"&uHar;\": \"\\u2963\", \"&uacute\": \"\\xFA\", \"&uacute;\": \"\\xFA\", \"&uarr;\": \"\\u2191\", \"&ubrcy;\": \"\\u045E\", \"&ubreve;\": \"\\u016D\", \"&ucirc\": \"\\xFB\", \"&ucirc;\": \"\\xFB\", \"&ucy;\": \"\\u0443\", \"&udarr;\": \"\\u21C5\", \"&udblac;\": \"\\u0171\", \"&udhar;\": \"\\u296E\", \"&ufisht;\": \"\\u297E\", \"&ufr;\": \"\\u{1D532}\", \"&ugrave\": \"\\xF9\", \"&ugrave;\": \"\\xF9\", \"&uharl;\": \"\\u21BF\", \"&uharr;\": \"\\u21BE\", \"&uhblk;\": \"\\u2580\", \"&ulcorn;\": \"\\u231C\", \"&ulcorner;\": \"\\u231C\", \"&ulcrop;\": \"\\u230F\", \"&ultri;\": \"\\u25F8\", \"&umacr;\": \"\\u016B\", \"&uml\": \"\\xA8\", \"&uml;\": \"\\xA8\", \"&uogon;\": \"\\u0173\", \"&uopf;\": \"\\u{1D566}\", \"&uparrow;\": \"\\u2191\", \"&updownarrow;\": \"\\u2195\", \"&upharpoonleft;\": \"\\u21BF\", \"&upharpoonright;\": \"\\u21BE\", \"&uplus;\": \"\\u228E\", \"&upsi;\": \"\\u03C5\", \"&upsih;\": \"\\u03D2\", \"&upsilon;\": \"\\u03C5\", \"&upuparrows;\": \"\\u21C8\", \"&urcorn;\": \"\\u231D\", \"&urcorner;\": \"\\u231D\", \"&urcrop;\": \"\\u230E\", \"&uring;\": \"\\u016F\", \"&urtri;\": \"\\u25F9\", \"&uscr;\": \"\\u{1D4CA}\", \"&utdot;\": \"\\u22F0\", \"&utilde;\": \"\\u0169\", \"&utri;\": \"\\u25B5\", \"&utrif;\": \"\\u25B4\", \"&uuarr;\": \"\\u21C8\", \"&uuml\": \"\\xFC\", \"&uuml;\": \"\\xFC\", \"&uwangle;\": \"\\u29A7\", \"&vArr;\": \"\\u21D5\", \"&vBar;\": \"\\u2AE8\", \"&vBarv;\": \"\\u2AE9\", \"&vDash;\": \"\\u22A8\", \"&vangrt;\": \"\\u299C\", \"&varepsilon;\": \"\\u03F5\", \"&varkappa;\": \"\\u03F0\", \"&varnothing;\": \"\\u2205\", \"&varphi;\": \"\\u03D5\", \"&varpi;\": \"\\u03D6\", \"&varpropto;\": \"\\u221D\", \"&varr;\": \"\\u2195\", \"&varrho;\": \"\\u03F1\", \"&varsigma;\": \"\\u03C2\", \"&varsubsetneq;\": \"\\u228A\\uFE00\", \"&varsubsetneqq;\": \"\\u2ACB\\uFE00\", \"&varsupsetneq;\": \"\\u228B\\uFE00\", \"&varsupsetneqq;\": \"\\u2ACC\\uFE00\", \"&vartheta;\": \"\\u03D1\", \"&vartriangleleft;\": \"\\u22B2\", \"&vartriangleright;\": \"\\u22B3\", \"&vcy;\": \"\\u0432\", \"&vdash;\": \"\\u22A2\", \"&vee;\": \"\\u2228\", \"&veebar;\": \"\\u22BB\", \"&veeeq;\": \"\\u225A\", \"&vellip;\": \"\\u22EE\", \"&verbar;\": \"|\", \"&vert;\": \"|\", \"&vfr;\": \"\\u{1D533}\", \"&vltri;\": \"\\u22B2\", \"&vnsub;\": \"\\u2282\\u20D2\", \"&vnsup;\": \"\\u2283\\u20D2\", \"&vopf;\": \"\\u{1D567}\", \"&vprop;\": \"\\u221D\", \"&vrtri;\": \"\\u22B3\", \"&vscr;\": \"\\u{1D4CB}\", \"&vsubnE;\": \"\\u2ACB\\uFE00\", \"&vsubne;\": \"\\u228A\\uFE00\", \"&vsupnE;\": \"\\u2ACC\\uFE00\", \"&vsupne;\": \"\\u228B\\uFE00\", \"&vzigzag;\": \"\\u299A\", \"&wcirc;\": \"\\u0175\", \"&wedbar;\": \"\\u2A5F\", \"&wedge;\": \"\\u2227\", \"&wedgeq;\": \"\\u2259\", \"&weierp;\": \"\\u2118\", \"&wfr;\": \"\\u{1D534}\", \"&wopf;\": \"\\u{1D568}\", \"&wp;\": \"\\u2118\", \"&wr;\": \"\\u2240\", \"&wreath;\": \"\\u2240\", \"&wscr;\": \"\\u{1D4CC}\", \"&xcap;\": \"\\u22C2\", \"&xcirc;\": \"\\u25EF\", \"&xcup;\": \"\\u22C3\", \"&xdtri;\": \"\\u25BD\", \"&xfr;\": \"\\u{1D535}\", \"&xhArr;\": \"\\u27FA\", \"&xharr;\": \"\\u27F7\", \"&xi;\": \"\\u03BE\", \"&xlArr;\": \"\\u27F8\", \"&xlarr;\": \"\\u27F5\", \"&xmap;\": \"\\u27FC\", \"&xnis;\": \"\\u22FB\", \"&xodot;\": \"\\u2A00\", \"&xopf;\": \"\\u{1D569}\", \"&xoplus;\": \"\\u2A01\", \"&xotime;\": \"\\u2A02\", \"&xrArr;\": \"\\u27F9\", \"&xrarr;\": \"\\u27F6\", \"&xscr;\": \"\\u{1D4CD}\", \"&xsqcup;\": \"\\u2A06\", \"&xuplus;\": \"\\u2A04\", \"&xutri;\": \"\\u25B3\", \"&xvee;\": \"\\u22C1\", \"&xwedge;\": \"\\u22C0\", \"&yacute\": \"\\xFD\", \"&yacute;\": \"\\xFD\", \"&yacy;\": \"\\u044F\", \"&ycirc;\": \"\\u0177\", \"&ycy;\": \"\\u044B\", \"&yen\": \"\\xA5\", \"&yen;\": \"\\xA5\", \"&yfr;\": \"\\u{1D536}\", \"&yicy;\": \"\\u0457\", \"&yopf;\": \"\\u{1D56A}\", \"&yscr;\": \"\\u{1D4CE}\", \"&yucy;\": \"\\u044E\", \"&yuml\": \"\\xFF\", \"&yuml;\": \"\\xFF\", \"&zacute;\": \"\\u017A\", \"&zcaron;\": \"\\u017E\", \"&zcy;\": \"\\u0437\", \"&zdot;\": \"\\u017C\", \"&zeetrf;\": \"\\u2128\", \"&zeta;\": \"\\u03B6\", \"&zfr;\": \"\\u{1D537}\", \"&zhcy;\": \"\\u0436\", \"&zigrarr;\": \"\\u21DD\", \"&zopf;\": \"\\u{1D56B}\", \"&zscr;\": \"\\u{1D4CF}\", \"&zwj;\": \"\\u200D\", \"&zwnj;\": \"\\u200C\" }, characters: { \"\\xC6\": \"&AElig;\", \"&\": \"&amp;\", \"\\xC1\": \"&Aacute;\", \"\\u0102\": \"&Abreve;\", \"\\xC2\": \"&Acirc;\", \"\\u0410\": \"&Acy;\", \"\\u{1D504}\": \"&Afr;\", \"\\xC0\": \"&Agrave;\", \"\\u0391\": \"&Alpha;\", \"\\u0100\": \"&Amacr;\", \"\\u2A53\": \"&And;\", \"\\u0104\": \"&Aogon;\", \"\\u{1D538}\": \"&Aopf;\", \"\\u2061\": \"&af;\", \"\\xC5\": \"&angst;\", \"\\u{1D49C}\": \"&Ascr;\", \"\\u2254\": \"&coloneq;\", \"\\xC3\": \"&Atilde;\", \"\\xC4\": \"&Auml;\", \"\\u2216\": \"&ssetmn;\", \"\\u2AE7\": \"&Barv;\", \"\\u2306\": \"&doublebarwedge;\", \"\\u0411\": \"&Bcy;\", \"\\u2235\": \"&because;\", \"\\u212C\": \"&bernou;\", \"\\u0392\": \"&Beta;\", \"\\u{1D505}\": \"&Bfr;\", \"\\u{1D539}\": \"&Bopf;\", \"\\u02D8\": \"&breve;\", \"\\u224E\": \"&bump;\", \"\\u0427\": \"&CHcy;\", \"\\xA9\": \"&copy;\", \"\\u0106\": \"&Cacute;\", \"\\u22D2\": \"&Cap;\", \"\\u2145\": \"&DD;\", \"\\u212D\": \"&Cfr;\", \"\\u010C\": \"&Ccaron;\", \"\\xC7\": \"&Ccedil;\", \"\\u0108\": \"&Ccirc;\", \"\\u2230\": \"&Cconint;\", \"\\u010A\": \"&Cdot;\", \"\\xB8\": \"&cedil;\", \"\\xB7\": \"&middot;\", \"\\u03A7\": \"&Chi;\", \"\\u2299\": \"&odot;\", \"\\u2296\": \"&ominus;\", \"\\u2295\": \"&oplus;\", \"\\u2297\": \"&otimes;\", \"\\u2232\": \"&cwconint;\", \"\\u201D\": \"&rdquor;\", \"\\u2019\": \"&rsquor;\", \"\\u2237\": \"&Proportion;\", \"\\u2A74\": \"&Colone;\", \"\\u2261\": \"&equiv;\", \"\\u222F\": \"&DoubleContourIntegral;\", \"\\u222E\": \"&oint;\", \"\\u2102\": \"&complexes;\", \"\\u2210\": \"&coprod;\", \"\\u2233\": \"&awconint;\", \"\\u2A2F\": \"&Cross;\", \"\\u{1D49E}\": \"&Cscr;\", \"\\u22D3\": \"&Cup;\", \"\\u224D\": \"&asympeq;\", \"\\u2911\": \"&DDotrahd;\", \"\\u0402\": \"&DJcy;\", \"\\u0405\": \"&DScy;\", \"\\u040F\": \"&DZcy;\", \"\\u2021\": \"&ddagger;\", \"\\u21A1\": \"&Darr;\", \"\\u2AE4\": \"&DoubleLeftTee;\", \"\\u010E\": \"&Dcaron;\", \"\\u0414\": \"&Dcy;\", \"\\u2207\": \"&nabla;\", \"\\u0394\": \"&Delta;\", \"\\u{1D507}\": \"&Dfr;\", \"\\xB4\": \"&acute;\", \"\\u02D9\": \"&dot;\", \"\\u02DD\": \"&dblac;\", \"`\": \"&grave;\", \"\\u02DC\": \"&tilde;\", \"\\u22C4\": \"&diamond;\", \"\\u2146\": \"&dd;\", \"\\u{1D53B}\": \"&Dopf;\", \"\\xA8\": \"&uml;\", \"\\u20DC\": \"&DotDot;\", \"\\u2250\": \"&esdot;\", \"\\u21D3\": \"&dArr;\", \"\\u21D0\": \"&lArr;\", \"\\u21D4\": \"&iff;\", \"\\u27F8\": \"&xlArr;\", \"\\u27FA\": \"&xhArr;\", \"\\u27F9\": \"&xrArr;\", \"\\u21D2\": \"&rArr;\", \"\\u22A8\": \"&vDash;\", \"\\u21D1\": \"&uArr;\", \"\\u21D5\": \"&vArr;\", \"\\u2225\": \"&spar;\", \"\\u2193\": \"&downarrow;\", \"\\u2913\": \"&DownArrowBar;\", \"\\u21F5\": \"&duarr;\", \"\\u0311\": \"&DownBreve;\", \"\\u2950\": \"&DownLeftRightVector;\", \"\\u295E\": \"&DownLeftTeeVector;\", \"\\u21BD\": \"&lhard;\", \"\\u2956\": \"&DownLeftVectorBar;\", \"\\u295F\": \"&DownRightTeeVector;\", \"\\u21C1\": \"&rightharpoondown;\", \"\\u2957\": \"&DownRightVectorBar;\", \"\\u22A4\": \"&top;\", \"\\u21A7\": \"&mapstodown;\", \"\\u{1D49F}\": \"&Dscr;\", \"\\u0110\": \"&Dstrok;\", \"\\u014A\": \"&ENG;\", \"\\xD0\": \"&ETH;\", \"\\xC9\": \"&Eacute;\", \"\\u011A\": \"&Ecaron;\", \"\\xCA\": \"&Ecirc;\", \"\\u042D\": \"&Ecy;\", \"\\u0116\": \"&Edot;\", \"\\u{1D508}\": \"&Efr;\", \"\\xC8\": \"&Egrave;\", \"\\u2208\": \"&isinv;\", \"\\u0112\": \"&Emacr;\", \"\\u25FB\": \"&EmptySmallSquare;\", \"\\u25AB\": \"&EmptyVerySmallSquare;\", \"\\u0118\": \"&Eogon;\", \"\\u{1D53C}\": \"&Eopf;\", \"\\u0395\": \"&Epsilon;\", \"\\u2A75\": \"&Equal;\", \"\\u2242\": \"&esim;\", \"\\u21CC\": \"&rlhar;\", \"\\u2130\": \"&expectation;\", \"\\u2A73\": \"&Esim;\", \"\\u0397\": \"&Eta;\", \"\\xCB\": \"&Euml;\", \"\\u2203\": \"&exist;\", \"\\u2147\": \"&exponentiale;\", \"\\u0424\": \"&Fcy;\", \"\\u{1D509}\": \"&Ffr;\", \"\\u25FC\": \"&FilledSmallSquare;\", \"\\u25AA\": \"&squf;\", \"\\u{1D53D}\": \"&Fopf;\", \"\\u2200\": \"&forall;\", \"\\u2131\": \"&Fscr;\", \"\\u0403\": \"&GJcy;\", \">\": \"&gt;\", \"\\u0393\": \"&Gamma;\", \"\\u03DC\": \"&Gammad;\", \"\\u011E\": \"&Gbreve;\", \"\\u0122\": \"&Gcedil;\", \"\\u011C\": \"&Gcirc;\", \"\\u0413\": \"&Gcy;\", \"\\u0120\": \"&Gdot;\", \"\\u{1D50A}\": \"&Gfr;\", \"\\u22D9\": \"&ggg;\", \"\\u{1D53E}\": \"&Gopf;\", \"\\u2265\": \"&geq;\", \"\\u22DB\": \"&gtreqless;\", \"\\u2267\": \"&geqq;\", \"\\u2AA2\": \"&GreaterGreater;\", \"\\u2277\": \"&gtrless;\", \"\\u2A7E\": \"&ges;\", \"\\u2273\": \"&gtrsim;\", \"\\u{1D4A2}\": \"&Gscr;\", \"\\u226B\": \"&gg;\", \"\\u042A\": \"&HARDcy;\", \"\\u02C7\": \"&caron;\", \"^\": \"&Hat;\", \"\\u0124\": \"&Hcirc;\", \"\\u210C\": \"&Poincareplane;\", \"\\u210B\": \"&hamilt;\", \"\\u210D\": \"&quaternions;\", \"\\u2500\": \"&boxh;\", \"\\u0126\": \"&Hstrok;\", \"\\u224F\": \"&bumpeq;\", \"\\u0415\": \"&IEcy;\", \"\\u0132\": \"&IJlig;\", \"\\u0401\": \"&IOcy;\", \"\\xCD\": \"&Iacute;\", \"\\xCE\": \"&Icirc;\", \"\\u0418\": \"&Icy;\", \"\\u0130\": \"&Idot;\", \"\\u2111\": \"&imagpart;\", \"\\xCC\": \"&Igrave;\", \"\\u012A\": \"&Imacr;\", \"\\u2148\": \"&ii;\", \"\\u222C\": \"&Int;\", \"\\u222B\": \"&int;\", \"\\u22C2\": \"&xcap;\", \"\\u2063\": \"&ic;\", \"\\u2062\": \"&it;\", \"\\u012E\": \"&Iogon;\", \"\\u{1D540}\": \"&Iopf;\", \"\\u0399\": \"&Iota;\", \"\\u2110\": \"&imagline;\", \"\\u0128\": \"&Itilde;\", \"\\u0406\": \"&Iukcy;\", \"\\xCF\": \"&Iuml;\", \"\\u0134\": \"&Jcirc;\", \"\\u0419\": \"&Jcy;\", \"\\u{1D50D}\": \"&Jfr;\", \"\\u{1D541}\": \"&Jopf;\", \"\\u{1D4A5}\": \"&Jscr;\", \"\\u0408\": \"&Jsercy;\", \"\\u0404\": \"&Jukcy;\", \"\\u0425\": \"&KHcy;\", \"\\u040C\": \"&KJcy;\", \"\\u039A\": \"&Kappa;\", \"\\u0136\": \"&Kcedil;\", \"\\u041A\": \"&Kcy;\", \"\\u{1D50E}\": \"&Kfr;\", \"\\u{1D542}\": \"&Kopf;\", \"\\u{1D4A6}\": \"&Kscr;\", \"\\u0409\": \"&LJcy;\", \"<\": \"&lt;\", \"\\u0139\": \"&Lacute;\", \"\\u039B\": \"&Lambda;\", \"\\u27EA\": \"&Lang;\", \"\\u2112\": \"&lagran;\", \"\\u219E\": \"&twoheadleftarrow;\", \"\\u013D\": \"&Lcaron;\", \"\\u013B\": \"&Lcedil;\", \"\\u041B\": \"&Lcy;\", \"\\u27E8\": \"&langle;\", \"\\u2190\": \"&slarr;\", \"\\u21E4\": \"&larrb;\", \"\\u21C6\": \"&lrarr;\", \"\\u2308\": \"&lceil;\", \"\\u27E6\": \"&lobrk;\", \"\\u2961\": \"&LeftDownTeeVector;\", \"\\u21C3\": \"&downharpoonleft;\", \"\\u2959\": \"&LeftDownVectorBar;\", \"\\u230A\": \"&lfloor;\", \"\\u2194\": \"&leftrightarrow;\", \"\\u294E\": \"&LeftRightVector;\", \"\\u22A3\": \"&dashv;\", \"\\u21A4\": \"&mapstoleft;\", \"\\u295A\": \"&LeftTeeVector;\", \"\\u22B2\": \"&vltri;\", \"\\u29CF\": \"&LeftTriangleBar;\", \"\\u22B4\": \"&trianglelefteq;\", \"\\u2951\": \"&LeftUpDownVector;\", \"\\u2960\": \"&LeftUpTeeVector;\", \"\\u21BF\": \"&upharpoonleft;\", \"\\u2958\": \"&LeftUpVectorBar;\", \"\\u21BC\": \"&lharu;\", \"\\u2952\": \"&LeftVectorBar;\", \"\\u22DA\": \"&lesseqgtr;\", \"\\u2266\": \"&leqq;\", \"\\u2276\": \"&lg;\", \"\\u2AA1\": \"&LessLess;\", \"\\u2A7D\": \"&les;\", \"\\u2272\": \"&lsim;\", \"\\u{1D50F}\": \"&Lfr;\", \"\\u22D8\": \"&Ll;\", \"\\u21DA\": \"&lAarr;\", \"\\u013F\": \"&Lmidot;\", \"\\u27F5\": \"&xlarr;\", \"\\u27F7\": \"&xharr;\", \"\\u27F6\": \"&xrarr;\", \"\\u{1D543}\": \"&Lopf;\", \"\\u2199\": \"&swarrow;\", \"\\u2198\": \"&searrow;\", \"\\u21B0\": \"&lsh;\", \"\\u0141\": \"&Lstrok;\", \"\\u226A\": \"&ll;\", \"\\u2905\": \"&Map;\", \"\\u041C\": \"&Mcy;\", \"\\u205F\": \"&MediumSpace;\", \"\\u2133\": \"&phmmat;\", \"\\u{1D510}\": \"&Mfr;\", \"\\u2213\": \"&mp;\", \"\\u{1D544}\": \"&Mopf;\", \"\\u039C\": \"&Mu;\", \"\\u040A\": \"&NJcy;\", \"\\u0143\": \"&Nacute;\", \"\\u0147\": \"&Ncaron;\", \"\\u0145\": \"&Ncedil;\", \"\\u041D\": \"&Ncy;\", \"\\u200B\": \"&ZeroWidthSpace;\", \"\\n\": \"&NewLine;\", \"\\u{1D511}\": \"&Nfr;\", \"\\u2060\": \"&NoBreak;\", \"\\xA0\": \"&nbsp;\", \"\\u2115\": \"&naturals;\", \"\\u2AEC\": \"&Not;\", \"\\u2262\": \"&nequiv;\", \"\\u226D\": \"&NotCupCap;\", \"\\u2226\": \"&nspar;\", \"\\u2209\": \"&notinva;\", \"\\u2260\": \"&ne;\", \"\\u2242\\u0338\": \"&nesim;\", \"\\u2204\": \"&nexists;\", \"\\u226F\": \"&ngtr;\", \"\\u2271\": \"&ngeq;\", \"\\u2267\\u0338\": \"&ngeqq;\", \"\\u226B\\u0338\": \"&nGtv;\", \"\\u2279\": \"&ntgl;\", \"\\u2A7E\\u0338\": \"&nges;\", \"\\u2275\": \"&ngsim;\", \"\\u224E\\u0338\": \"&nbump;\", \"\\u224F\\u0338\": \"&nbumpe;\", \"\\u22EA\": \"&ntriangleleft;\", \"\\u29CF\\u0338\": \"&NotLeftTriangleBar;\", \"\\u22EC\": \"&ntrianglelefteq;\", \"\\u226E\": \"&nlt;\", \"\\u2270\": \"&nleq;\", \"\\u2278\": \"&ntlg;\", \"\\u226A\\u0338\": \"&nLtv;\", \"\\u2A7D\\u0338\": \"&nles;\", \"\\u2274\": \"&nlsim;\", \"\\u2AA2\\u0338\": \"&NotNestedGreaterGreater;\", \"\\u2AA1\\u0338\": \"&NotNestedLessLess;\", \"\\u2280\": \"&nprec;\", \"\\u2AAF\\u0338\": \"&npreceq;\", \"\\u22E0\": \"&nprcue;\", \"\\u220C\": \"&notniva;\", \"\\u22EB\": \"&ntriangleright;\", \"\\u29D0\\u0338\": \"&NotRightTriangleBar;\", \"\\u22ED\": \"&ntrianglerighteq;\", \"\\u228F\\u0338\": \"&NotSquareSubset;\", \"\\u22E2\": \"&nsqsube;\", \"\\u2290\\u0338\": \"&NotSquareSuperset;\", \"\\u22E3\": \"&nsqsupe;\", \"\\u2282\\u20D2\": \"&vnsub;\", \"\\u2288\": \"&nsubseteq;\", \"\\u2281\": \"&nsucc;\", \"\\u2AB0\\u0338\": \"&nsucceq;\", \"\\u22E1\": \"&nsccue;\", \"\\u227F\\u0338\": \"&NotSucceedsTilde;\", \"\\u2283\\u20D2\": \"&vnsup;\", \"\\u2289\": \"&nsupseteq;\", \"\\u2241\": \"&nsim;\", \"\\u2244\": \"&nsimeq;\", \"\\u2247\": \"&ncong;\", \"\\u2249\": \"&napprox;\", \"\\u2224\": \"&nsmid;\", \"\\u{1D4A9}\": \"&Nscr;\", \"\\xD1\": \"&Ntilde;\", \"\\u039D\": \"&Nu;\", \"\\u0152\": \"&OElig;\", \"\\xD3\": \"&Oacute;\", \"\\xD4\": \"&Ocirc;\", \"\\u041E\": \"&Ocy;\", \"\\u0150\": \"&Odblac;\", \"\\u{1D512}\": \"&Ofr;\", \"\\xD2\": \"&Ograve;\", \"\\u014C\": \"&Omacr;\", \"\\u03A9\": \"&ohm;\", \"\\u039F\": \"&Omicron;\", \"\\u{1D546}\": \"&Oopf;\", \"\\u201C\": \"&ldquo;\", \"\\u2018\": \"&lsquo;\", \"\\u2A54\": \"&Or;\", \"\\u{1D4AA}\": \"&Oscr;\", \"\\xD8\": \"&Oslash;\", \"\\xD5\": \"&Otilde;\", \"\\u2A37\": \"&Otimes;\", \"\\xD6\": \"&Ouml;\", \"\\u203E\": \"&oline;\", \"\\u23DE\": \"&OverBrace;\", \"\\u23B4\": \"&tbrk;\", \"\\u23DC\": \"&OverParenthesis;\", \"\\u2202\": \"&part;\", \"\\u041F\": \"&Pcy;\", \"\\u{1D513}\": \"&Pfr;\", \"\\u03A6\": \"&Phi;\", \"\\u03A0\": \"&Pi;\", \"\\xB1\": \"&pm;\", \"\\u2119\": \"&primes;\", \"\\u2ABB\": \"&Pr;\", \"\\u227A\": \"&prec;\", \"\\u2AAF\": \"&preceq;\", \"\\u227C\": \"&preccurlyeq;\", \"\\u227E\": \"&prsim;\", \"\\u2033\": \"&Prime;\", \"\\u220F\": \"&prod;\", \"\\u221D\": \"&vprop;\", \"\\u{1D4AB}\": \"&Pscr;\", \"\\u03A8\": \"&Psi;\", '\"': \"&quot;\", \"\\u{1D514}\": \"&Qfr;\", \"\\u211A\": \"&rationals;\", \"\\u{1D4AC}\": \"&Qscr;\", \"\\u2910\": \"&drbkarow;\", \"\\xAE\": \"&reg;\", \"\\u0154\": \"&Racute;\", \"\\u27EB\": \"&Rang;\", \"\\u21A0\": \"&twoheadrightarrow;\", \"\\u2916\": \"&Rarrtl;\", \"\\u0158\": \"&Rcaron;\", \"\\u0156\": \"&Rcedil;\", \"\\u0420\": \"&Rcy;\", \"\\u211C\": \"&realpart;\", \"\\u220B\": \"&niv;\", \"\\u21CB\": \"&lrhar;\", \"\\u296F\": \"&duhar;\", \"\\u03A1\": \"&Rho;\", \"\\u27E9\": \"&rangle;\", \"\\u2192\": \"&srarr;\", \"\\u21E5\": \"&rarrb;\", \"\\u21C4\": \"&rlarr;\", \"\\u2309\": \"&rceil;\", \"\\u27E7\": \"&robrk;\", \"\\u295D\": \"&RightDownTeeVector;\", \"\\u21C2\": \"&downharpoonright;\", \"\\u2955\": \"&RightDownVectorBar;\", \"\\u230B\": \"&rfloor;\", \"\\u22A2\": \"&vdash;\", \"\\u21A6\": \"&mapsto;\", \"\\u295B\": \"&RightTeeVector;\", \"\\u22B3\": \"&vrtri;\", \"\\u29D0\": \"&RightTriangleBar;\", \"\\u22B5\": \"&trianglerighteq;\", \"\\u294F\": \"&RightUpDownVector;\", \"\\u295C\": \"&RightUpTeeVector;\", \"\\u21BE\": \"&upharpoonright;\", \"\\u2954\": \"&RightUpVectorBar;\", \"\\u21C0\": \"&rightharpoonup;\", \"\\u2953\": \"&RightVectorBar;\", \"\\u211D\": \"&reals;\", \"\\u2970\": \"&RoundImplies;\", \"\\u21DB\": \"&rAarr;\", \"\\u211B\": \"&realine;\", \"\\u21B1\": \"&rsh;\", \"\\u29F4\": \"&RuleDelayed;\", \"\\u0429\": \"&SHCHcy;\", \"\\u0428\": \"&SHcy;\", \"\\u042C\": \"&SOFTcy;\", \"\\u015A\": \"&Sacute;\", \"\\u2ABC\": \"&Sc;\", \"\\u0160\": \"&Scaron;\", \"\\u015E\": \"&Scedil;\", \"\\u015C\": \"&Scirc;\", \"\\u0421\": \"&Scy;\", \"\\u{1D516}\": \"&Sfr;\", \"\\u2191\": \"&uparrow;\", \"\\u03A3\": \"&Sigma;\", \"\\u2218\": \"&compfn;\", \"\\u{1D54A}\": \"&Sopf;\", \"\\u221A\": \"&radic;\", \"\\u25A1\": \"&square;\", \"\\u2293\": \"&sqcap;\", \"\\u228F\": \"&sqsubset;\", \"\\u2291\": \"&sqsubseteq;\", \"\\u2290\": \"&sqsupset;\", \"\\u2292\": \"&sqsupseteq;\", \"\\u2294\": \"&sqcup;\", \"\\u{1D4AE}\": \"&Sscr;\", \"\\u22C6\": \"&sstarf;\", \"\\u22D0\": \"&Subset;\", \"\\u2286\": \"&subseteq;\", \"\\u227B\": \"&succ;\", \"\\u2AB0\": \"&succeq;\", \"\\u227D\": \"&succcurlyeq;\", \"\\u227F\": \"&succsim;\", \"\\u2211\": \"&sum;\", \"\\u22D1\": \"&Supset;\", \"\\u2283\": \"&supset;\", \"\\u2287\": \"&supseteq;\", \"\\xDE\": \"&THORN;\", \"\\u2122\": \"&trade;\", \"\\u040B\": \"&TSHcy;\", \"\\u0426\": \"&TScy;\", \"\t\": \"&Tab;\", \"\\u03A4\": \"&Tau;\", \"\\u0164\": \"&Tcaron;\", \"\\u0162\": \"&Tcedil;\", \"\\u0422\": \"&Tcy;\", \"\\u{1D517}\": \"&Tfr;\", \"\\u2234\": \"&therefore;\", \"\\u0398\": \"&Theta;\", \"\\u205F\\u200A\": \"&ThickSpace;\", \"\\u2009\": \"&thinsp;\", \"\\u223C\": \"&thksim;\", \"\\u2243\": \"&simeq;\", \"\\u2245\": \"&cong;\", \"\\u2248\": \"&thkap;\", \"\\u{1D54B}\": \"&Topf;\", \"\\u20DB\": \"&tdot;\", \"\\u{1D4AF}\": \"&Tscr;\", \"\\u0166\": \"&Tstrok;\", \"\\xDA\": \"&Uacute;\", \"\\u219F\": \"&Uarr;\", \"\\u2949\": \"&Uarrocir;\", \"\\u040E\": \"&Ubrcy;\", \"\\u016C\": \"&Ubreve;\", \"\\xDB\": \"&Ucirc;\", \"\\u0423\": \"&Ucy;\", \"\\u0170\": \"&Udblac;\", \"\\u{1D518}\": \"&Ufr;\", \"\\xD9\": \"&Ugrave;\", \"\\u016A\": \"&Umacr;\", _: \"&lowbar;\", \"\\u23DF\": \"&UnderBrace;\", \"\\u23B5\": \"&bbrk;\", \"\\u23DD\": \"&UnderParenthesis;\", \"\\u22C3\": \"&xcup;\", \"\\u228E\": \"&uplus;\", \"\\u0172\": \"&Uogon;\", \"\\u{1D54C}\": \"&Uopf;\", \"\\u2912\": \"&UpArrowBar;\", \"\\u21C5\": \"&udarr;\", \"\\u2195\": \"&varr;\", \"\\u296E\": \"&udhar;\", \"\\u22A5\": \"&perp;\", \"\\u21A5\": \"&mapstoup;\", \"\\u2196\": \"&nwarrow;\", \"\\u2197\": \"&nearrow;\", \"\\u03D2\": \"&upsih;\", \"\\u03A5\": \"&Upsilon;\", \"\\u016E\": \"&Uring;\", \"\\u{1D4B0}\": \"&Uscr;\", \"\\u0168\": \"&Utilde;\", \"\\xDC\": \"&Uuml;\", \"\\u22AB\": \"&VDash;\", \"\\u2AEB\": \"&Vbar;\", \"\\u0412\": \"&Vcy;\", \"\\u22A9\": \"&Vdash;\", \"\\u2AE6\": \"&Vdashl;\", \"\\u22C1\": \"&xvee;\", \"\\u2016\": \"&Vert;\", \"\\u2223\": \"&smid;\", \"|\": \"&vert;\", \"\\u2758\": \"&VerticalSeparator;\", \"\\u2240\": \"&wreath;\", \"\\u200A\": \"&hairsp;\", \"\\u{1D519}\": \"&Vfr;\", \"\\u{1D54D}\": \"&Vopf;\", \"\\u{1D4B1}\": \"&Vscr;\", \"\\u22AA\": \"&Vvdash;\", \"\\u0174\": \"&Wcirc;\", \"\\u22C0\": \"&xwedge;\", \"\\u{1D51A}\": \"&Wfr;\", \"\\u{1D54E}\": \"&Wopf;\", \"\\u{1D4B2}\": \"&Wscr;\", \"\\u{1D51B}\": \"&Xfr;\", \"\\u039E\": \"&Xi;\", \"\\u{1D54F}\": \"&Xopf;\", \"\\u{1D4B3}\": \"&Xscr;\", \"\\u042F\": \"&YAcy;\", \"\\u0407\": \"&YIcy;\", \"\\u042E\": \"&YUcy;\", \"\\xDD\": \"&Yacute;\", \"\\u0176\": \"&Ycirc;\", \"\\u042B\": \"&Ycy;\", \"\\u{1D51C}\": \"&Yfr;\", \"\\u{1D550}\": \"&Yopf;\", \"\\u{1D4B4}\": \"&Yscr;\", \"\\u0178\": \"&Yuml;\", \"\\u0416\": \"&ZHcy;\", \"\\u0179\": \"&Zacute;\", \"\\u017D\": \"&Zcaron;\", \"\\u0417\": \"&Zcy;\", \"\\u017B\": \"&Zdot;\", \"\\u0396\": \"&Zeta;\", \"\\u2128\": \"&zeetrf;\", \"\\u2124\": \"&integers;\", \"\\u{1D4B5}\": \"&Zscr;\", \"\\xE1\": \"&aacute;\", \"\\u0103\": \"&abreve;\", \"\\u223E\": \"&mstpos;\", \"\\u223E\\u0333\": \"&acE;\", \"\\u223F\": \"&acd;\", \"\\xE2\": \"&acirc;\", \"\\u0430\": \"&acy;\", \"\\xE6\": \"&aelig;\", \"\\u{1D51E}\": \"&afr;\", \"\\xE0\": \"&agrave;\", \"\\u2135\": \"&aleph;\", \"\\u03B1\": \"&alpha;\", \"\\u0101\": \"&amacr;\", \"\\u2A3F\": \"&amalg;\", \"\\u2227\": \"&wedge;\", \"\\u2A55\": \"&andand;\", \"\\u2A5C\": \"&andd;\", \"\\u2A58\": \"&andslope;\", \"\\u2A5A\": \"&andv;\", \"\\u2220\": \"&angle;\", \"\\u29A4\": \"&ange;\", \"\\u2221\": \"&measuredangle;\", \"\\u29A8\": \"&angmsdaa;\", \"\\u29A9\": \"&angmsdab;\", \"\\u29AA\": \"&angmsdac;\", \"\\u29AB\": \"&angmsdad;\", \"\\u29AC\": \"&angmsdae;\", \"\\u29AD\": \"&angmsdaf;\", \"\\u29AE\": \"&angmsdag;\", \"\\u29AF\": \"&angmsdah;\", \"\\u221F\": \"&angrt;\", \"\\u22BE\": \"&angrtvb;\", \"\\u299D\": \"&angrtvbd;\", \"\\u2222\": \"&angsph;\", \"\\u237C\": \"&angzarr;\", \"\\u0105\": \"&aogon;\", \"\\u{1D552}\": \"&aopf;\", \"\\u2A70\": \"&apE;\", \"\\u2A6F\": \"&apacir;\", \"\\u224A\": \"&approxeq;\", \"\\u224B\": \"&apid;\", \"'\": \"&apos;\", \"\\xE5\": \"&aring;\", \"\\u{1D4B6}\": \"&ascr;\", \"*\": \"&midast;\", \"\\xE3\": \"&atilde;\", \"\\xE4\": \"&auml;\", \"\\u2A11\": \"&awint;\", \"\\u2AED\": \"&bNot;\", \"\\u224C\": \"&bcong;\", \"\\u03F6\": \"&bepsi;\", \"\\u2035\": \"&bprime;\", \"\\u223D\": \"&bsim;\", \"\\u22CD\": \"&bsime;\", \"\\u22BD\": \"&barvee;\", \"\\u2305\": \"&barwedge;\", \"\\u23B6\": \"&bbrktbrk;\", \"\\u0431\": \"&bcy;\", \"\\u201E\": \"&ldquor;\", \"\\u29B0\": \"&bemptyv;\", \"\\u03B2\": \"&beta;\", \"\\u2136\": \"&beth;\", \"\\u226C\": \"&twixt;\", \"\\u{1D51F}\": \"&bfr;\", \"\\u25EF\": \"&xcirc;\", \"\\u2A00\": \"&xodot;\", \"\\u2A01\": \"&xoplus;\", \"\\u2A02\": \"&xotime;\", \"\\u2A06\": \"&xsqcup;\", \"\\u2605\": \"&starf;\", \"\\u25BD\": \"&xdtri;\", \"\\u25B3\": \"&xutri;\", \"\\u2A04\": \"&xuplus;\", \"\\u290D\": \"&rbarr;\", \"\\u29EB\": \"&lozf;\", \"\\u25B4\": \"&utrif;\", \"\\u25BE\": \"&dtrif;\", \"\\u25C2\": \"&ltrif;\", \"\\u25B8\": \"&rtrif;\", \"\\u2423\": \"&blank;\", \"\\u2592\": \"&blk12;\", \"\\u2591\": \"&blk14;\", \"\\u2593\": \"&blk34;\", \"\\u2588\": \"&block;\", \"=\\u20E5\": \"&bne;\", \"\\u2261\\u20E5\": \"&bnequiv;\", \"\\u2310\": \"&bnot;\", \"\\u{1D553}\": \"&bopf;\", \"\\u22C8\": \"&bowtie;\", \"\\u2557\": \"&boxDL;\", \"\\u2554\": \"&boxDR;\", \"\\u2556\": \"&boxDl;\", \"\\u2553\": \"&boxDr;\", \"\\u2550\": \"&boxH;\", \"\\u2566\": \"&boxHD;\", \"\\u2569\": \"&boxHU;\", \"\\u2564\": \"&boxHd;\", \"\\u2567\": \"&boxHu;\", \"\\u255D\": \"&boxUL;\", \"\\u255A\": \"&boxUR;\", \"\\u255C\": \"&boxUl;\", \"\\u2559\": \"&boxUr;\", \"\\u2551\": \"&boxV;\", \"\\u256C\": \"&boxVH;\", \"\\u2563\": \"&boxVL;\", \"\\u2560\": \"&boxVR;\", \"\\u256B\": \"&boxVh;\", \"\\u2562\": \"&boxVl;\", \"\\u255F\": \"&boxVr;\", \"\\u29C9\": \"&boxbox;\", \"\\u2555\": \"&boxdL;\", \"\\u2552\": \"&boxdR;\", \"\\u2510\": \"&boxdl;\", \"\\u250C\": \"&boxdr;\", \"\\u2565\": \"&boxhD;\", \"\\u2568\": \"&boxhU;\", \"\\u252C\": \"&boxhd;\", \"\\u2534\": \"&boxhu;\", \"\\u229F\": \"&minusb;\", \"\\u229E\": \"&plusb;\", \"\\u22A0\": \"&timesb;\", \"\\u255B\": \"&boxuL;\", \"\\u2558\": \"&boxuR;\", \"\\u2518\": \"&boxul;\", \"\\u2514\": \"&boxur;\", \"\\u2502\": \"&boxv;\", \"\\u256A\": \"&boxvH;\", \"\\u2561\": \"&boxvL;\", \"\\u255E\": \"&boxvR;\", \"\\u253C\": \"&boxvh;\", \"\\u2524\": \"&boxvl;\", \"\\u251C\": \"&boxvr;\", \"\\xA6\": \"&brvbar;\", \"\\u{1D4B7}\": \"&bscr;\", \"\\u204F\": \"&bsemi;\", \"\\\\\": \"&bsol;\", \"\\u29C5\": \"&bsolb;\", \"\\u27C8\": \"&bsolhsub;\", \"\\u2022\": \"&bullet;\", \"\\u2AAE\": \"&bumpE;\", \"\\u0107\": \"&cacute;\", \"\\u2229\": \"&cap;\", \"\\u2A44\": \"&capand;\", \"\\u2A49\": \"&capbrcup;\", \"\\u2A4B\": \"&capcap;\", \"\\u2A47\": \"&capcup;\", \"\\u2A40\": \"&capdot;\", \"\\u2229\\uFE00\": \"&caps;\", \"\\u2041\": \"&caret;\", \"\\u2A4D\": \"&ccaps;\", \"\\u010D\": \"&ccaron;\", \"\\xE7\": \"&ccedil;\", \"\\u0109\": \"&ccirc;\", \"\\u2A4C\": \"&ccups;\", \"\\u2A50\": \"&ccupssm;\", \"\\u010B\": \"&cdot;\", \"\\u29B2\": \"&cemptyv;\", \"\\xA2\": \"&cent;\", \"\\u{1D520}\": \"&cfr;\", \"\\u0447\": \"&chcy;\", \"\\u2713\": \"&checkmark;\", \"\\u03C7\": \"&chi;\", \"\\u25CB\": \"&cir;\", \"\\u29C3\": \"&cirE;\", \"\\u02C6\": \"&circ;\", \"\\u2257\": \"&cire;\", \"\\u21BA\": \"&olarr;\", \"\\u21BB\": \"&orarr;\", \"\\u24C8\": \"&oS;\", \"\\u229B\": \"&oast;\", \"\\u229A\": \"&ocir;\", \"\\u229D\": \"&odash;\", \"\\u2A10\": \"&cirfnint;\", \"\\u2AEF\": \"&cirmid;\", \"\\u29C2\": \"&cirscir;\", \"\\u2663\": \"&clubsuit;\", \":\": \"&colon;\", \",\": \"&comma;\", \"@\": \"&commat;\", \"\\u2201\": \"&complement;\", \"\\u2A6D\": \"&congdot;\", \"\\u{1D554}\": \"&copf;\", \"\\u2117\": \"&copysr;\", \"\\u21B5\": \"&crarr;\", \"\\u2717\": \"&cross;\", \"\\u{1D4B8}\": \"&cscr;\", \"\\u2ACF\": \"&csub;\", \"\\u2AD1\": \"&csube;\", \"\\u2AD0\": \"&csup;\", \"\\u2AD2\": \"&csupe;\", \"\\u22EF\": \"&ctdot;\", \"\\u2938\": \"&cudarrl;\", \"\\u2935\": \"&cudarrr;\", \"\\u22DE\": \"&curlyeqprec;\", \"\\u22DF\": \"&curlyeqsucc;\", \"\\u21B6\": \"&curvearrowleft;\", \"\\u293D\": \"&cularrp;\", \"\\u222A\": \"&cup;\", \"\\u2A48\": \"&cupbrcap;\", \"\\u2A46\": \"&cupcap;\", \"\\u2A4A\": \"&cupcup;\", \"\\u228D\": \"&cupdot;\", \"\\u2A45\": \"&cupor;\", \"\\u222A\\uFE00\": \"&cups;\", \"\\u21B7\": \"&curvearrowright;\", \"\\u293C\": \"&curarrm;\", \"\\u22CE\": \"&cuvee;\", \"\\u22CF\": \"&cuwed;\", \"\\xA4\": \"&curren;\", \"\\u2231\": \"&cwint;\", \"\\u232D\": \"&cylcty;\", \"\\u2965\": \"&dHar;\", \"\\u2020\": \"&dagger;\", \"\\u2138\": \"&daleth;\", \"\\u2010\": \"&hyphen;\", \"\\u290F\": \"&rBarr;\", \"\\u010F\": \"&dcaron;\", \"\\u0434\": \"&dcy;\", \"\\u21CA\": \"&downdownarrows;\", \"\\u2A77\": \"&eDDot;\", \"\\xB0\": \"&deg;\", \"\\u03B4\": \"&delta;\", \"\\u29B1\": \"&demptyv;\", \"\\u297F\": \"&dfisht;\", \"\\u{1D521}\": \"&dfr;\", \"\\u2666\": \"&diams;\", \"\\u03DD\": \"&gammad;\", \"\\u22F2\": \"&disin;\", \"\\xF7\": \"&divide;\", \"\\u22C7\": \"&divonx;\", \"\\u0452\": \"&djcy;\", \"\\u231E\": \"&llcorner;\", \"\\u230D\": \"&dlcrop;\", $: \"&dollar;\", \"\\u{1D555}\": \"&dopf;\", \"\\u2251\": \"&eDot;\", \"\\u2238\": \"&minusd;\", \"\\u2214\": \"&plusdo;\", \"\\u22A1\": \"&sdotb;\", \"\\u231F\": \"&lrcorner;\", \"\\u230C\": \"&drcrop;\", \"\\u{1D4B9}\": \"&dscr;\", \"\\u0455\": \"&dscy;\", \"\\u29F6\": \"&dsol;\", \"\\u0111\": \"&dstrok;\", \"\\u22F1\": \"&dtdot;\", \"\\u25BF\": \"&triangledown;\", \"\\u29A6\": \"&dwangle;\", \"\\u045F\": \"&dzcy;\", \"\\u27FF\": \"&dzigrarr;\", \"\\xE9\": \"&eacute;\", \"\\u2A6E\": \"&easter;\", \"\\u011B\": \"&ecaron;\", \"\\u2256\": \"&eqcirc;\", \"\\xEA\": \"&ecirc;\", \"\\u2255\": \"&eqcolon;\", \"\\u044D\": \"&ecy;\", \"\\u0117\": \"&edot;\", \"\\u2252\": \"&fallingdotseq;\", \"\\u{1D522}\": \"&efr;\", \"\\u2A9A\": \"&eg;\", \"\\xE8\": \"&egrave;\", \"\\u2A96\": \"&eqslantgtr;\", \"\\u2A98\": \"&egsdot;\", \"\\u2A99\": \"&el;\", \"\\u23E7\": \"&elinters;\", \"\\u2113\": \"&ell;\", \"\\u2A95\": \"&eqslantless;\", \"\\u2A97\": \"&elsdot;\", \"\\u0113\": \"&emacr;\", \"\\u2205\": \"&varnothing;\", \"\\u2004\": \"&emsp13;\", \"\\u2005\": \"&emsp14;\", \"\\u2003\": \"&emsp;\", \"\\u014B\": \"&eng;\", \"\\u2002\": \"&ensp;\", \"\\u0119\": \"&eogon;\", \"\\u{1D556}\": \"&eopf;\", \"\\u22D5\": \"&epar;\", \"\\u29E3\": \"&eparsl;\", \"\\u2A71\": \"&eplus;\", \"\\u03B5\": \"&epsilon;\", \"\\u03F5\": \"&varepsilon;\", \"=\": \"&equals;\", \"\\u225F\": \"&questeq;\", \"\\u2A78\": \"&equivDD;\", \"\\u29E5\": \"&eqvparsl;\", \"\\u2253\": \"&risingdotseq;\", \"\\u2971\": \"&erarr;\", \"\\u212F\": \"&escr;\", \"\\u03B7\": \"&eta;\", \"\\xF0\": \"&eth;\", \"\\xEB\": \"&euml;\", \"\\u20AC\": \"&euro;\", \"!\": \"&excl;\", \"\\u0444\": \"&fcy;\", \"\\u2640\": \"&female;\", \"\\uFB03\": \"&ffilig;\", \"\\uFB00\": \"&fflig;\", \"\\uFB04\": \"&ffllig;\", \"\\u{1D523}\": \"&ffr;\", \"\\uFB01\": \"&filig;\", fj: \"&fjlig;\", \"\\u266D\": \"&flat;\", \"\\uFB02\": \"&fllig;\", \"\\u25B1\": \"&fltns;\", \"\\u0192\": \"&fnof;\", \"\\u{1D557}\": \"&fopf;\", \"\\u22D4\": \"&pitchfork;\", \"\\u2AD9\": \"&forkv;\", \"\\u2A0D\": \"&fpartint;\", \"\\xBD\": \"&half;\", \"\\u2153\": \"&frac13;\", \"\\xBC\": \"&frac14;\", \"\\u2155\": \"&frac15;\", \"\\u2159\": \"&frac16;\", \"\\u215B\": \"&frac18;\", \"\\u2154\": \"&frac23;\", \"\\u2156\": \"&frac25;\", \"\\xBE\": \"&frac34;\", \"\\u2157\": \"&frac35;\", \"\\u215C\": \"&frac38;\", \"\\u2158\": \"&frac45;\", \"\\u215A\": \"&frac56;\", \"\\u215D\": \"&frac58;\", \"\\u215E\": \"&frac78;\", \"\\u2044\": \"&frasl;\", \"\\u2322\": \"&sfrown;\", \"\\u{1D4BB}\": \"&fscr;\", \"\\u2A8C\": \"&gtreqqless;\", \"\\u01F5\": \"&gacute;\", \"\\u03B3\": \"&gamma;\", \"\\u2A86\": \"&gtrapprox;\", \"\\u011F\": \"&gbreve;\", \"\\u011D\": \"&gcirc;\", \"\\u0433\": \"&gcy;\", \"\\u0121\": \"&gdot;\", \"\\u2AA9\": \"&gescc;\", \"\\u2A80\": \"&gesdot;\", \"\\u2A82\": \"&gesdoto;\", \"\\u2A84\": \"&gesdotol;\", \"\\u22DB\\uFE00\": \"&gesl;\", \"\\u2A94\": \"&gesles;\", \"\\u{1D524}\": \"&gfr;\", \"\\u2137\": \"&gimel;\", \"\\u0453\": \"&gjcy;\", \"\\u2A92\": \"&glE;\", \"\\u2AA5\": \"&gla;\", \"\\u2AA4\": \"&glj;\", \"\\u2269\": \"&gneqq;\", \"\\u2A8A\": \"&gnapprox;\", \"\\u2A88\": \"&gneq;\", \"\\u22E7\": \"&gnsim;\", \"\\u{1D558}\": \"&gopf;\", \"\\u210A\": \"&gscr;\", \"\\u2A8E\": \"&gsime;\", \"\\u2A90\": \"&gsiml;\", \"\\u2AA7\": \"&gtcc;\", \"\\u2A7A\": \"&gtcir;\", \"\\u22D7\": \"&gtrdot;\", \"\\u2995\": \"&gtlPar;\", \"\\u2A7C\": \"&gtquest;\", \"\\u2978\": \"&gtrarr;\", \"\\u2269\\uFE00\": \"&gvnE;\", \"\\u044A\": \"&hardcy;\", \"\\u2948\": \"&harrcir;\", \"\\u21AD\": \"&leftrightsquigarrow;\", \"\\u210F\": \"&plankv;\", \"\\u0125\": \"&hcirc;\", \"\\u2665\": \"&heartsuit;\", \"\\u2026\": \"&mldr;\", \"\\u22B9\": \"&hercon;\", \"\\u{1D525}\": \"&hfr;\", \"\\u2925\": \"&searhk;\", \"\\u2926\": \"&swarhk;\", \"\\u21FF\": \"&hoarr;\", \"\\u223B\": \"&homtht;\", \"\\u21A9\": \"&larrhk;\", \"\\u21AA\": \"&rarrhk;\", \"\\u{1D559}\": \"&hopf;\", \"\\u2015\": \"&horbar;\", \"\\u{1D4BD}\": \"&hscr;\", \"\\u0127\": \"&hstrok;\", \"\\u2043\": \"&hybull;\", \"\\xED\": \"&iacute;\", \"\\xEE\": \"&icirc;\", \"\\u0438\": \"&icy;\", \"\\u0435\": \"&iecy;\", \"\\xA1\": \"&iexcl;\", \"\\u{1D526}\": \"&ifr;\", \"\\xEC\": \"&igrave;\", \"\\u2A0C\": \"&qint;\", \"\\u222D\": \"&tint;\", \"\\u29DC\": \"&iinfin;\", \"\\u2129\": \"&iiota;\", \"\\u0133\": \"&ijlig;\", \"\\u012B\": \"&imacr;\", \"\\u0131\": \"&inodot;\", \"\\u22B7\": \"&imof;\", \"\\u01B5\": \"&imped;\", \"\\u2105\": \"&incare;\", \"\\u221E\": \"&infin;\", \"\\u29DD\": \"&infintie;\", \"\\u22BA\": \"&intercal;\", \"\\u2A17\": \"&intlarhk;\", \"\\u2A3C\": \"&iprod;\", \"\\u0451\": \"&iocy;\", \"\\u012F\": \"&iogon;\", \"\\u{1D55A}\": \"&iopf;\", \"\\u03B9\": \"&iota;\", \"\\xBF\": \"&iquest;\", \"\\u{1D4BE}\": \"&iscr;\", \"\\u22F9\": \"&isinE;\", \"\\u22F5\": \"&isindot;\", \"\\u22F4\": \"&isins;\", \"\\u22F3\": \"&isinsv;\", \"\\u0129\": \"&itilde;\", \"\\u0456\": \"&iukcy;\", \"\\xEF\": \"&iuml;\", \"\\u0135\": \"&jcirc;\", \"\\u0439\": \"&jcy;\", \"\\u{1D527}\": \"&jfr;\", \"\\u0237\": \"&jmath;\", \"\\u{1D55B}\": \"&jopf;\", \"\\u{1D4BF}\": \"&jscr;\", \"\\u0458\": \"&jsercy;\", \"\\u0454\": \"&jukcy;\", \"\\u03BA\": \"&kappa;\", \"\\u03F0\": \"&varkappa;\", \"\\u0137\": \"&kcedil;\", \"\\u043A\": \"&kcy;\", \"\\u{1D528}\": \"&kfr;\", \"\\u0138\": \"&kgreen;\", \"\\u0445\": \"&khcy;\", \"\\u045C\": \"&kjcy;\", \"\\u{1D55C}\": \"&kopf;\", \"\\u{1D4C0}\": \"&kscr;\", \"\\u291B\": \"&lAtail;\", \"\\u290E\": \"&lBarr;\", \"\\u2A8B\": \"&lesseqqgtr;\", \"\\u2962\": \"&lHar;\", \"\\u013A\": \"&lacute;\", \"\\u29B4\": \"&laemptyv;\", \"\\u03BB\": \"&lambda;\", \"\\u2991\": \"&langd;\", \"\\u2A85\": \"&lessapprox;\", \"\\xAB\": \"&laquo;\", \"\\u291F\": \"&larrbfs;\", \"\\u291D\": \"&larrfs;\", \"\\u21AB\": \"&looparrowleft;\", \"\\u2939\": \"&larrpl;\", \"\\u2973\": \"&larrsim;\", \"\\u21A2\": \"&leftarrowtail;\", \"\\u2AAB\": \"&lat;\", \"\\u2919\": \"&latail;\", \"\\u2AAD\": \"&late;\", \"\\u2AAD\\uFE00\": \"&lates;\", \"\\u290C\": \"&lbarr;\", \"\\u2772\": \"&lbbrk;\", \"{\": \"&lcub;\", \"[\": \"&lsqb;\", \"\\u298B\": \"&lbrke;\", \"\\u298F\": \"&lbrksld;\", \"\\u298D\": \"&lbrkslu;\", \"\\u013E\": \"&lcaron;\", \"\\u013C\": \"&lcedil;\", \"\\u043B\": \"&lcy;\", \"\\u2936\": \"&ldca;\", \"\\u2967\": \"&ldrdhar;\", \"\\u294B\": \"&ldrushar;\", \"\\u21B2\": \"&ldsh;\", \"\\u2264\": \"&leq;\", \"\\u21C7\": \"&llarr;\", \"\\u22CB\": \"&lthree;\", \"\\u2AA8\": \"&lescc;\", \"\\u2A7F\": \"&lesdot;\", \"\\u2A81\": \"&lesdoto;\", \"\\u2A83\": \"&lesdotor;\", \"\\u22DA\\uFE00\": \"&lesg;\", \"\\u2A93\": \"&lesges;\", \"\\u22D6\": \"&ltdot;\", \"\\u297C\": \"&lfisht;\", \"\\u{1D529}\": \"&lfr;\", \"\\u2A91\": \"&lgE;\", \"\\u296A\": \"&lharul;\", \"\\u2584\": \"&lhblk;\", \"\\u0459\": \"&ljcy;\", \"\\u296B\": \"&llhard;\", \"\\u25FA\": \"&lltri;\", \"\\u0140\": \"&lmidot;\", \"\\u23B0\": \"&lmoustache;\", \"\\u2268\": \"&lneqq;\", \"\\u2A89\": \"&lnapprox;\", \"\\u2A87\": \"&lneq;\", \"\\u22E6\": \"&lnsim;\", \"\\u27EC\": \"&loang;\", \"\\u21FD\": \"&loarr;\", \"\\u27FC\": \"&xmap;\", \"\\u21AC\": \"&rarrlp;\", \"\\u2985\": \"&lopar;\", \"\\u{1D55D}\": \"&lopf;\", \"\\u2A2D\": \"&loplus;\", \"\\u2A34\": \"&lotimes;\", \"\\u2217\": \"&lowast;\", \"\\u25CA\": \"&lozenge;\", \"(\": \"&lpar;\", \"\\u2993\": \"&lparlt;\", \"\\u296D\": \"&lrhard;\", \"\\u200E\": \"&lrm;\", \"\\u22BF\": \"&lrtri;\", \"\\u2039\": \"&lsaquo;\", \"\\u{1D4C1}\": \"&lscr;\", \"\\u2A8D\": \"&lsime;\", \"\\u2A8F\": \"&lsimg;\", \"\\u201A\": \"&sbquo;\", \"\\u0142\": \"&lstrok;\", \"\\u2AA6\": \"&ltcc;\", \"\\u2A79\": \"&ltcir;\", \"\\u22C9\": \"&ltimes;\", \"\\u2976\": \"&ltlarr;\", \"\\u2A7B\": \"&ltquest;\", \"\\u2996\": \"&ltrPar;\", \"\\u25C3\": \"&triangleleft;\", \"\\u294A\": \"&lurdshar;\", \"\\u2966\": \"&luruhar;\", \"\\u2268\\uFE00\": \"&lvnE;\", \"\\u223A\": \"&mDDot;\", \"\\xAF\": \"&strns;\", \"\\u2642\": \"&male;\", \"\\u2720\": \"&maltese;\", \"\\u25AE\": \"&marker;\", \"\\u2A29\": \"&mcomma;\", \"\\u043C\": \"&mcy;\", \"\\u2014\": \"&mdash;\", \"\\u{1D52A}\": \"&mfr;\", \"\\u2127\": \"&mho;\", \"\\xB5\": \"&micro;\", \"\\u2AF0\": \"&midcir;\", \"\\u2212\": \"&minus;\", \"\\u2A2A\": \"&minusdu;\", \"\\u2ADB\": \"&mlcp;\", \"\\u22A7\": \"&models;\", \"\\u{1D55E}\": \"&mopf;\", \"\\u{1D4C2}\": \"&mscr;\", \"\\u03BC\": \"&mu;\", \"\\u22B8\": \"&mumap;\", \"\\u22D9\\u0338\": \"&nGg;\", \"\\u226B\\u20D2\": \"&nGt;\", \"\\u21CD\": \"&nlArr;\", \"\\u21CE\": \"&nhArr;\", \"\\u22D8\\u0338\": \"&nLl;\", \"\\u226A\\u20D2\": \"&nLt;\", \"\\u21CF\": \"&nrArr;\", \"\\u22AF\": \"&nVDash;\", \"\\u22AE\": \"&nVdash;\", \"\\u0144\": \"&nacute;\", \"\\u2220\\u20D2\": \"&nang;\", \"\\u2A70\\u0338\": \"&napE;\", \"\\u224B\\u0338\": \"&napid;\", \"\\u0149\": \"&napos;\", \"\\u266E\": \"&natural;\", \"\\u2A43\": \"&ncap;\", \"\\u0148\": \"&ncaron;\", \"\\u0146\": \"&ncedil;\", \"\\u2A6D\\u0338\": \"&ncongdot;\", \"\\u2A42\": \"&ncup;\", \"\\u043D\": \"&ncy;\", \"\\u2013\": \"&ndash;\", \"\\u21D7\": \"&neArr;\", \"\\u2924\": \"&nearhk;\", \"\\u2250\\u0338\": \"&nedot;\", \"\\u2928\": \"&toea;\", \"\\u{1D52B}\": \"&nfr;\", \"\\u21AE\": \"&nleftrightarrow;\", \"\\u2AF2\": \"&nhpar;\", \"\\u22FC\": \"&nis;\", \"\\u22FA\": \"&nisd;\", \"\\u045A\": \"&njcy;\", \"\\u2266\\u0338\": \"&nleqq;\", \"\\u219A\": \"&nleftarrow;\", \"\\u2025\": \"&nldr;\", \"\\u{1D55F}\": \"&nopf;\", \"\\xAC\": \"&not;\", \"\\u22F9\\u0338\": \"&notinE;\", \"\\u22F5\\u0338\": \"&notindot;\", \"\\u22F7\": \"&notinvb;\", \"\\u22F6\": \"&notinvc;\", \"\\u22FE\": \"&notnivb;\", \"\\u22FD\": \"&notnivc;\", \"\\u2AFD\\u20E5\": \"&nparsl;\", \"\\u2202\\u0338\": \"&npart;\", \"\\u2A14\": \"&npolint;\", \"\\u219B\": \"&nrightarrow;\", \"\\u2933\\u0338\": \"&nrarrc;\", \"\\u219D\\u0338\": \"&nrarrw;\", \"\\u{1D4C3}\": \"&nscr;\", \"\\u2284\": \"&nsub;\", \"\\u2AC5\\u0338\": \"&nsubseteqq;\", \"\\u2285\": \"&nsup;\", \"\\u2AC6\\u0338\": \"&nsupseteqq;\", \"\\xF1\": \"&ntilde;\", \"\\u03BD\": \"&nu;\", \"#\": \"&num;\", \"\\u2116\": \"&numero;\", \"\\u2007\": \"&numsp;\", \"\\u22AD\": \"&nvDash;\", \"\\u2904\": \"&nvHarr;\", \"\\u224D\\u20D2\": \"&nvap;\", \"\\u22AC\": \"&nvdash;\", \"\\u2265\\u20D2\": \"&nvge;\", \">\\u20D2\": \"&nvgt;\", \"\\u29DE\": \"&nvinfin;\", \"\\u2902\": \"&nvlArr;\", \"\\u2264\\u20D2\": \"&nvle;\", \"<\\u20D2\": \"&nvlt;\", \"\\u22B4\\u20D2\": \"&nvltrie;\", \"\\u2903\": \"&nvrArr;\", \"\\u22B5\\u20D2\": \"&nvrtrie;\", \"\\u223C\\u20D2\": \"&nvsim;\", \"\\u21D6\": \"&nwArr;\", \"\\u2923\": \"&nwarhk;\", \"\\u2927\": \"&nwnear;\", \"\\xF3\": \"&oacute;\", \"\\xF4\": \"&ocirc;\", \"\\u043E\": \"&ocy;\", \"\\u0151\": \"&odblac;\", \"\\u2A38\": \"&odiv;\", \"\\u29BC\": \"&odsold;\", \"\\u0153\": \"&oelig;\", \"\\u29BF\": \"&ofcir;\", \"\\u{1D52C}\": \"&ofr;\", \"\\u02DB\": \"&ogon;\", \"\\xF2\": \"&ograve;\", \"\\u29C1\": \"&ogt;\", \"\\u29B5\": \"&ohbar;\", \"\\u29BE\": \"&olcir;\", \"\\u29BB\": \"&olcross;\", \"\\u29C0\": \"&olt;\", \"\\u014D\": \"&omacr;\", \"\\u03C9\": \"&omega;\", \"\\u03BF\": \"&omicron;\", \"\\u29B6\": \"&omid;\", \"\\u{1D560}\": \"&oopf;\", \"\\u29B7\": \"&opar;\", \"\\u29B9\": \"&operp;\", \"\\u2228\": \"&vee;\", \"\\u2A5D\": \"&ord;\", \"\\u2134\": \"&oscr;\", \"\\xAA\": \"&ordf;\", \"\\xBA\": \"&ordm;\", \"\\u22B6\": \"&origof;\", \"\\u2A56\": \"&oror;\", \"\\u2A57\": \"&orslope;\", \"\\u2A5B\": \"&orv;\", \"\\xF8\": \"&oslash;\", \"\\u2298\": \"&osol;\", \"\\xF5\": \"&otilde;\", \"\\u2A36\": \"&otimesas;\", \"\\xF6\": \"&ouml;\", \"\\u233D\": \"&ovbar;\", \"\\xB6\": \"&para;\", \"\\u2AF3\": \"&parsim;\", \"\\u2AFD\": \"&parsl;\", \"\\u043F\": \"&pcy;\", \"%\": \"&percnt;\", \".\": \"&period;\", \"\\u2030\": \"&permil;\", \"\\u2031\": \"&pertenk;\", \"\\u{1D52D}\": \"&pfr;\", \"\\u03C6\": \"&phi;\", \"\\u03D5\": \"&varphi;\", \"\\u260E\": \"&phone;\", \"\\u03C0\": \"&pi;\", \"\\u03D6\": \"&varpi;\", \"\\u210E\": \"&planckh;\", \"+\": \"&plus;\", \"\\u2A23\": \"&plusacir;\", \"\\u2A22\": \"&pluscir;\", \"\\u2A25\": \"&plusdu;\", \"\\u2A72\": \"&pluse;\", \"\\u2A26\": \"&plussim;\", \"\\u2A27\": \"&plustwo;\", \"\\u2A15\": \"&pointint;\", \"\\u{1D561}\": \"&popf;\", \"\\xA3\": \"&pound;\", \"\\u2AB3\": \"&prE;\", \"\\u2AB7\": \"&precapprox;\", \"\\u2AB9\": \"&prnap;\", \"\\u2AB5\": \"&prnE;\", \"\\u22E8\": \"&prnsim;\", \"\\u2032\": \"&prime;\", \"\\u232E\": \"&profalar;\", \"\\u2312\": \"&profline;\", \"\\u2313\": \"&profsurf;\", \"\\u22B0\": \"&prurel;\", \"\\u{1D4C5}\": \"&pscr;\", \"\\u03C8\": \"&psi;\", \"\\u2008\": \"&puncsp;\", \"\\u{1D52E}\": \"&qfr;\", \"\\u{1D562}\": \"&qopf;\", \"\\u2057\": \"&qprime;\", \"\\u{1D4C6}\": \"&qscr;\", \"\\u2A16\": \"&quatint;\", \"?\": \"&quest;\", \"\\u291C\": \"&rAtail;\", \"\\u2964\": \"&rHar;\", \"\\u223D\\u0331\": \"&race;\", \"\\u0155\": \"&racute;\", \"\\u29B3\": \"&raemptyv;\", \"\\u2992\": \"&rangd;\", \"\\u29A5\": \"&range;\", \"\\xBB\": \"&raquo;\", \"\\u2975\": \"&rarrap;\", \"\\u2920\": \"&rarrbfs;\", \"\\u2933\": \"&rarrc;\", \"\\u291E\": \"&rarrfs;\", \"\\u2945\": \"&rarrpl;\", \"\\u2974\": \"&rarrsim;\", \"\\u21A3\": \"&rightarrowtail;\", \"\\u219D\": \"&rightsquigarrow;\", \"\\u291A\": \"&ratail;\", \"\\u2236\": \"&ratio;\", \"\\u2773\": \"&rbbrk;\", \"}\": \"&rcub;\", \"]\": \"&rsqb;\", \"\\u298C\": \"&rbrke;\", \"\\u298E\": \"&rbrksld;\", \"\\u2990\": \"&rbrkslu;\", \"\\u0159\": \"&rcaron;\", \"\\u0157\": \"&rcedil;\", \"\\u0440\": \"&rcy;\", \"\\u2937\": \"&rdca;\", \"\\u2969\": \"&rdldhar;\", \"\\u21B3\": \"&rdsh;\", \"\\u25AD\": \"&rect;\", \"\\u297D\": \"&rfisht;\", \"\\u{1D52F}\": \"&rfr;\", \"\\u296C\": \"&rharul;\", \"\\u03C1\": \"&rho;\", \"\\u03F1\": \"&varrho;\", \"\\u21C9\": \"&rrarr;\", \"\\u22CC\": \"&rthree;\", \"\\u02DA\": \"&ring;\", \"\\u200F\": \"&rlm;\", \"\\u23B1\": \"&rmoustache;\", \"\\u2AEE\": \"&rnmid;\", \"\\u27ED\": \"&roang;\", \"\\u21FE\": \"&roarr;\", \"\\u2986\": \"&ropar;\", \"\\u{1D563}\": \"&ropf;\", \"\\u2A2E\": \"&roplus;\", \"\\u2A35\": \"&rotimes;\", \")\": \"&rpar;\", \"\\u2994\": \"&rpargt;\", \"\\u2A12\": \"&rppolint;\", \"\\u203A\": \"&rsaquo;\", \"\\u{1D4C7}\": \"&rscr;\", \"\\u22CA\": \"&rtimes;\", \"\\u25B9\": \"&triangleright;\", \"\\u29CE\": \"&rtriltri;\", \"\\u2968\": \"&ruluhar;\", \"\\u211E\": \"&rx;\", \"\\u015B\": \"&sacute;\", \"\\u2AB4\": \"&scE;\", \"\\u2AB8\": \"&succapprox;\", \"\\u0161\": \"&scaron;\", \"\\u015F\": \"&scedil;\", \"\\u015D\": \"&scirc;\", \"\\u2AB6\": \"&succneqq;\", \"\\u2ABA\": \"&succnapprox;\", \"\\u22E9\": \"&succnsim;\", \"\\u2A13\": \"&scpolint;\", \"\\u0441\": \"&scy;\", \"\\u22C5\": \"&sdot;\", \"\\u2A66\": \"&sdote;\", \"\\u21D8\": \"&seArr;\", \"\\xA7\": \"&sect;\", \";\": \"&semi;\", \"\\u2929\": \"&tosa;\", \"\\u2736\": \"&sext;\", \"\\u{1D530}\": \"&sfr;\", \"\\u266F\": \"&sharp;\", \"\\u0449\": \"&shchcy;\", \"\\u0448\": \"&shcy;\", \"\\xAD\": \"&shy;\", \"\\u03C3\": \"&sigma;\", \"\\u03C2\": \"&varsigma;\", \"\\u2A6A\": \"&simdot;\", \"\\u2A9E\": \"&simg;\", \"\\u2AA0\": \"&simgE;\", \"\\u2A9D\": \"&siml;\", \"\\u2A9F\": \"&simlE;\", \"\\u2246\": \"&simne;\", \"\\u2A24\": \"&simplus;\", \"\\u2972\": \"&simrarr;\", \"\\u2A33\": \"&smashp;\", \"\\u29E4\": \"&smeparsl;\", \"\\u2323\": \"&ssmile;\", \"\\u2AAA\": \"&smt;\", \"\\u2AAC\": \"&smte;\", \"\\u2AAC\\uFE00\": \"&smtes;\", \"\\u044C\": \"&softcy;\", \"/\": \"&sol;\", \"\\u29C4\": \"&solb;\", \"\\u233F\": \"&solbar;\", \"\\u{1D564}\": \"&sopf;\", \"\\u2660\": \"&spadesuit;\", \"\\u2293\\uFE00\": \"&sqcaps;\", \"\\u2294\\uFE00\": \"&sqcups;\", \"\\u{1D4C8}\": \"&sscr;\", \"\\u2606\": \"&star;\", \"\\u2282\": \"&subset;\", \"\\u2AC5\": \"&subseteqq;\", \"\\u2ABD\": \"&subdot;\", \"\\u2AC3\": \"&subedot;\", \"\\u2AC1\": \"&submult;\", \"\\u2ACB\": \"&subsetneqq;\", \"\\u228A\": \"&subsetneq;\", \"\\u2ABF\": \"&subplus;\", \"\\u2979\": \"&subrarr;\", \"\\u2AC7\": \"&subsim;\", \"\\u2AD5\": \"&subsub;\", \"\\u2AD3\": \"&subsup;\", \"\\u266A\": \"&sung;\", \"\\xB9\": \"&sup1;\", \"\\xB2\": \"&sup2;\", \"\\xB3\": \"&sup3;\", \"\\u2AC6\": \"&supseteqq;\", \"\\u2ABE\": \"&supdot;\", \"\\u2AD8\": \"&supdsub;\", \"\\u2AC4\": \"&supedot;\", \"\\u27C9\": \"&suphsol;\", \"\\u2AD7\": \"&suphsub;\", \"\\u297B\": \"&suplarr;\", \"\\u2AC2\": \"&supmult;\", \"\\u2ACC\": \"&supsetneqq;\", \"\\u228B\": \"&supsetneq;\", \"\\u2AC0\": \"&supplus;\", \"\\u2AC8\": \"&supsim;\", \"\\u2AD4\": \"&supsub;\", \"\\u2AD6\": \"&supsup;\", \"\\u21D9\": \"&swArr;\", \"\\u292A\": \"&swnwar;\", \"\\xDF\": \"&szlig;\", \"\\u2316\": \"&target;\", \"\\u03C4\": \"&tau;\", \"\\u0165\": \"&tcaron;\", \"\\u0163\": \"&tcedil;\", \"\\u0442\": \"&tcy;\", \"\\u2315\": \"&telrec;\", \"\\u{1D531}\": \"&tfr;\", \"\\u03B8\": \"&theta;\", \"\\u03D1\": \"&vartheta;\", \"\\xFE\": \"&thorn;\", \"\\xD7\": \"&times;\", \"\\u2A31\": \"&timesbar;\", \"\\u2A30\": \"&timesd;\", \"\\u2336\": \"&topbot;\", \"\\u2AF1\": \"&topcir;\", \"\\u{1D565}\": \"&topf;\", \"\\u2ADA\": \"&topfork;\", \"\\u2034\": \"&tprime;\", \"\\u25B5\": \"&utri;\", \"\\u225C\": \"&trie;\", \"\\u25EC\": \"&tridot;\", \"\\u2A3A\": \"&triminus;\", \"\\u2A39\": \"&triplus;\", \"\\u29CD\": \"&trisb;\", \"\\u2A3B\": \"&tritime;\", \"\\u23E2\": \"&trpezium;\", \"\\u{1D4C9}\": \"&tscr;\", \"\\u0446\": \"&tscy;\", \"\\u045B\": \"&tshcy;\", \"\\u0167\": \"&tstrok;\", \"\\u2963\": \"&uHar;\", \"\\xFA\": \"&uacute;\", \"\\u045E\": \"&ubrcy;\", \"\\u016D\": \"&ubreve;\", \"\\xFB\": \"&ucirc;\", \"\\u0443\": \"&ucy;\", \"\\u0171\": \"&udblac;\", \"\\u297E\": \"&ufisht;\", \"\\u{1D532}\": \"&ufr;\", \"\\xF9\": \"&ugrave;\", \"\\u2580\": \"&uhblk;\", \"\\u231C\": \"&ulcorner;\", \"\\u230F\": \"&ulcrop;\", \"\\u25F8\": \"&ultri;\", \"\\u016B\": \"&umacr;\", \"\\u0173\": \"&uogon;\", \"\\u{1D566}\": \"&uopf;\", \"\\u03C5\": \"&upsilon;\", \"\\u21C8\": \"&uuarr;\", \"\\u231D\": \"&urcorner;\", \"\\u230E\": \"&urcrop;\", \"\\u016F\": \"&uring;\", \"\\u25F9\": \"&urtri;\", \"\\u{1D4CA}\": \"&uscr;\", \"\\u22F0\": \"&utdot;\", \"\\u0169\": \"&utilde;\", \"\\xFC\": \"&uuml;\", \"\\u29A7\": \"&uwangle;\", \"\\u2AE8\": \"&vBar;\", \"\\u2AE9\": \"&vBarv;\", \"\\u299C\": \"&vangrt;\", \"\\u228A\\uFE00\": \"&vsubne;\", \"\\u2ACB\\uFE00\": \"&vsubnE;\", \"\\u228B\\uFE00\": \"&vsupne;\", \"\\u2ACC\\uFE00\": \"&vsupnE;\", \"\\u0432\": \"&vcy;\", \"\\u22BB\": \"&veebar;\", \"\\u225A\": \"&veeeq;\", \"\\u22EE\": \"&vellip;\", \"\\u{1D533}\": \"&vfr;\", \"\\u{1D567}\": \"&vopf;\", \"\\u{1D4CB}\": \"&vscr;\", \"\\u299A\": \"&vzigzag;\", \"\\u0175\": \"&wcirc;\", \"\\u2A5F\": \"&wedbar;\", \"\\u2259\": \"&wedgeq;\", \"\\u2118\": \"&wp;\", \"\\u{1D534}\": \"&wfr;\", \"\\u{1D568}\": \"&wopf;\", \"\\u{1D4CC}\": \"&wscr;\", \"\\u{1D535}\": \"&xfr;\", \"\\u03BE\": \"&xi;\", \"\\u22FB\": \"&xnis;\", \"\\u{1D569}\": \"&xopf;\", \"\\u{1D4CD}\": \"&xscr;\", \"\\xFD\": \"&yacute;\", \"\\u044F\": \"&yacy;\", \"\\u0177\": \"&ycirc;\", \"\\u044B\": \"&ycy;\", \"\\xA5\": \"&yen;\", \"\\u{1D536}\": \"&yfr;\", \"\\u0457\": \"&yicy;\", \"\\u{1D56A}\": \"&yopf;\", \"\\u{1D4CE}\": \"&yscr;\", \"\\u044E\": \"&yucy;\", \"\\xFF\": \"&yuml;\", \"\\u017A\": \"&zacute;\", \"\\u017E\": \"&zcaron;\", \"\\u0437\": \"&zcy;\", \"\\u017C\": \"&zdot;\", \"\\u03B6\": \"&zeta;\", \"\\u{1D537}\": \"&zfr;\", \"\\u0436\": \"&zhcy;\", \"\\u21DD\": \"&zigrarr;\", \"\\u{1D56B}\": \"&zopf;\", \"\\u{1D4CF}\": \"&zscr;\", \"\\u200D\": \"&zwj;\", \"\\u200C\": \"&zwnj;\" } } };\n  }\n});\n\n// ../../node_modules/html-entities/lib/numeric-unicode-map.js\nvar require_numeric_unicode_map = __commonJS({\n  \"../../node_modules/html-entities/lib/numeric-unicode-map.js\"(exports) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    exports.numericUnicodeMap = { 0: 65533, 128: 8364, 130: 8218, 131: 402, 132: 8222, 133: 8230, 134: 8224, 135: 8225, 136: 710, 137: 8240, 138: 352, 139: 8249, 140: 338, 142: 381, 145: 8216, 146: 8217, 147: 8220, 148: 8221, 149: 8226, 150: 8211, 151: 8212, 152: 732, 153: 8482, 154: 353, 155: 8250, 156: 339, 158: 382, 159: 376 };\n  }\n});\n\n// ../../node_modules/html-entities/lib/surrogate-pairs.js\nvar require_surrogate_pairs = __commonJS({\n  \"../../node_modules/html-entities/lib/surrogate-pairs.js\"(exports) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    exports.fromCodePoint = String.fromCodePoint || function(astralCodePoint) {\n      return String.fromCharCode(Math.floor((astralCodePoint - 65536) / 1024) + 55296, (astralCodePoint - 65536) % 1024 + 56320);\n    };\n    exports.getCodePoint = String.prototype.codePointAt ? function(input, position) {\n      return input.codePointAt(position);\n    } : function(input, position) {\n      return (input.charCodeAt(position) - 55296) * 1024 + input.charCodeAt(position + 1) - 56320 + 65536;\n    };\n    exports.highSurrogateFrom = 55296;\n    exports.highSurrogateTo = 56319;\n  }\n});\n\n// ../../node_modules/html-entities/lib/index.js\nvar require_lib = __commonJS({\n  \"../../node_modules/html-entities/lib/index.js\"(exports) {\n    \"use strict\";\n    var __assign = exports && exports.__assign || function() {\n      __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n          s = arguments[i];\n          for (var p in s)\n            if (Object.prototype.hasOwnProperty.call(s, p))\n              t[p] = s[p];\n        }\n        return t;\n      };\n      return __assign.apply(this, arguments);\n    };\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    var named_references_1 = require_named_references();\n    var numeric_unicode_map_1 = require_numeric_unicode_map();\n    var surrogate_pairs_1 = require_surrogate_pairs();\n    var allNamedReferences = __assign(__assign({}, named_references_1.namedReferences), { all: named_references_1.namedReferences.html5 });\n    var encodeRegExps = {\n      specialChars: /[<>'\"&]/g,\n      nonAscii: /(?:[<>'\"&\\u0080-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])/g,\n      nonAsciiPrintable: /(?:[<>'\"&\\x01-\\x08\\x11-\\x15\\x17-\\x1F\\x7f-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])/g,\n      extensive: /(?:[\\x01-\\x0c\\x0e-\\x1f\\x21-\\x2c\\x2e-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\x7d\\x7f-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])/g\n    };\n    var defaultEncodeOptions = {\n      mode: \"specialChars\",\n      level: \"all\",\n      numeric: \"decimal\"\n    };\n    function encode(text, _a) {\n      var _b = _a === void 0 ? defaultEncodeOptions : _a, _c = _b.mode, mode = _c === void 0 ? \"specialChars\" : _c, _d = _b.numeric, numeric = _d === void 0 ? \"decimal\" : _d, _e = _b.level, level = _e === void 0 ? \"all\" : _e;\n      if (!text) {\n        return \"\";\n      }\n      var encodeRegExp = encodeRegExps[mode];\n      var references = allNamedReferences[level].characters;\n      var isHex = numeric === \"hexadecimal\";\n      encodeRegExp.lastIndex = 0;\n      var _b = encodeRegExp.exec(text);\n      var _c;\n      if (_b) {\n        _c = \"\";\n        var _d = 0;\n        do {\n          if (_d !== _b.index) {\n            _c += text.substring(_d, _b.index);\n          }\n          var _e = _b[0];\n          var result_1 = references[_e];\n          if (!result_1) {\n            var code_1 = _e.length > 1 ? surrogate_pairs_1.getCodePoint(_e, 0) : _e.charCodeAt(0);\n            result_1 = (isHex ? \"&#x\" + code_1.toString(16) : \"&#\" + code_1) + \";\";\n          }\n          _c += result_1;\n          _d = _b.index + _e.length;\n        } while (_b = encodeRegExp.exec(text));\n        if (_d !== text.length) {\n          _c += text.substring(_d);\n        }\n      } else {\n        _c = text;\n      }\n      return _c;\n    }\n    exports.encode = encode;\n    var defaultDecodeOptions = {\n      scope: \"body\",\n      level: \"all\"\n    };\n    var strict = /&(?:#\\d+|#[xX][\\da-fA-F]+|[0-9a-zA-Z]+);/g;\n    var attribute = /&(?:#\\d+|#[xX][\\da-fA-F]+|[0-9a-zA-Z]+)[;=]?/g;\n    var baseDecodeRegExps = {\n      xml: {\n        strict,\n        attribute,\n        body: named_references_1.bodyRegExps.xml\n      },\n      html4: {\n        strict,\n        attribute,\n        body: named_references_1.bodyRegExps.html4\n      },\n      html5: {\n        strict,\n        attribute,\n        body: named_references_1.bodyRegExps.html5\n      }\n    };\n    var decodeRegExps = __assign(__assign({}, baseDecodeRegExps), { all: baseDecodeRegExps.html5 });\n    var fromCharCode = String.fromCharCode;\n    var outOfBoundsChar = fromCharCode(65533);\n    var defaultDecodeEntityOptions = {\n      level: \"all\"\n    };\n    function decodeEntity(entity, _a) {\n      var _b = (_a === void 0 ? defaultDecodeEntityOptions : _a).level, level = _b === void 0 ? \"all\" : _b;\n      if (!entity) {\n        return \"\";\n      }\n      var _b = entity;\n      var decodeEntityLastChar_1 = entity[entity.length - 1];\n      if (false) {} else if (false) {} else {\n        var decodeResultByReference_1 = allNamedReferences[level].entities[entity];\n        if (decodeResultByReference_1) {\n          _b = decodeResultByReference_1;\n        } else if (entity[0] === \"&\" && entity[1] === \"#\") {\n          var decodeSecondChar_1 = entity[2];\n          var decodeCode_1 = decodeSecondChar_1 == \"x\" || decodeSecondChar_1 == \"X\" ? parseInt(entity.substr(3), 16) : parseInt(entity.substr(2));\n          _b = decodeCode_1 >= 1114111 ? outOfBoundsChar : decodeCode_1 > 65535 ? surrogate_pairs_1.fromCodePoint(decodeCode_1) : fromCharCode(numeric_unicode_map_1.numericUnicodeMap[decodeCode_1] || decodeCode_1);\n        }\n      }\n      return _b;\n    }\n    exports.decodeEntity = decodeEntity;\n    function decode2(text, _a) {\n      var decodeSecondChar_1 = _a === void 0 ? defaultDecodeOptions : _a, decodeCode_1 = decodeSecondChar_1.level, level = decodeCode_1 === void 0 ? \"all\" : decodeCode_1, _b = decodeSecondChar_1.scope, scope = _b === void 0 ? level === \"xml\" ? \"strict\" : \"body\" : _b;\n      if (!text) {\n        return \"\";\n      }\n      var decodeRegExp = decodeRegExps[level][scope];\n      var references = allNamedReferences[level].entities;\n      var isAttribute = scope === \"attribute\";\n      var isStrict = scope === \"strict\";\n      decodeRegExp.lastIndex = 0;\n      var replaceMatch_1 = decodeRegExp.exec(text);\n      var replaceResult_1;\n      if (replaceMatch_1) {\n        replaceResult_1 = \"\";\n        var replaceLastIndex_1 = 0;\n        do {\n          if (replaceLastIndex_1 !== replaceMatch_1.index) {\n            replaceResult_1 += text.substring(replaceLastIndex_1, replaceMatch_1.index);\n          }\n          var replaceInput_1 = replaceMatch_1[0];\n          var decodeResult_1 = replaceInput_1;\n          var decodeEntityLastChar_2 = replaceInput_1[replaceInput_1.length - 1];\n          if (isAttribute && decodeEntityLastChar_2 === \"=\") {\n            decodeResult_1 = replaceInput_1;\n          } else if (isStrict && decodeEntityLastChar_2 !== \";\") {\n            decodeResult_1 = replaceInput_1;\n          } else {\n            var decodeResultByReference_2 = references[replaceInput_1];\n            if (decodeResultByReference_2) {\n              decodeResult_1 = decodeResultByReference_2;\n            } else if (replaceInput_1[0] === \"&\" && replaceInput_1[1] === \"#\") {\n              var decodeSecondChar_2 = replaceInput_1[2];\n              var decodeCode_2 = decodeSecondChar_2 == \"x\" || decodeSecondChar_2 == \"X\" ? parseInt(replaceInput_1.substr(3), 16) : parseInt(replaceInput_1.substr(2));\n              decodeResult_1 = decodeCode_2 >= 1114111 ? outOfBoundsChar : decodeCode_2 > 65535 ? surrogate_pairs_1.fromCodePoint(decodeCode_2) : fromCharCode(numeric_unicode_map_1.numericUnicodeMap[decodeCode_2] || decodeCode_2);\n            }\n          }\n          replaceResult_1 += decodeResult_1;\n          replaceLastIndex_1 = replaceMatch_1.index + replaceInput_1.length;\n        } while (replaceMatch_1 = decodeRegExp.exec(text));\n        if (replaceLastIndex_1 !== text.length) {\n          replaceResult_1 += text.substring(replaceLastIndex_1);\n        }\n      } else {\n        replaceResult_1 = text;\n      }\n      return replaceResult_1;\n    }\n    exports.decode = decode2;\n  }\n});\n\n// ../../node_modules/rfdc/index.js\nvar require_rfdc = __commonJS({\n  \"../../node_modules/rfdc/index.js\"(exports, module2) {\n    \"use strict\";\n    module2.exports = rfdc;\n    function copyBuffer(cur) {\n      if (cur instanceof Buffer) {\n        return Buffer.from(cur);\n      }\n      return new cur.constructor(cur.buffer.slice(), cur.byteOffset, cur.length);\n    }\n    function rfdc(opts) {\n      opts = opts || {};\n      if (opts.circles)\n        return rfdcCircles(opts);\n      return opts.proto ? cloneProto : clone;\n      function cloneArray(a, fn) {\n        var keys = Object.keys(a);\n        var a2 = new Array(keys.length);\n        for (var i = 0; i < keys.length; i++) {\n          var k = keys[i];\n          var cur = a[k];\n          if (typeof cur !== \"object\" || cur === null) {\n            a2[k] = cur;\n          } else if (cur instanceof Date) {\n            a2[k] = new Date(cur);\n          } else if (ArrayBuffer.isView(cur)) {\n            a2[k] = copyBuffer(cur);\n          } else {\n            a2[k] = fn(cur);\n          }\n        }\n        return a2;\n      }\n      function clone(o) {\n        if (typeof o !== \"object\" || o === null)\n          return o;\n        if (o instanceof Date)\n          return new Date(o);\n        if (Array.isArray(o))\n          return cloneArray(o, clone);\n        if (o instanceof Map)\n          return new Map(cloneArray(Array.from(o), clone));\n        if (o instanceof Set)\n          return new Set(cloneArray(Array.from(o), clone));\n        var o2 = {};\n        for (var k in o) {\n          if (Object.hasOwnProperty.call(o, k) === false)\n            continue;\n          var cur = o[k];\n          if (typeof cur !== \"object\" || cur === null) {\n            o2[k] = cur;\n          } else if (cur instanceof Date) {\n            o2[k] = new Date(cur);\n          } else if (cur instanceof Map) {\n            o2[k] = new Map(cloneArray(Array.from(cur), clone));\n          } else if (cur instanceof Set) {\n            o2[k] = new Set(cloneArray(Array.from(cur), clone));\n          } else if (ArrayBuffer.isView(cur)) {\n            o2[k] = copyBuffer(cur);\n          } else {\n            o2[k] = clone(cur);\n          }\n        }\n        return o2;\n      }\n      function cloneProto(o) {\n        if (typeof o !== \"object\" || o === null)\n          return o;\n        if (o instanceof Date)\n          return new Date(o);\n        if (Array.isArray(o))\n          return cloneArray(o, cloneProto);\n        if (o instanceof Map)\n          return new Map(cloneArray(Array.from(o), cloneProto));\n        if (o instanceof Set)\n          return new Set(cloneArray(Array.from(o), cloneProto));\n        var o2 = {};\n        for (var k in o) {\n          var cur = o[k];\n          if (typeof cur !== \"object\" || cur === null) {\n            o2[k] = cur;\n          } else if (cur instanceof Date) {\n            o2[k] = new Date(cur);\n          } else if (cur instanceof Map) {\n            o2[k] = new Map(cloneArray(Array.from(cur), cloneProto));\n          } else if (cur instanceof Set) {\n            o2[k] = new Set(cloneArray(Array.from(cur), cloneProto));\n          } else if (ArrayBuffer.isView(cur)) {\n            o2[k] = copyBuffer(cur);\n          } else {\n            o2[k] = cloneProto(cur);\n          }\n        }\n        return o2;\n      }\n    }\n    function rfdcCircles(opts) {\n      var refs = [];\n      var refsNew = [];\n      return opts.proto ? cloneProto : clone;\n      function cloneArray(a, fn) {\n        var keys = Object.keys(a);\n        var a2 = new Array(keys.length);\n        for (var i = 0; i < keys.length; i++) {\n          var k = keys[i];\n          var cur = a[k];\n          if (typeof cur !== \"object\" || cur === null) {\n            a2[k] = cur;\n          } else if (cur instanceof Date) {\n            a2[k] = new Date(cur);\n          } else if (ArrayBuffer.isView(cur)) {\n            a2[k] = copyBuffer(cur);\n          } else {\n            var index = refs.indexOf(cur);\n            if (index !== -1) {\n              a2[k] = refsNew[index];\n            } else {\n              a2[k] = fn(cur);\n            }\n          }\n        }\n        return a2;\n      }\n      function clone(o) {\n        if (typeof o !== \"object\" || o === null)\n          return o;\n        if (o instanceof Date)\n          return new Date(o);\n        if (Array.isArray(o))\n          return cloneArray(o, clone);\n        if (o instanceof Map)\n          return new Map(cloneArray(Array.from(o), clone));\n        if (o instanceof Set)\n          return new Set(cloneArray(Array.from(o), clone));\n        var o2 = {};\n        refs.push(o);\n        refsNew.push(o2);\n        for (var k in o) {\n          if (Object.hasOwnProperty.call(o, k) === false)\n            continue;\n          var cur = o[k];\n          if (typeof cur !== \"object\" || cur === null) {\n            o2[k] = cur;\n          } else if (cur instanceof Date) {\n            o2[k] = new Date(cur);\n          } else if (cur instanceof Map) {\n            o2[k] = new Map(cloneArray(Array.from(cur), clone));\n          } else if (cur instanceof Set) {\n            o2[k] = new Set(cloneArray(Array.from(cur), clone));\n          } else if (ArrayBuffer.isView(cur)) {\n            o2[k] = copyBuffer(cur);\n          } else {\n            var i = refs.indexOf(cur);\n            if (i !== -1) {\n              o2[k] = refsNew[i];\n            } else {\n              o2[k] = clone(cur);\n            }\n          }\n        }\n        refs.pop();\n        refsNew.pop();\n        return o2;\n      }\n      function cloneProto(o) {\n        if (typeof o !== \"object\" || o === null)\n          return o;\n        if (o instanceof Date)\n          return new Date(o);\n        if (Array.isArray(o))\n          return cloneArray(o, cloneProto);\n        if (o instanceof Map)\n          return new Map(cloneArray(Array.from(o), cloneProto));\n        if (o instanceof Set)\n          return new Set(cloneArray(Array.from(o), cloneProto));\n        var o2 = {};\n        refs.push(o);\n        refsNew.push(o2);\n        for (var k in o) {\n          var cur = o[k];\n          if (typeof cur !== \"object\" || cur === null) {\n            o2[k] = cur;\n          } else if (cur instanceof Date) {\n            o2[k] = new Date(cur);\n          } else if (cur instanceof Map) {\n            o2[k] = new Map(cloneArray(Array.from(cur), cloneProto));\n          } else if (cur instanceof Set) {\n            o2[k] = new Set(cloneArray(Array.from(cur), cloneProto));\n          } else if (ArrayBuffer.isView(cur)) {\n            o2[k] = copyBuffer(cur);\n          } else {\n            var i = refs.indexOf(cur);\n            if (i !== -1) {\n              o2[k] = refsNew[i];\n            } else {\n              o2[k] = cloneProto(cur);\n            }\n          }\n        }\n        refs.pop();\n        refsNew.pop();\n        return o2;\n      }\n    }\n  }\n});\n\n// src/main.ts\nvar main_exports = {};\n__export(main_exports, {\n  defaults: () => defaults,\n  stripHtml: () => stripHtml,\n  version: () => version2\n});\nmodule.exports = __toCommonJS(main_exports);\n\n// ../codsen-utils/dist/codsen-utils.esm.js\nfunction d(t) {\n  if (t == null || typeof t != \"object\")\n    return false;\n  let e = Object.getPrototypeOf(t);\n  return e !== null && e !== Object.prototype && Object.getPrototypeOf(e) !== null ? false : !(Symbol.iterator in t) && !(Symbol.toStringTag in t);\n}\nfunction r(t) {\n  return typeof t == \"string\";\n}\nfunction I(t) {\n  return Number.isSafeInteger(t) && t >= 0;\n}\nfunction z(t) {\n  return t != null;\n}\nfunction X(t, e) {\n  return d(t) && r(e) && e in t;\n}\n\n// ../../node_modules/lodash-es/_freeGlobal.js\nvar freeGlobal = typeof __webpack_require__.g == \"object\" && __webpack_require__.g && __webpack_require__.g.Object === Object && __webpack_require__.g;\nvar freeGlobal_default = freeGlobal;\n\n// ../../node_modules/lodash-es/_root.js\nvar freeSelf = typeof self == \"object\" && self && self.Object === Object && self;\nvar root = freeGlobal_default || freeSelf || Function(\"return this\")();\nvar root_default = root;\n\n// ../../node_modules/lodash-es/_Symbol.js\nvar Symbol2 = root_default.Symbol;\nvar Symbol_default = Symbol2;\n\n// ../../node_modules/lodash-es/_getRawTag.js\nvar objectProto = Object.prototype;\nvar hasOwnProperty = objectProto.hasOwnProperty;\nvar nativeObjectToString = objectProto.toString;\nvar symToStringTag = Symbol_default ? Symbol_default.toStringTag : void 0;\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag), tag = value[symToStringTag];\n  try {\n    value[symToStringTag] = void 0;\n    var unmasked = true;\n  } catch (e) {\n  }\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\nvar getRawTag_default = getRawTag;\n\n// ../../node_modules/lodash-es/_objectToString.js\nvar objectProto2 = Object.prototype;\nvar nativeObjectToString2 = objectProto2.toString;\nfunction objectToString(value) {\n  return nativeObjectToString2.call(value);\n}\nvar objectToString_default = objectToString;\n\n// ../../node_modules/lodash-es/_baseGetTag.js\nvar nullTag = \"[object Null]\";\nvar undefinedTag = \"[object Undefined]\";\nvar symToStringTag2 = Symbol_default ? Symbol_default.toStringTag : void 0;\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === void 0 ? undefinedTag : nullTag;\n  }\n  return symToStringTag2 && symToStringTag2 in Object(value) ? getRawTag_default(value) : objectToString_default(value);\n}\nvar baseGetTag_default = baseGetTag;\n\n// ../../node_modules/lodash-es/isObjectLike.js\nfunction isObjectLike(value) {\n  return value != null && typeof value == \"object\";\n}\nvar isObjectLike_default = isObjectLike;\n\n// ../../node_modules/lodash-es/isSymbol.js\nvar symbolTag = \"[object Symbol]\";\nfunction isSymbol(value) {\n  return typeof value == \"symbol\" || isObjectLike_default(value) && baseGetTag_default(value) == symbolTag;\n}\nvar isSymbol_default = isSymbol;\n\n// ../../node_modules/lodash-es/_arrayMap.js\nfunction arrayMap(array, iteratee) {\n  var index = -1, length = array == null ? 0 : array.length, result = Array(length);\n  while (++index < length) {\n    result[index] = iteratee(array[index], index, array);\n  }\n  return result;\n}\nvar arrayMap_default = arrayMap;\n\n// ../../node_modules/lodash-es/isArray.js\nvar isArray = Array.isArray;\nvar isArray_default = isArray;\n\n// ../../node_modules/lodash-es/_baseToString.js\nvar INFINITY = 1 / 0;\nvar symbolProto = Symbol_default ? Symbol_default.prototype : void 0;\nvar symbolToString = symbolProto ? symbolProto.toString : void 0;\nfunction baseToString(value) {\n  if (typeof value == \"string\") {\n    return value;\n  }\n  if (isArray_default(value)) {\n    return arrayMap_default(value, baseToString) + \"\";\n  }\n  if (isSymbol_default(value)) {\n    return symbolToString ? symbolToString.call(value) : \"\";\n  }\n  var result = value + \"\";\n  return result == \"0\" && 1 / value == -INFINITY ? \"-0\" : result;\n}\nvar baseToString_default = baseToString;\n\n// ../../node_modules/lodash-es/_trimmedEndIndex.js\nvar reWhitespace = /\\s/;\nfunction trimmedEndIndex(string) {\n  var index = string.length;\n  while (index-- && reWhitespace.test(string.charAt(index))) {\n  }\n  return index;\n}\nvar trimmedEndIndex_default = trimmedEndIndex;\n\n// ../../node_modules/lodash-es/_baseTrim.js\nvar reTrimStart = /^\\s+/;\nfunction baseTrim(string) {\n  return string ? string.slice(0, trimmedEndIndex_default(string) + 1).replace(reTrimStart, \"\") : string;\n}\nvar baseTrim_default = baseTrim;\n\n// ../../node_modules/lodash-es/isObject.js\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == \"object\" || type == \"function\");\n}\nvar isObject_default = isObject;\n\n// ../../node_modules/lodash-es/identity.js\nfunction identity(value) {\n  return value;\n}\nvar identity_default = identity;\n\n// ../../node_modules/lodash-es/isFunction.js\nvar asyncTag = \"[object AsyncFunction]\";\nvar funcTag = \"[object Function]\";\nvar genTag = \"[object GeneratorFunction]\";\nvar proxyTag = \"[object Proxy]\";\nfunction isFunction(value) {\n  if (!isObject_default(value)) {\n    return false;\n  }\n  var tag = baseGetTag_default(value);\n  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n}\nvar isFunction_default = isFunction;\n\n// ../../node_modules/lodash-es/_coreJsData.js\nvar coreJsData = root_default[\"__core-js_shared__\"];\nvar coreJsData_default = coreJsData;\n\n// ../../node_modules/lodash-es/_isMasked.js\nvar maskSrcKey = function() {\n  var uid = /[^.]+$/.exec(coreJsData_default && coreJsData_default.keys && coreJsData_default.keys.IE_PROTO || \"\");\n  return uid ? \"Symbol(src)_1.\" + uid : \"\";\n}();\nfunction isMasked(func) {\n  return !!maskSrcKey && maskSrcKey in func;\n}\nvar isMasked_default = isMasked;\n\n// ../../node_modules/lodash-es/_toSource.js\nvar funcProto = Function.prototype;\nvar funcToString = funcProto.toString;\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {\n    }\n    try {\n      return func + \"\";\n    } catch (e) {\n    }\n  }\n  return \"\";\n}\nvar toSource_default = toSource;\n\n// ../../node_modules/lodash-es/_baseIsNative.js\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\nvar funcProto2 = Function.prototype;\nvar objectProto3 = Object.prototype;\nvar funcToString2 = funcProto2.toString;\nvar hasOwnProperty2 = objectProto3.hasOwnProperty;\nvar reIsNative = RegExp(\n  \"^\" + funcToString2.call(hasOwnProperty2).replace(reRegExpChar, \"\\\\$&\").replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, \"$1.*?\") + \"$\"\n);\nfunction baseIsNative(value) {\n  if (!isObject_default(value) || isMasked_default(value)) {\n    return false;\n  }\n  var pattern = isFunction_default(value) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource_default(value));\n}\nvar baseIsNative_default = baseIsNative;\n\n// ../../node_modules/lodash-es/_getValue.js\nfunction getValue(object, key) {\n  return object == null ? void 0 : object[key];\n}\nvar getValue_default = getValue;\n\n// ../../node_modules/lodash-es/_getNative.js\nfunction getNative(object, key) {\n  var value = getValue_default(object, key);\n  return baseIsNative_default(value) ? value : void 0;\n}\nvar getNative_default = getNative;\n\n// ../../node_modules/lodash-es/_apply.js\nfunction apply(func, thisArg, args) {\n  switch (args.length) {\n    case 0:\n      return func.call(thisArg);\n    case 1:\n      return func.call(thisArg, args[0]);\n    case 2:\n      return func.call(thisArg, args[0], args[1]);\n    case 3:\n      return func.call(thisArg, args[0], args[1], args[2]);\n  }\n  return func.apply(thisArg, args);\n}\nvar apply_default = apply;\n\n// ../../node_modules/lodash-es/_shortOut.js\nvar HOT_COUNT = 800;\nvar HOT_SPAN = 16;\nvar nativeNow = Date.now;\nfunction shortOut(func) {\n  var count = 0, lastCalled = 0;\n  return function() {\n    var stamp = nativeNow(), remaining = HOT_SPAN - (stamp - lastCalled);\n    lastCalled = stamp;\n    if (remaining > 0) {\n      if (++count >= HOT_COUNT) {\n        return arguments[0];\n      }\n    } else {\n      count = 0;\n    }\n    return func.apply(void 0, arguments);\n  };\n}\nvar shortOut_default = shortOut;\n\n// ../../node_modules/lodash-es/constant.js\nfunction constant(value) {\n  return function() {\n    return value;\n  };\n}\nvar constant_default = constant;\n\n// ../../node_modules/lodash-es/_defineProperty.js\nvar defineProperty = function() {\n  try {\n    var func = getNative_default(Object, \"defineProperty\");\n    func({}, \"\", {});\n    return func;\n  } catch (e) {\n  }\n}();\nvar defineProperty_default = defineProperty;\n\n// ../../node_modules/lodash-es/_baseSetToString.js\nvar baseSetToString = !defineProperty_default ? identity_default : function(func, string) {\n  return defineProperty_default(func, \"toString\", {\n    \"configurable\": true,\n    \"enumerable\": false,\n    \"value\": constant_default(string),\n    \"writable\": true\n  });\n};\nvar baseSetToString_default = baseSetToString;\n\n// ../../node_modules/lodash-es/_setToString.js\nvar setToString = shortOut_default(baseSetToString_default);\nvar setToString_default = setToString;\n\n// ../../node_modules/lodash-es/_baseFindIndex.js\nfunction baseFindIndex(array, predicate, fromIndex, fromRight) {\n  var length = array.length, index = fromIndex + (fromRight ? 1 : -1);\n  while (fromRight ? index-- : ++index < length) {\n    if (predicate(array[index], index, array)) {\n      return index;\n    }\n  }\n  return -1;\n}\nvar baseFindIndex_default = baseFindIndex;\n\n// ../../node_modules/lodash-es/_baseIsNaN.js\nfunction baseIsNaN(value) {\n  return value !== value;\n}\nvar baseIsNaN_default = baseIsNaN;\n\n// ../../node_modules/lodash-es/_strictIndexOf.js\nfunction strictIndexOf(array, value, fromIndex) {\n  var index = fromIndex - 1, length = array.length;\n  while (++index < length) {\n    if (array[index] === value) {\n      return index;\n    }\n  }\n  return -1;\n}\nvar strictIndexOf_default = strictIndexOf;\n\n// ../../node_modules/lodash-es/_baseIndexOf.js\nfunction baseIndexOf(array, value, fromIndex) {\n  return value === value ? strictIndexOf_default(array, value, fromIndex) : baseFindIndex_default(array, baseIsNaN_default, fromIndex);\n}\nvar baseIndexOf_default = baseIndexOf;\n\n// ../../node_modules/lodash-es/_arrayIncludes.js\nfunction arrayIncludes(array, value) {\n  var length = array == null ? 0 : array.length;\n  return !!length && baseIndexOf_default(array, value, 0) > -1;\n}\nvar arrayIncludes_default = arrayIncludes;\n\n// ../../node_modules/lodash-es/eq.js\nfunction eq(value, other) {\n  return value === other || value !== value && other !== other;\n}\nvar eq_default = eq;\n\n// ../../node_modules/lodash-es/_overRest.js\nvar nativeMax = Math.max;\nfunction overRest(func, start, transform) {\n  start = nativeMax(start === void 0 ? func.length - 1 : start, 0);\n  return function() {\n    var args = arguments, index = -1, length = nativeMax(args.length - start, 0), array = Array(length);\n    while (++index < length) {\n      array[index] = args[start + index];\n    }\n    index = -1;\n    var otherArgs = Array(start + 1);\n    while (++index < start) {\n      otherArgs[index] = args[index];\n    }\n    otherArgs[start] = transform(array);\n    return apply_default(func, this, otherArgs);\n  };\n}\nvar overRest_default = overRest;\n\n// ../../node_modules/lodash-es/_baseRest.js\nfunction baseRest(func, start) {\n  return setToString_default(overRest_default(func, start, identity_default), func + \"\");\n}\nvar baseRest_default = baseRest;\n\n// ../../node_modules/lodash-es/isLength.js\nvar MAX_SAFE_INTEGER = 9007199254740991;\nfunction isLength(value) {\n  return typeof value == \"number\" && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\nvar isLength_default = isLength;\n\n// ../../node_modules/lodash-es/isArrayLike.js\nfunction isArrayLike(value) {\n  return value != null && isLength_default(value.length) && !isFunction_default(value);\n}\nvar isArrayLike_default = isArrayLike;\n\n// ../../node_modules/lodash-es/_baseUnary.js\nfunction baseUnary(func) {\n  return function(value) {\n    return func(value);\n  };\n}\nvar baseUnary_default = baseUnary;\n\n// ../../node_modules/lodash-es/_nativeCreate.js\nvar nativeCreate = getNative_default(Object, \"create\");\nvar nativeCreate_default = nativeCreate;\n\n// ../../node_modules/lodash-es/_hashClear.js\nfunction hashClear() {\n  this.__data__ = nativeCreate_default ? nativeCreate_default(null) : {};\n  this.size = 0;\n}\nvar hashClear_default = hashClear;\n\n// ../../node_modules/lodash-es/_hashDelete.js\nfunction hashDelete(key) {\n  var result = this.has(key) && delete this.__data__[key];\n  this.size -= result ? 1 : 0;\n  return result;\n}\nvar hashDelete_default = hashDelete;\n\n// ../../node_modules/lodash-es/_hashGet.js\nvar HASH_UNDEFINED = \"__lodash_hash_undefined__\";\nvar objectProto4 = Object.prototype;\nvar hasOwnProperty3 = objectProto4.hasOwnProperty;\nfunction hashGet(key) {\n  var data = this.__data__;\n  if (nativeCreate_default) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? void 0 : result;\n  }\n  return hasOwnProperty3.call(data, key) ? data[key] : void 0;\n}\nvar hashGet_default = hashGet;\n\n// ../../node_modules/lodash-es/_hashHas.js\nvar objectProto5 = Object.prototype;\nvar hasOwnProperty4 = objectProto5.hasOwnProperty;\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate_default ? data[key] !== void 0 : hasOwnProperty4.call(data, key);\n}\nvar hashHas_default = hashHas;\n\n// ../../node_modules/lodash-es/_hashSet.js\nvar HASH_UNDEFINED2 = \"__lodash_hash_undefined__\";\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  this.size += this.has(key) ? 0 : 1;\n  data[key] = nativeCreate_default && value === void 0 ? HASH_UNDEFINED2 : value;\n  return this;\n}\nvar hashSet_default = hashSet;\n\n// ../../node_modules/lodash-es/_Hash.js\nfunction Hash(entries) {\n  var index = -1, length = entries == null ? 0 : entries.length;\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\nHash.prototype.clear = hashClear_default;\nHash.prototype[\"delete\"] = hashDelete_default;\nHash.prototype.get = hashGet_default;\nHash.prototype.has = hashHas_default;\nHash.prototype.set = hashSet_default;\nvar Hash_default = Hash;\n\n// ../../node_modules/lodash-es/_listCacheClear.js\nfunction listCacheClear() {\n  this.__data__ = [];\n  this.size = 0;\n}\nvar listCacheClear_default = listCacheClear;\n\n// ../../node_modules/lodash-es/_assocIndexOf.js\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n  while (length--) {\n    if (eq_default(array[length][0], key)) {\n      return length;\n    }\n  }\n  return -1;\n}\nvar assocIndexOf_default = assocIndexOf;\n\n// ../../node_modules/lodash-es/_listCacheDelete.js\nvar arrayProto = Array.prototype;\nvar splice = arrayProto.splice;\nfunction listCacheDelete(key) {\n  var data = this.__data__, index = assocIndexOf_default(data, key);\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = data.length - 1;\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n  --this.size;\n  return true;\n}\nvar listCacheDelete_default = listCacheDelete;\n\n// ../../node_modules/lodash-es/_listCacheGet.js\nfunction listCacheGet(key) {\n  var data = this.__data__, index = assocIndexOf_default(data, key);\n  return index < 0 ? void 0 : data[index][1];\n}\nvar listCacheGet_default = listCacheGet;\n\n// ../../node_modules/lodash-es/_listCacheHas.js\nfunction listCacheHas(key) {\n  return assocIndexOf_default(this.__data__, key) > -1;\n}\nvar listCacheHas_default = listCacheHas;\n\n// ../../node_modules/lodash-es/_listCacheSet.js\nfunction listCacheSet(key, value) {\n  var data = this.__data__, index = assocIndexOf_default(data, key);\n  if (index < 0) {\n    ++this.size;\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n  return this;\n}\nvar listCacheSet_default = listCacheSet;\n\n// ../../node_modules/lodash-es/_ListCache.js\nfunction ListCache(entries) {\n  var index = -1, length = entries == null ? 0 : entries.length;\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\nListCache.prototype.clear = listCacheClear_default;\nListCache.prototype[\"delete\"] = listCacheDelete_default;\nListCache.prototype.get = listCacheGet_default;\nListCache.prototype.has = listCacheHas_default;\nListCache.prototype.set = listCacheSet_default;\nvar ListCache_default = ListCache;\n\n// ../../node_modules/lodash-es/_Map.js\nvar Map2 = getNative_default(root_default, \"Map\");\nvar Map_default = Map2;\n\n// ../../node_modules/lodash-es/_mapCacheClear.js\nfunction mapCacheClear() {\n  this.size = 0;\n  this.__data__ = {\n    \"hash\": new Hash_default(),\n    \"map\": new (Map_default || ListCache_default)(),\n    \"string\": new Hash_default()\n  };\n}\nvar mapCacheClear_default = mapCacheClear;\n\n// ../../node_modules/lodash-es/_isKeyable.js\nfunction isKeyable(value) {\n  var type = typeof value;\n  return type == \"string\" || type == \"number\" || type == \"symbol\" || type == \"boolean\" ? value !== \"__proto__\" : value === null;\n}\nvar isKeyable_default = isKeyable;\n\n// ../../node_modules/lodash-es/_getMapData.js\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable_default(key) ? data[typeof key == \"string\" ? \"string\" : \"hash\"] : data.map;\n}\nvar getMapData_default = getMapData;\n\n// ../../node_modules/lodash-es/_mapCacheDelete.js\nfunction mapCacheDelete(key) {\n  var result = getMapData_default(this, key)[\"delete\"](key);\n  this.size -= result ? 1 : 0;\n  return result;\n}\nvar mapCacheDelete_default = mapCacheDelete;\n\n// ../../node_modules/lodash-es/_mapCacheGet.js\nfunction mapCacheGet(key) {\n  return getMapData_default(this, key).get(key);\n}\nvar mapCacheGet_default = mapCacheGet;\n\n// ../../node_modules/lodash-es/_mapCacheHas.js\nfunction mapCacheHas(key) {\n  return getMapData_default(this, key).has(key);\n}\nvar mapCacheHas_default = mapCacheHas;\n\n// ../../node_modules/lodash-es/_mapCacheSet.js\nfunction mapCacheSet(key, value) {\n  var data = getMapData_default(this, key), size = data.size;\n  data.set(key, value);\n  this.size += data.size == size ? 0 : 1;\n  return this;\n}\nvar mapCacheSet_default = mapCacheSet;\n\n// ../../node_modules/lodash-es/_MapCache.js\nfunction MapCache(entries) {\n  var index = -1, length = entries == null ? 0 : entries.length;\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\nMapCache.prototype.clear = mapCacheClear_default;\nMapCache.prototype[\"delete\"] = mapCacheDelete_default;\nMapCache.prototype.get = mapCacheGet_default;\nMapCache.prototype.has = mapCacheHas_default;\nMapCache.prototype.set = mapCacheSet_default;\nvar MapCache_default = MapCache;\n\n// ../../node_modules/lodash-es/toString.js\nfunction toString(value) {\n  return value == null ? \"\" : baseToString_default(value);\n}\nvar toString_default = toString;\n\n// ../../node_modules/lodash-es/_baseSlice.js\nfunction baseSlice(array, start, end) {\n  var index = -1, length = array.length;\n  if (start < 0) {\n    start = -start > length ? 0 : length + start;\n  }\n  end = end > length ? length : end;\n  if (end < 0) {\n    end += length;\n  }\n  length = start > end ? 0 : end - start >>> 0;\n  start >>>= 0;\n  var result = Array(length);\n  while (++index < length) {\n    result[index] = array[index + start];\n  }\n  return result;\n}\nvar baseSlice_default = baseSlice;\n\n// ../../node_modules/lodash-es/_castSlice.js\nfunction castSlice(array, start, end) {\n  var length = array.length;\n  end = end === void 0 ? length : end;\n  return !start && end >= length ? array : baseSlice_default(array, start, end);\n}\nvar castSlice_default = castSlice;\n\n// ../../node_modules/lodash-es/_hasUnicode.js\nvar rsAstralRange = \"\\\\ud800-\\\\udfff\";\nvar rsComboMarksRange = \"\\\\u0300-\\\\u036f\";\nvar reComboHalfMarksRange = \"\\\\ufe20-\\\\ufe2f\";\nvar rsComboSymbolsRange = \"\\\\u20d0-\\\\u20ff\";\nvar rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange;\nvar rsVarRange = \"\\\\ufe0e\\\\ufe0f\";\nvar rsZWJ = \"\\\\u200d\";\nvar reHasUnicode = RegExp(\"[\" + rsZWJ + rsAstralRange + rsComboRange + rsVarRange + \"]\");\nfunction hasUnicode(string) {\n  return reHasUnicode.test(string);\n}\nvar hasUnicode_default = hasUnicode;\n\n// ../../node_modules/lodash-es/_asciiToArray.js\nfunction asciiToArray(string) {\n  return string.split(\"\");\n}\nvar asciiToArray_default = asciiToArray;\n\n// ../../node_modules/lodash-es/_unicodeToArray.js\nvar rsAstralRange2 = \"\\\\ud800-\\\\udfff\";\nvar rsComboMarksRange2 = \"\\\\u0300-\\\\u036f\";\nvar reComboHalfMarksRange2 = \"\\\\ufe20-\\\\ufe2f\";\nvar rsComboSymbolsRange2 = \"\\\\u20d0-\\\\u20ff\";\nvar rsComboRange2 = rsComboMarksRange2 + reComboHalfMarksRange2 + rsComboSymbolsRange2;\nvar rsVarRange2 = \"\\\\ufe0e\\\\ufe0f\";\nvar rsAstral = \"[\" + rsAstralRange2 + \"]\";\nvar rsCombo = \"[\" + rsComboRange2 + \"]\";\nvar rsFitz = \"\\\\ud83c[\\\\udffb-\\\\udfff]\";\nvar rsModifier = \"(?:\" + rsCombo + \"|\" + rsFitz + \")\";\nvar rsNonAstral = \"[^\" + rsAstralRange2 + \"]\";\nvar rsRegional = \"(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}\";\nvar rsSurrPair = \"[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]\";\nvar rsZWJ2 = \"\\\\u200d\";\nvar reOptMod = rsModifier + \"?\";\nvar rsOptVar = \"[\" + rsVarRange2 + \"]?\";\nvar rsOptJoin = \"(?:\" + rsZWJ2 + \"(?:\" + [rsNonAstral, rsRegional, rsSurrPair].join(\"|\") + \")\" + rsOptVar + reOptMod + \")*\";\nvar rsSeq = rsOptVar + reOptMod + rsOptJoin;\nvar rsSymbol = \"(?:\" + [rsNonAstral + rsCombo + \"?\", rsCombo, rsRegional, rsSurrPair, rsAstral].join(\"|\") + \")\";\nvar reUnicode = RegExp(rsFitz + \"(?=\" + rsFitz + \")|\" + rsSymbol + rsSeq, \"g\");\nfunction unicodeToArray(string) {\n  return string.match(reUnicode) || [];\n}\nvar unicodeToArray_default = unicodeToArray;\n\n// ../../node_modules/lodash-es/_stringToArray.js\nfunction stringToArray(string) {\n  return hasUnicode_default(string) ? unicodeToArray_default(string) : asciiToArray_default(string);\n}\nvar stringToArray_default = stringToArray;\n\n// ../../node_modules/lodash-es/_setCacheAdd.js\nvar HASH_UNDEFINED3 = \"__lodash_hash_undefined__\";\nfunction setCacheAdd(value) {\n  this.__data__.set(value, HASH_UNDEFINED3);\n  return this;\n}\nvar setCacheAdd_default = setCacheAdd;\n\n// ../../node_modules/lodash-es/_setCacheHas.js\nfunction setCacheHas(value) {\n  return this.__data__.has(value);\n}\nvar setCacheHas_default = setCacheHas;\n\n// ../../node_modules/lodash-es/_SetCache.js\nfunction SetCache(values) {\n  var index = -1, length = values == null ? 0 : values.length;\n  this.__data__ = new MapCache_default();\n  while (++index < length) {\n    this.add(values[index]);\n  }\n}\nSetCache.prototype.add = SetCache.prototype.push = setCacheAdd_default;\nSetCache.prototype.has = setCacheHas_default;\nvar SetCache_default = SetCache;\n\n// ../../node_modules/lodash-es/_cacheHas.js\nfunction cacheHas(cache, key) {\n  return cache.has(key);\n}\nvar cacheHas_default = cacheHas;\n\n// ../../node_modules/lodash-es/isArrayLikeObject.js\nfunction isArrayLikeObject(value) {\n  return isObjectLike_default(value) && isArrayLike_default(value);\n}\nvar isArrayLikeObject_default = isArrayLikeObject;\n\n// ../../node_modules/lodash-es/_arrayIncludesWith.js\nfunction arrayIncludesWith(array, value, comparator) {\n  var index = -1, length = array == null ? 0 : array.length;\n  while (++index < length) {\n    if (comparator(value, array[index])) {\n      return true;\n    }\n  }\n  return false;\n}\nvar arrayIncludesWith_default = arrayIncludesWith;\n\n// ../../node_modules/lodash-es/_baseDifference.js\nvar LARGE_ARRAY_SIZE = 200;\nfunction baseDifference(array, values, iteratee, comparator) {\n  var index = -1, includes = arrayIncludes_default, isCommon = true, length = array.length, result = [], valuesLength = values.length;\n  if (!length) {\n    return result;\n  }\n  if (iteratee) {\n    values = arrayMap_default(values, baseUnary_default(iteratee));\n  }\n  if (comparator) {\n    includes = arrayIncludesWith_default;\n    isCommon = false;\n  } else if (values.length >= LARGE_ARRAY_SIZE) {\n    includes = cacheHas_default;\n    isCommon = false;\n    values = new SetCache_default(values);\n  }\n  outer:\n    while (++index < length) {\n      var value = array[index], computed = iteratee == null ? value : iteratee(value);\n      value = comparator || value !== 0 ? value : 0;\n      if (isCommon && computed === computed) {\n        var valuesIndex = valuesLength;\n        while (valuesIndex--) {\n          if (values[valuesIndex] === computed) {\n            continue outer;\n          }\n        }\n        result.push(value);\n      } else if (!includes(values, computed, comparator)) {\n        result.push(value);\n      }\n    }\n  return result;\n}\nvar baseDifference_default = baseDifference;\n\n// ../../node_modules/lodash-es/_charsEndIndex.js\nfunction charsEndIndex(strSymbols, chrSymbols) {\n  var index = strSymbols.length;\n  while (index-- && baseIndexOf_default(chrSymbols, strSymbols[index], 0) > -1) {\n  }\n  return index;\n}\nvar charsEndIndex_default = charsEndIndex;\n\n// ../../node_modules/lodash-es/_charsStartIndex.js\nfunction charsStartIndex(strSymbols, chrSymbols) {\n  var index = -1, length = strSymbols.length;\n  while (++index < length && baseIndexOf_default(chrSymbols, strSymbols[index], 0) > -1) {\n  }\n  return index;\n}\nvar charsStartIndex_default = charsStartIndex;\n\n// ../../node_modules/lodash-es/trim.js\nfunction trim(string, chars, guard) {\n  string = toString_default(string);\n  if (string && (guard || chars === void 0)) {\n    return baseTrim_default(string);\n  }\n  if (!string || !(chars = baseToString_default(chars))) {\n    return string;\n  }\n  var strSymbols = stringToArray_default(string), chrSymbols = stringToArray_default(chars), start = charsStartIndex_default(strSymbols, chrSymbols), end = charsEndIndex_default(strSymbols, chrSymbols) + 1;\n  return castSlice_default(strSymbols, start, end).join(\"\");\n}\nvar trim_default = trim;\n\n// ../../node_modules/lodash-es/without.js\nvar without = baseRest_default(function(array, values) {\n  return isArrayLikeObject_default(array) ? baseDifference_default(array, values) : [];\n});\nvar without_default = without;\n\n// src/main.ts\nvar import_html_entities = __toESM(require_lib(), 1);\n\n// ../ranges-sort/dist/ranges-sort.esm.js\nvar d2 = { strictlyTwoElementsInRangeArrays: false, progressFn: null };\nfunction g(t, u) {\n  if (!Array.isArray(t) || !t.length)\n    return t;\n  let n = { ...d2, ...u }, s, o;\n  if (n.strictlyTwoElementsInRangeArrays && !t.every((e, r2) => !Array.isArray(e) || e.length !== 2 ? (s = r2, o = e.length, false) : true))\n    throw new TypeError(`ranges-sort: [THROW_ID_03] The first argument should be an array and must consist of arrays which are natural number indexes representing TWO string index ranges. However, ${s}th range (${JSON.stringify(t[s], null, 4)}) has not two but ${o} elements!`);\n  if (!t.every((e, r2) => !Array.isArray(e) || !Number.isInteger(e[0]) || e[0] < 0 || !Number.isInteger(e[1]) || e[1] < 0 ? (s = r2, false) : true))\n    throw new TypeError(`ranges-sort: [THROW_ID_04] The first argument should be an array and must consist of arrays which are natural number indexes representing string index ranges. However, ${s}th range (${JSON.stringify(t[s], null, 4)}) does not consist of only natural numbers!`);\n  let p = t.length ** 2, i = 0;\n  return Array.from(t).sort((e, r2) => (n.progressFn && (i += 1, n.progressFn(Math.floor(i * 100 / p))), e[0] === r2[0] ? e[1] < r2[1] ? -1 : e[1] > r2[1] ? 1 : 0 : e[0] < r2[0] ? -1 : 1));\n}\n\n// ../ranges-merge/dist/ranges-merge.esm.js\nvar d3 = { mergeType: 1, progressFn: null, joinRangesThatTouchEdges: true };\nfunction b(i, r2) {\n  function l(e) {\n    return !!e && typeof e == \"object\" && !Array.isArray(e);\n  }\n  if (!Array.isArray(i) || !i.length)\n    return null;\n  let n;\n  if (r2)\n    if (l(r2)) {\n      if (n = { ...d3, ...r2 }, n.progressFn && l(n.progressFn) && !Object.keys(n.progressFn).length)\n        n.progressFn = null;\n      else if (n.progressFn && typeof n.progressFn != \"function\")\n        throw new Error(`ranges-merge: [THROW_ID_01] opts.progressFn must be a function! It was given of a type: \"${typeof n.progressFn}\", equal to ${JSON.stringify(n.progressFn, null, 4)}`);\n      if (![1, 2, \"1\", \"2\"].includes(n.mergeType))\n        throw new Error(`ranges-merge: [THROW_ID_02] opts.mergeType was customised to a wrong thing! It was given of a type: \"${typeof n.mergeType}\", equal to ${JSON.stringify(n.mergeType, null, 4)}`);\n      if (typeof n.joinRangesThatTouchEdges != \"boolean\")\n        throw new Error(`ranges-merge: [THROW_ID_04] opts.joinRangesThatTouchEdges was customised to a wrong thing! It was given of a type: \"${typeof n.joinRangesThatTouchEdges}\", equal to ${JSON.stringify(n.joinRangesThatTouchEdges, null, 4)}`);\n    } else\n      throw new Error(`emlint: [THROW_ID_03] the second input argument must be a plain object. It was given as:\n${JSON.stringify(r2, null, 4)} (type ${typeof r2})`);\n  else\n    n = { ...d3 };\n  let g2 = i.filter((e) => Array.isArray(e)).map((e) => [...e]).filter((e) => e[2] !== void 0 || e[0] !== e[1]), s, o, t;\n  n.progressFn ? s = g(g2, { progressFn: (e) => {\n    t = Math.floor(e / 5), t !== o && (o = t, n.progressFn(t));\n  } }) : s = g(g2);\n  let a = s.length - 1;\n  for (let e = a; e > 0; e--)\n    n.progressFn && (t = Math.floor((1 - e / a) * 78) + 21, t !== o && t > o && (o = t, n.progressFn(t))), (s[e][0] <= s[e - 1][0] || !n.joinRangesThatTouchEdges && s[e][0] < s[e - 1][1] || n.joinRangesThatTouchEdges && s[e][0] <= s[e - 1][1]) && (s[e - 1][0] = Math.min(s[e][0], s[e - 1][0]), s[e - 1][1] = Math.max(s[e][1], s[e - 1][1]), s[e][2] !== void 0 && (s[e - 1][0] >= s[e][0] || s[e - 1][1] <= s[e][1]) && s[e - 1][2] !== null && (s[e][2] === null && s[e - 1][2] !== null ? s[e - 1][2] = null : s[e - 1][2] != null ? +n.mergeType == 2 && s[e - 1][0] === s[e][0] ? s[e - 1][2] = s[e][2] : s[e - 1][2] += s[e][2] : s[e - 1][2] = s[e][2]), s.splice(e, 1), e = s.length);\n  return s.length ? s : null;\n}\n\n// ../../node_modules/tiny-invariant/dist/esm/tiny-invariant.js\nvar isProduction = \"development\" === \"production\";\nvar prefix = \"Invariant failed\";\nfunction invariant(condition, message) {\n  if (condition) {\n    return;\n  }\n  if (isProduction) {\n    throw new Error(prefix);\n  }\n  var provided = typeof message === \"function\" ? message() : message;\n  var value = provided ? \"\".concat(prefix, \": \").concat(provided) : prefix;\n  throw new Error(value);\n}\n\n// ../ranges-apply/dist/ranges-apply.esm.js\nfunction _(s, n, r2) {\n  let t = 0, p = 0;\n  if (arguments.length === 0)\n    throw new Error(\"ranges-apply: [THROW_ID_01] inputs missing!\");\n  if (typeof s != \"string\")\n    throw new TypeError(`ranges-apply: [THROW_ID_02] first input argument must be a string! Currently it's: ${typeof s}, equal to: ${JSON.stringify(s, null, 4)}`);\n  if (n && !Array.isArray(n))\n    throw new TypeError(`ranges-apply: [THROW_ID_03] second input argument must be an array (or null)! Currently it's: ${typeof n}, equal to: ${JSON.stringify(n, null, 4)}`);\n  if (r2 && typeof r2 != \"function\")\n    throw new TypeError(`ranges-apply: [THROW_ID_04] the third input argument must be a function (or falsey)! Currently it's: ${typeof r2}, equal to: ${JSON.stringify(r2, null, 4)}`);\n  if (!n?.filter((e) => e).length)\n    return s;\n  let i;\n  Array.isArray(n) && Number.isInteger(n[0]) && Number.isInteger(n[1]) ? i = [Array.from(n)] : i = Array.from(n);\n  let f2 = i.length, c2 = 0;\n  i.filter((e) => e).forEach((e, a) => {\n    if (r2 && (t = Math.floor(c2 / f2 * 10), t !== p && (p = t, r2(t))), !Array.isArray(e))\n      throw new TypeError(`ranges-apply: [THROW_ID_05] ranges array, second input arg., has ${a}th element not an array: ${JSON.stringify(e, null, 4)}, which is ${typeof e}`);\n    if (!Number.isInteger(e[0])) {\n      if (!Number.isInteger(+e[0]) || +e[0] < 0)\n        throw new TypeError(`ranges-apply: [THROW_ID_06] ranges array, second input arg. has ${a}th element, array ${JSON.stringify(e, null, 0)}. Its first element is not an integer, string index, but ${typeof e[0]}, equal to: ${JSON.stringify(e[0], null, 4)}.`);\n      i[a][0] = +i[a][0];\n    }\n    if (!Number.isInteger(e[1])) {\n      if (!Number.isInteger(+e[1]) || +e[1] < 0)\n        throw new TypeError(`ranges-apply: [THROW_ID_07] ranges array, second input arg. has ${a}th element, array ${JSON.stringify(e, null, 0)}. Its second element is not an integer, string index, but ${typeof e[1]}, equal to: ${JSON.stringify(e[1], null, 4)}.`);\n      i[a][1] = +i[a][1];\n    }\n    c2 += 1;\n  });\n  let o = b(i, { progressFn: (e) => {\n    r2 && (t = 10 + Math.floor(e / 10), t !== p && (p = t, r2(t)));\n  } });\n  invariant(o);\n  let u = o.length;\n  if (u > 0) {\n    let e = s.slice(o[u - 1][1]);\n    s = o.reduce((a, $3, l, y2) => {\n      r2 && (t = 20 + Math.floor(l / u * 80), t !== p && (p = t, r2(t)));\n      let g2 = l === 0 ? 0 : y2[l - 1][1], d4 = y2[l][0];\n      return `${a}${s.slice(g2, d4)}${y2[l][2] || \"\"}`;\n    }, \"\"), s += e;\n  }\n  return s;\n}\n\n// ../string-collapse-leading-whitespace/dist/string-collapse-leading-whitespace.esm.js\nfunction D(n, u = 1) {\n  let $3 = \"\\xA0\";\n  function g2(e) {\n    return Array.from(e).reverse().join(\"\");\n  }\n  function p(e, s, r2) {\n    let t = r2 ? `\n` : \"\\r\", i = r2 ? \"\\r\" : `\n`;\n    if (!e)\n      return e;\n    let m = 0, c2 = 0, o = \"\";\n    for (let l = 0, f2 = e.length; l < f2; l++)\n      (e[l] === t || e[l] === i && e[l - 1] !== t) && c2++, `\\r\n`.includes(e[l]) || e[l] === $3 ? (m = 0, e[l] === $3 ? o += e[l] : e[l] === t ? c2 <= s && (o += e[l], e[l + 1] === i && (o += e[l + 1], l++)) : e[l] === i && e?.[l - 1] !== t && c2 <= s && (o += e[l])) : (m++, !e[l + 1] && !c2 && (o += \" \"));\n    return o;\n  }\n  if (typeof n == \"string\" && n.length) {\n    let e = 1;\n    typeof +u == \"number\" && Number.isInteger(+u) && +u >= 0 && (e = +u);\n    let s = \"\", r2 = \"\";\n    if (!n.trim())\n      s = n;\n    else if (!n[0].trim()) {\n      for (let t = 0, i = n.length; t < i; t++)\n        if (n[t].trim()) {\n          s = n.slice(0, t);\n          break;\n        }\n    }\n    if (n.trim() && (n.slice(-1).trim() === \"\" || n.slice(-1) === $3)) {\n      for (let t = n.length; t--; )\n        if (n[t].trim()) {\n          r2 = n.slice(t + 1);\n          break;\n        }\n    }\n    return `${p(s, e, false)}${n.trim()}${g2(p(g2(r2), e, true))}`;\n  }\n  return n;\n}\n\n// ../ranges-push/dist/ranges-push.esm.js\nvar f = { mergeType: 1, progressFn: null, joinRangesThatTouchEdges: true };\nfunction $(p, t) {\n  function r2(e) {\n    return !!e && typeof e == \"object\" && !Array.isArray(e);\n  }\n  if (!Array.isArray(p) || !p.length)\n    return null;\n  let s;\n  if (t)\n    if (r2(t)) {\n      if (s = { ...f, ...t }, s.progressFn && r2(s.progressFn) && !Object.keys(s.progressFn).length)\n        s.progressFn = null;\n      else if (s.progressFn && typeof s.progressFn != \"function\")\n        throw new Error(`ranges-merge: [THROW_ID_01] resolvedOpts.progressFn must be a function! It was given of a type: \"${typeof s.progressFn}\", equal to ${JSON.stringify(s.progressFn, null, 4)}`);\n      if (![1, 2, \"1\", \"2\"].includes(s.mergeType))\n        throw new Error(`ranges-merge: [THROW_ID_02] resolvedOpts.mergeType was customised to a wrong thing! It was given of a type: \"${typeof s.mergeType}\", equal to ${JSON.stringify(s.mergeType, null, 4)}`);\n      if (typeof s.joinRangesThatTouchEdges != \"boolean\")\n        throw new Error(`ranges-merge: [THROW_ID_04] resolvedOpts.joinRangesThatTouchEdges was customised to a wrong thing! It was given of a type: \"${typeof s.joinRangesThatTouchEdges}\", equal to ${JSON.stringify(s.joinRangesThatTouchEdges, null, 4)}`);\n    } else\n      throw new Error(`emlint: [THROW_ID_03] the second input argument must be a plain object. It was given as:\n${JSON.stringify(t, null, 4)} (type ${typeof t})`);\n  else\n    s = { ...f };\n  let i = p.filter((e) => Array.isArray(e)).map((e) => [...e]).filter((e) => e[2] !== void 0 || e[0] !== e[1]), n, o, l;\n  s.progressFn ? n = g(i, { progressFn: (e) => {\n    l = Math.floor(e / 5), l !== o && (o = l, s.progressFn(l));\n  } }) : n = g(i);\n  let h = n.length - 1;\n  for (let e = h; e > 0; e--)\n    s.progressFn && (l = Math.floor((1 - e / h) * 78) + 21, l !== o && l > o && (o = l, s.progressFn(l))), (n[e][0] <= n[e - 1][0] || !s.joinRangesThatTouchEdges && n[e][0] < n[e - 1][1] || s.joinRangesThatTouchEdges && n[e][0] <= n[e - 1][1]) && (n[e - 1][0] = Math.min(n[e][0], n[e - 1][0]), n[e - 1][1] = Math.max(n[e][1], n[e - 1][1]), n[e][2] !== void 0 && (n[e - 1][0] >= n[e][0] || n[e - 1][1] <= n[e][1]) && n[e - 1][2] !== null && (n[e][2] === null && n[e - 1][2] !== null ? n[e - 1][2] = null : n[e - 1][2] != null ? +s.mergeType == 2 && n[e - 1][0] === n[e][0] ? n[e - 1][2] = n[e][2] : n[e - 1][2] += n[e][2] : n[e - 1][2] = n[e][2]), n.splice(e, 1), e = n.length);\n  return n.length ? n : null;\n}\nvar R = { limitToBeAddedWhitespace: false, limitLinebreaksCount: 1, mergeType: 1 };\nvar y = class {\n  constructor(t) {\n    let r2 = { ...R, ...t };\n    if (r2.mergeType && r2.mergeType !== 1 && r2.mergeType !== 2)\n      if (r(r2.mergeType) && r2.mergeType.trim() === \"1\")\n        r2.mergeType = 1;\n      else if (r(r2.mergeType) && r2.mergeType.trim() === \"2\")\n        r2.mergeType = 2;\n      else\n        throw new Error(`ranges-push: [THROW_ID_02] opts.mergeType was customised to a wrong thing! It was given of a type: \"${typeof r2.mergeType}\", equal to ${JSON.stringify(r2.mergeType, null, 4)}`);\n    this.opts = r2, this.ranges = [];\n  }\n  ranges;\n  opts;\n  add(t, r2, s) {\n    if (t == null && r2 == null)\n      return;\n    if (z(t) && !z(r2)) {\n      if (Array.isArray(t)) {\n        if (t.length) {\n          if (t.some((o) => Array.isArray(o))) {\n            t.forEach((o) => {\n              Array.isArray(o) && this.add(...o);\n            });\n            return;\n          }\n          t.length && I(+t[0]) && I(+t[1]) && this.add(...t);\n        }\n        return;\n      }\n      throw new TypeError(`ranges-push/Ranges/add(): [THROW_ID_12] the first input argument, \"from\" is set (${JSON.stringify(t, null, 0)}) but second-one, \"to\" is not (${JSON.stringify(r2, null, 0)})`);\n    } else if (!z(t) && z(r2))\n      throw new TypeError(`ranges-push/Ranges/add(): [THROW_ID_13] the second input argument, \"to\" is set (${JSON.stringify(r2, null, 0)}) but first-one, \"from\" is not (${JSON.stringify(t, null, 0)})`);\n    let i = +t, n = +r2;\n    if (I(s) && (s = String(s)), I(i) && I(n)) {\n      if (z(s) && !r(s) && !I(s))\n        throw new TypeError(`ranges-push/Ranges/add(): [THROW_ID_08] The third argument, the value to add, was given not as string but ${typeof s}, equal to:\n${JSON.stringify(s, null, 4)}`);\n      if (z(this.ranges) && Array.isArray(this.last()) && i === this.last()[1]) {\n        if (this.last()[1] = n, this.last()[2], this.last()[2] !== null && z(s)) {\n          let o = this.last()[2] && this.last()[2].length && (!this.opts?.mergeType || this.opts.mergeType === 1) ? `${this.last()[2]}${s}` : s;\n          this.opts.limitToBeAddedWhitespace && (o = D(o, this.opts.limitLinebreaksCount)), r(o) && !o.length || (this.last()[2] = o);\n        }\n      } else {\n        this.ranges || (this.ranges = []);\n        let o = s !== void 0 && !(r(s) && !s.length) ? [i, n, s && this.opts.limitToBeAddedWhitespace ? D(s, this.opts.limitLinebreaksCount) : s] : [i, n];\n        this.ranges.push(o);\n      }\n    } else\n      throw I(i) && i >= 0 ? new TypeError(`ranges-push/Ranges/add(): [THROW_ID_10] \"to\" value, the second input argument, must be a natural number or zero! Currently it's of a type \"${typeof n}\" equal to: ${JSON.stringify(n, null, 4)}`) : new TypeError(`ranges-push/Ranges/add(): [THROW_ID_09] \"from\" value, the first input argument, must be a natural number or zero! Currently it's of a type \"${typeof i}\" equal to: ${JSON.stringify(i, null, 4)}`);\n  }\n  push(t, r2, s) {\n    this.add(t, r2, s);\n  }\n  current() {\n    return Array.isArray(this.ranges) && this.ranges.length ? (this.ranges = $(this.ranges, { mergeType: this.opts.mergeType }), this.ranges && this.opts.limitToBeAddedWhitespace ? this.ranges.map((t) => z(t[2]) ? [t[0], t[1], D(t[2], this.opts.limitLinebreaksCount)] : t) : this.ranges) : null;\n  }\n  wipe() {\n    this.ranges = [];\n  }\n  replace(t) {\n    if (Array.isArray(t) && t.length)\n      if (Array.isArray(t[0]) && I(t[0][0]))\n        this.ranges = Array.from(t);\n      else\n        throw new Error(`ranges-push/Ranges/replace(): [THROW_ID_11] Single range was given but we expected array of arrays! The first element, ${JSON.stringify(t[0], null, 4)} should be an array and its first element should be an integer, a string index.`);\n    else\n      this.ranges = [];\n  }\n  last() {\n    return Array.isArray(this.ranges) && this.ranges.length ? this.ranges[this.ranges.length - 1] : null;\n  }\n};\n\n// ../string-left-right/dist/string-left-right.esm.js\nvar import_rfdc = __toESM(require_rfdc(), 1);\nvar $2 = (0, import_rfdc.default)();\nvar c = \"\\xA0\";\nfunction D2({ str: n, idx: e = 0, stopAtNewlines: l = false, stopAtRawNbsp: u = false }) {\n  if (typeof n != \"string\" || !n.length || ((!e || typeof e != \"number\") && (e = 0), !n[e + 1]))\n    return null;\n  if (n[e + 1] && (n[e + 1].trim() || l && `\n\\r`.includes(n[e + 1]) || u && n[e + 1] === c))\n    return e + 1;\n  if (n[e + 2] && (n[e + 2].trim() || l && `\n\\r`.includes(n[e + 2]) || u && n[e + 2] === c))\n    return e + 2;\n  for (let t = e + 1, m = n.length; t < m; t++)\n    if (n[t].trim() || l && `\n\\r`.includes(n[t]) || u && n[t] === c)\n      return t;\n  return null;\n}\nfunction E(n, e = 0) {\n  return D2({ str: n, idx: e, stopAtNewlines: false, stopAtRawNbsp: false });\n}\n\n// src/util.ts\nfunction characterSuitableForNames(char) {\n  return /[-_A-Za-z0-9]/.test(char);\n}\nfunction prepHopefullyAnArray(something, name) {\n  if (!something) {\n    return [];\n  }\n  if (Array.isArray(something)) {\n    return something.filter((val) => typeof val === \"string\" && val.trim());\n  }\n  if (typeof something === \"string\") {\n    return something.trim() ? [something] : [];\n  }\n  throw new TypeError(\n    `string-strip-html/stripHtml(): [THROW_ID_05] ${name} must be array containing zero or more strings or something falsey. Currently it's equal to: ${something}, that a type of ${typeof something}.`\n  );\n}\nfunction xBeforeYOnTheRight(str, startingIdx, x, y2) {\n  for (let i = startingIdx, len = str.length; i < len; i++) {\n    if (str.startsWith(x, i)) {\n      return true;\n    }\n    if (str.startsWith(y2, i)) {\n      return false;\n    }\n  }\n  return false;\n}\nfunction notWithinAttrQuotes(tag, str, i) {\n  let R1 = !tag?.quotes;\n  let R2 = !!tag?.quotes?.value && !xBeforeYOnTheRight(str, i + 1, tag.quotes.value, \">\");\n  let R31 = tag?.quotes?.next !== -1;\n  let R32 = !xBeforeYOnTheRight(\n    str,\n    tag?.quotes?.next - 1,\n    tag?.quotes?.value,\n    `>`\n  );\n  return !tag?.quotes || !xBeforeYOnTheRight(str, i + 1, tag.quotes.value, \">\") && tag?.quotes?.next !== -1 && xBeforeYOnTheRight(str, tag?.quotes?.next - 1, tag?.quotes?.value, `>`);\n}\nfunction countInstancesOf(needle, hay) {\n  return (hay.match(new RegExp(needle, \"g\")) || []).length;\n}\nvar definitelyTagNames = /* @__PURE__ */ new Set([\n  \"!doctype\",\n  \"abbr\",\n  \"address\",\n  \"area\",\n  \"article\",\n  \"aside\",\n  \"audio\",\n  \"base\",\n  \"bdi\",\n  \"bdo\",\n  \"blockquote\",\n  \"body\",\n  \"br\",\n  \"button\",\n  \"canvas\",\n  \"caption\",\n  \"cite\",\n  \"code\",\n  \"col\",\n  \"colgroup\",\n  \"data\",\n  \"datalist\",\n  \"dd\",\n  \"del\",\n  \"details\",\n  \"dfn\",\n  \"dialog\",\n  \"div\",\n  \"dl\",\n  \"doctype\",\n  \"dt\",\n  \"em\",\n  \"embed\",\n  \"fieldset\",\n  \"figcaption\",\n  \"figure\",\n  \"footer\",\n  \"form\",\n  \"h1\",\n  \"h2\",\n  \"h3\",\n  \"h4\",\n  \"h5\",\n  \"h6\",\n  \"head\",\n  \"header\",\n  \"hgroup\",\n  \"hr\",\n  \"html\",\n  \"iframe\",\n  \"img\",\n  \"input\",\n  \"ins\",\n  \"kbd\",\n  \"keygen\",\n  \"label\",\n  \"legend\",\n  \"li\",\n  \"link\",\n  \"main\",\n  \"map\",\n  \"mark\",\n  \"math\",\n  \"menu\",\n  \"menuitem\",\n  \"meta\",\n  \"meter\",\n  \"nav\",\n  \"noscript\",\n  \"object\",\n  \"ol\",\n  \"optgroup\",\n  \"option\",\n  \"output\",\n  \"param\",\n  \"picture\",\n  \"pre\",\n  \"progress\",\n  \"rb\",\n  \"rp\",\n  \"rt\",\n  \"rtc\",\n  \"ruby\",\n  \"samp\",\n  \"script\",\n  \"section\",\n  \"select\",\n  \"slot\",\n  \"small\",\n  \"source\",\n  \"span\",\n  \"strong\",\n  \"style\",\n  \"sub\",\n  \"summary\",\n  \"sup\",\n  \"svg\",\n  \"table\",\n  \"tbody\",\n  \"td\",\n  \"template\",\n  \"textarea\",\n  \"tfoot\",\n  \"th\",\n  \"thead\",\n  \"time\",\n  \"title\",\n  \"tr\",\n  \"track\",\n  \"ul\",\n  \"var\",\n  \"video\",\n  \"wbr\",\n  \"xml\"\n]);\nvar singleLetterTags = /* @__PURE__ */ new Set([\"a\", \"b\", \"i\", \"p\", \"q\", \"s\", \"u\"]);\nvar punctuationTrailing = /* @__PURE__ */ new Set([`.`, `,`, `;`, `!`, `?`]);\nvar punctuation = /* @__PURE__ */ new Set([\n  \".\",\n  \",\",\n  \"?\",\n  \";\",\n  \")\",\n  \"\\u2026\",\n  '\"',\n  \"\\xBB\"\n]);\nvar inlineTags = /* @__PURE__ */ new Set([\n  \"a\",\n  \"abbr\",\n  \"acronym\",\n  \"audio\",\n  \"b\",\n  \"bdi\",\n  \"bdo\",\n  \"big\",\n  // \"br\", - we replace it with a space, so the same-way as block-level element\n  \"button\",\n  \"canvas\",\n  \"cite\",\n  \"code\",\n  \"data\",\n  \"datalist\",\n  \"del\",\n  \"dfn\",\n  \"em\",\n  \"embed\",\n  \"i\",\n  \"iframe\",\n  // \"img\", - we replace it with a space, since we deleted that image\n  \"input\",\n  \"ins\",\n  \"kbd\",\n  \"label\",\n  \"map\",\n  \"mark\",\n  \"meter\",\n  \"noscript\",\n  \"object\",\n  \"output\",\n  \"picture\",\n  \"progress\",\n  \"q\",\n  \"ruby\",\n  \"s\",\n  \"samp\",\n  // \"script\", - we also want at least a single space instead of script tag\n  \"select\",\n  \"slot\",\n  \"small\",\n  \"span\",\n  \"strong\",\n  \"sub\",\n  \"sup\",\n  \"svg\",\n  \"template\",\n  \"textarea\",\n  \"time\",\n  \"u\",\n  \"tt\",\n  \"var\",\n  \"video\",\n  \"wbr\"\n]);\n\n// package.json\nvar version = \"13.4.0\";\n\n// src/main.ts\nvar version2 = version;\nvar defaults = {\n  ignoreTags: [],\n  ignoreTagsWithTheirContents: [],\n  onlyStripTags: [],\n  stripTogetherWithTheirContents: [\"script\", \"style\", \"xml\"],\n  skipHtmlDecoding: false,\n  trimOnlySpaces: false,\n  stripRecognisedHTMLOnly: false,\n  dumpLinkHrefsNearby: {\n    enabled: false,\n    putOnNewLine: false,\n    wrapHeads: \"\",\n    wrapTails: \"\"\n  },\n  ignoreIndentations: false,\n  cb: null,\n  reportProgressFunc: null,\n  reportProgressFuncFrom: 0,\n  reportProgressFuncTo: 100\n};\nfunction stripHtml(str, opts) {\n  let start = Date.now();\n  let rangedOpeningTagsForDeletion = [];\n  let rangedOpeningTagsForIgnoring = [];\n  let allTagLocations = [];\n  let filteredTagLocations = [];\n  let tag = {};\n  function resetTag() {\n    tag = { attributes: [] };\n  }\n  resetTag();\n  let chunkOfWhitespaceStartsAt = null;\n  let chunkOfSpacesStartsAt = null;\n  let lastLFCRAt = null;\n  let nonWhitespaceCharMetSinceLastLFCR = false;\n  let attrObj = {};\n  let hrefDump = {\n    tagName: \"\",\n    hrefValue: \"\",\n    openingTagEnds: void 0\n  };\n  let stringToInsertAfter = \"\";\n  let hrefInsertionActive = false;\n  let spacesChunkWhichFollowsTheClosingBracketEndsAt = null;\n  let strip = true;\n  function treatRangedTags(i, resolvedOpts2, rangesToDelete2) {\n    if (Array.isArray(resolvedOpts2.stripTogetherWithTheirContents) && (resolvedOpts2.stripTogetherWithTheirContents.includes(tag.name) || resolvedOpts2.stripTogetherWithTheirContents.includes(\"*\"))) {\n      if (tag.slashPresent && Array.isArray(rangedOpeningTagsForDeletion) && rangedOpeningTagsForDeletion.some((obj) => obj.name === tag.name)) {\n        for (let y2 = rangedOpeningTagsForDeletion.length; y2--; ) {\n          if (rangedOpeningTagsForDeletion[y2].name === tag.name) {\n            filteredTagLocations = filteredTagLocations.filter(\n              ([from, upto]) => (from < rangedOpeningTagsForDeletion[y2].lastOpeningBracketAt || from >= i + 1) && (upto <= rangedOpeningTagsForDeletion[y2].lastOpeningBracketAt || upto > i + 1)\n            );\n            let endingIdx = i + 1;\n            if (tag.lastClosingBracketAt) {\n              endingIdx = tag.lastClosingBracketAt + 1;\n            }\n            filteredTagLocations.push([\n              rangedOpeningTagsForDeletion[y2].lastOpeningBracketAt,\n              endingIdx\n            ]);\n            if (punctuation.has(str[i]) && resolvedOpts2.cb) {\n              resolvedOpts2.cb({\n                tag,\n                deleteFrom: rangedOpeningTagsForDeletion[y2].lastOpeningBracketAt,\n                deleteTo: i + 1,\n                insert: null,\n                rangesArr: rangesToDelete2,\n                proposedReturn: [\n                  rangedOpeningTagsForDeletion[y2].lastOpeningBracketAt,\n                  i,\n                  null\n                ]\n              });\n            } else if (resolvedOpts2.cb) {\n              resolvedOpts2.cb({\n                tag,\n                deleteFrom: rangedOpeningTagsForDeletion[y2].lastOpeningBracketAt,\n                deleteTo: i,\n                insert: \"\",\n                rangesArr: rangesToDelete2,\n                proposedReturn: [\n                  rangedOpeningTagsForDeletion[y2].lastOpeningBracketAt,\n                  i,\n                  \"\"\n                ]\n              });\n            }\n            rangedOpeningTagsForDeletion.splice(y2, 1);\n            break;\n          }\n        }\n      } else if (!tag.slashPresent) {\n        rangedOpeningTagsForDeletion.push(tag);\n      }\n    } else if (Array.isArray(resolvedOpts2.ignoreTagsWithTheirContents) && checkIgnoreTagsWithTheirContents(i, resolvedOpts2, tag)) {\n      strip = false;\n    }\n  }\n  function calculateWhitespaceToInsert(str2, currCharIdx, fromIdx, toIdx, lastOpeningBracketAt, lastClosingBracketAt) {\n    if (Array.isArray(rangesToDelete.current()) && typeof fromIdx === \"number\" && rangesToDelete.current()[0][0] === 0 && rangesToDelete.current()[0][1] >= fromIdx) {\n      return \"\";\n    }\n    if (str.length === toIdx && lastClosingBracketAt && !resolvedOpts?.dumpLinkHrefsNearby?.enabled) {\n      return null;\n    }\n    let strToEvaluateForLineBreaks = \"\";\n    if (Number.isInteger(fromIdx) && fromIdx < lastOpeningBracketAt) {\n      strToEvaluateForLineBreaks += str2.slice(\n        fromIdx,\n        lastOpeningBracketAt\n      );\n    }\n    if (Number.isInteger(toIdx) && toIdx > lastClosingBracketAt + 1) {\n      let temp = str2.slice(lastClosingBracketAt + 1, toIdx);\n      if (toIdx && !E(str, toIdx - 1)) {\n        temp = temp.trimEnd();\n      }\n      if (temp.includes(\"\\n\") && isOpeningAt(toIdx, str2)) {\n        strToEvaluateForLineBreaks += \" \";\n      } else {\n        strToEvaluateForLineBreaks += temp;\n      }\n    }\n    let R0 = !punctuation.has(str2[currCharIdx]);\n    let R1 = str2[toIdx - 1] !== \">\" || !str2[fromIdx].trim();\n    let R2 = ![`\"`, `(`].includes(str2[lastOpeningBracketAt - 1]);\n    let R3 = ![\";\", \".\", \":\", \"!\"].includes(str2[currCharIdx]);\n    if ((R0 || R1 && R2 && R3) && // tag must be closed with a bracket, that is, it's not a case:\n    // 111 <br class=\"zz\"\\n<img> 222\n    //                           ^\n    //                    we're here\n    //\n    // we target cases like:\n    // <li>\"<a href=\"/Foo/bar\">zzz</a>\"</li>\n    //      ^^^^^^^^^^^^^^^^^^^\n    //    does not need whitespace added!\n    (R1 || R2) && str2[currCharIdx] !== \"!\" && // either the tag is not inline-tag\n    (!inlineTags.has(tag.name) || // that tag already has some whitespace around\n    typeof fromIdx === \"number\" && fromIdx < lastOpeningBracketAt || typeof toIdx === \"number\" && toIdx > lastClosingBracketAt + 1)) {\n      let foundLineBreaks = strToEvaluateForLineBreaks.match(/\\n/g);\n      if (Array.isArray(foundLineBreaks) && foundLineBreaks.length) {\n        if (foundLineBreaks.length === 1) {\n          return \"\\n\";\n        }\n        if (foundLineBreaks.length === 2) {\n          return \"\\n\\n\";\n        }\n        return \"\\n\\n\\n\";\n      }\n      return \" \";\n    } else {\n    }\n    return \"\";\n  }\n  function calculateHrefToBeInserted(resolvedOpts2, toIdx) {\n    if (resolvedOpts2.dumpLinkHrefsNearby?.enabled && hrefDump.tagName && hrefDump.tagName === tag.name && tag.lastOpeningBracketAt && (hrefDump.openingTagEnds && tag.lastOpeningBracketAt > hrefDump.openingTagEnds || !hrefDump.openingTagEnds)) {\n      hrefInsertionActive = true;\n    }\n    if (hrefInsertionActive) {\n      let lineBreaks = resolvedOpts2.dumpLinkHrefsNearby?.putOnNewLine ? \"\\n\\n\" : \"\";\n      stringToInsertAfter = `${lineBreaks}${hrefDump.hrefValue}`;\n      if (typeof toIdx !== \"number\" || E(str, toIdx - 1)) {\n        stringToInsertAfter += lineBreaks;\n      }\n    }\n  }\n  function isOpeningAt(i, customStr) {\n    if (customStr) {\n      return customStr[i] === \"<\" && customStr[i + 1] !== \"%\";\n    }\n    return str[i] === \"<\" && str[i + 1] !== \"%\";\n  }\n  function isClosingAt(i) {\n    return str[i] === \">\" && str[i - 1] !== \"%\";\n  }\n  function checkIgnoreTagsWithTheirContents(i, resolvedOpts2, tag2) {\n    if (resolvedOpts2.ignoreTagsWithTheirContents.includes(\"*\")) {\n      return true;\n    }\n    let nextOpeningPos = str.indexOf(`<${tag2.name}`, i);\n    let nextClosingPos = str.indexOf(`</${tag2.name}`, i);\n    if (\n      // EITHER it's an opening tag\n      !tag2.slashPresent && // and there's no closing\n      nextClosingPos === -1 || // OR it's a closing tag\n      tag2.slashPresent && // and there haven't been any opening tag encountered so far\n      !rangedOpeningTagsForIgnoring.some(\n        (tagObj) => tagObj.name === tag2.name\n      ) || // OR both opening and closing tags follow further\n      nextClosingPos > -1 && nextOpeningPos > -1 && // and that opening is before next closing\n      nextOpeningPos < nextClosingPos\n    ) {\n      return false;\n    }\n    return resolvedOpts2.ignoreTagsWithTheirContents.includes(tag2.name);\n  }\n  if (typeof str !== \"string\") {\n    throw new TypeError(\n      `string-strip-html/stripHtml(): [THROW_ID_01] Input must be string! Currently it's: ${(typeof str).toLowerCase()}, equal to:\n${JSON.stringify(\n        str,\n        null,\n        4\n      )}`\n    );\n  }\n  if (opts) {\n    if (!d(opts)) {\n      throw new TypeError(\n        `string-strip-html/stripHtml(): [THROW_ID_02] Optional Options Object must be a plain object! Currently it's: ${(typeof opts).toLowerCase()}, equal to:\n${JSON.stringify(\n          opts,\n          null,\n          4\n        )}`\n      );\n    } else {\n      if (opts.reportProgressFunc && typeof opts.reportProgressFunc !== \"function\") {\n        throw new Error(\n          `string-strip-html/stripHtml(): [THROW_ID_03] The Optional Options Object's key reportProgressFunc, callback function, should be a function but it was given as type ${typeof opts.reportProgressFunc}, equal to ${JSON.stringify(\n            opts.reportProgressFunc,\n            null,\n            4\n          )}`\n        );\n      }\n      if (typeof opts.dumpLinkHrefsNearby === \"boolean\" && opts.dumpLinkHrefsNearby != null) {\n        throw new Error(\n          `string-strip-html/stripHtml(): [THROW_ID_04] The Optional Options Object's key should be a plain object but it was given as type ${typeof opts.dumpLinkHrefsNearby}, equal to ${JSON.stringify(\n            opts.dumpLinkHrefsNearby,\n            null,\n            4\n          )}`\n        );\n      }\n    }\n  }\n  function resetHrefMarkers() {\n    if (hrefInsertionActive) {\n      hrefDump = {\n        tagName: \"\",\n        hrefValue: \"\",\n        openingTagEnds: void 0\n      };\n      hrefInsertionActive = false;\n    }\n  }\n  let resolvedOpts = {\n    ...defaults,\n    ...opts,\n    dumpLinkHrefsNearby: Object.assign(\n      {},\n      defaults.dumpLinkHrefsNearby,\n      opts?.dumpLinkHrefsNearby\n    )\n  };\n  if (X(resolvedOpts, \"returnRangesOnly\")) {\n    throw new TypeError(\n      `string-strip-html/stripHtml(): [THROW_ID_05] The Optional Options Object's key returnRangesOnly has been removed from the API since v.5 release.`\n    );\n  }\n  if (resolvedOpts.reportProgressFunc) {\n    if (typeof resolvedOpts.reportProgressFuncFrom !== \"number\") {\n      throw new Error(\n        `string-strip-html/stripHtml(): [THROW_ID_06] The Optional Options Object's key reportProgressFuncFrom, callback function's \"from\" range, should be a number but it was given as type ${typeof resolvedOpts.reportProgressFuncFrom}, equal to ${JSON.stringify(\n          resolvedOpts.reportProgressFuncFrom,\n          null,\n          4\n        )}`\n      );\n    }\n    if (typeof resolvedOpts.reportProgressFuncTo !== \"number\") {\n      throw new Error(\n        `string-strip-html/stripHtml(): [THROW_ID_07] The Optional Options Object's key reportProgressFuncTo, callback function's \"to\" range, should be a number but it was given as type ${typeof resolvedOpts.reportProgressFuncTo}, equal to ${JSON.stringify(\n          resolvedOpts.reportProgressFuncTo,\n          null,\n          4\n        )}`\n      );\n    }\n  }\n  resolvedOpts.ignoreTags = prepHopefullyAnArray(\n    resolvedOpts.ignoreTags,\n    \"resolvedOpts.ignoreTags\"\n  );\n  resolvedOpts.onlyStripTags = prepHopefullyAnArray(\n    resolvedOpts.onlyStripTags,\n    \"resolvedOpts.onlyStripTags\"\n  );\n  let onlyStripTagsMode = !!resolvedOpts.onlyStripTags.length;\n  if (resolvedOpts.onlyStripTags.length && resolvedOpts.ignoreTags.length) {\n    resolvedOpts.onlyStripTags = without_default(\n      resolvedOpts.onlyStripTags,\n      ...resolvedOpts.ignoreTags\n    );\n  }\n  if (!resolvedOpts.stripTogetherWithTheirContents) {\n    resolvedOpts.stripTogetherWithTheirContents = [];\n  } else if (typeof resolvedOpts.stripTogetherWithTheirContents === \"string\" && resolvedOpts.stripTogetherWithTheirContents.length) {\n    resolvedOpts.stripTogetherWithTheirContents = [\n      resolvedOpts.stripTogetherWithTheirContents\n    ];\n  }\n  let somethingCaught = {};\n  if (resolvedOpts.stripTogetherWithTheirContents && Array.isArray(resolvedOpts.stripTogetherWithTheirContents) && resolvedOpts.stripTogetherWithTheirContents.length && !resolvedOpts.stripTogetherWithTheirContents.every((el, i) => {\n    if (!(typeof el === \"string\")) {\n      somethingCaught.el = el;\n      somethingCaught.i = i;\n      return false;\n    }\n    return true;\n  })) {\n    throw new TypeError(\n      `string-strip-html/stripHtml(): [THROW_ID_08] Optional Options Object's key stripTogetherWithTheirContents was set to contain not just string elements! For example, element at index ${somethingCaught.i} has a value ${somethingCaught.el} which is not string but ${(typeof somethingCaught.el).toLowerCase()}.`\n    );\n  }\n  if (!resolvedOpts.cb) {\n    resolvedOpts.cb = ({ rangesArr, proposedReturn }) => {\n      if (proposedReturn) {\n        rangesArr.push(...proposedReturn);\n      }\n    };\n  }\n  let rangesToDelete = new y({\n    limitToBeAddedWhitespace: true,\n    limitLinebreaksCount: 2\n  });\n  if (!resolvedOpts.skipHtmlDecoding) {\n    while (str !== (0, import_html_entities.decode)(str, { scope: \"strict\" })) {\n      str = (0, import_html_entities.decode)(str, { scope: \"strict\" });\n    }\n  }\n  let isInsideScript = false;\n  let isDoctype = false;\n  let currentPercentageDone = 0;\n  let lastPercentage = 0;\n  let len = str.length;\n  let midLen = Math.floor(len / 2);\n  for (let i = 0; i < len; i++) {\n    if (resolvedOpts.reportProgressFunc) {\n      if (len > 1e3 && len < 2e3) {\n        if (i === midLen) {\n          resolvedOpts.reportProgressFunc(\n            Math.floor(\n              (resolvedOpts.reportProgressFuncTo - resolvedOpts.reportProgressFuncFrom) / 2\n            )\n          );\n        }\n      } else if (len >= 2e3) {\n        currentPercentageDone = resolvedOpts.reportProgressFuncFrom + Math.floor(\n          i / len * (resolvedOpts.reportProgressFuncTo - resolvedOpts.reportProgressFuncFrom)\n        );\n        if (currentPercentageDone !== lastPercentage) {\n          lastPercentage = currentPercentageDone;\n          resolvedOpts.reportProgressFunc(currentPercentageDone);\n        }\n      }\n    }\n    if (Object.keys(tag).length > 1 && tag.lastClosingBracketAt && tag.lastClosingBracketAt < i && str[i] !== \" \" && spacesChunkWhichFollowsTheClosingBracketEndsAt === null) {\n      spacesChunkWhichFollowsTheClosingBracketEndsAt = i;\n    }\n    if (!isInsideScript && str[i] === \"%\" && str[i - 1] === \"{\" && str.includes(\"%}\", i + 1)) {\n      lastLFCRAt = null;\n      let newPosition = str.indexOf(\"%}\", i) - 1;\n      if (newPosition > i) {\n        i = newPosition;\n        continue;\n      }\n    }\n    if (!isInsideScript && isClosingAt(i)) {\n      if ((!tag || Object.keys(tag).length < 2) && i > 1) {\n        for (let y2 = i; y2--; ) {\n          if (str[y2 - 1] === void 0 || isClosingAt(y2)) {\n            let startingPoint = str[y2 - 1] === void 0 ? y2 : y2 + 1;\n            let culprit = str.slice(startingPoint, i + 1) || \"\";\n            if (\n              // quick, more efficient catches:\n              (culprit.includes(`/>`) || culprit.includes(`/ >`) || culprit.includes(`=\"`) || culprit.includes(`='`)) && str !== `<${trim_default(culprit.trim(), \"/>\")}>` && // recursion prevention\n              [...definitelyTagNames].some(\n                (val) => trim_default(\n                  culprit.trim().split(/\\s+/).filter((val2) => val2.trim()).filter((_val3, i3) => i3 === 0),\n                  \"/>\"\n                ).toLowerCase() === val\n              ) && stripHtml(`<${culprit.trim()}>`, resolvedOpts).result === \"\"\n            ) {\n              if (!allTagLocations.length || allTagLocations[allTagLocations.length - 1][0] !== tag.lastOpeningBracketAt) {\n                allTagLocations.push([startingPoint, i + 1]);\n              }\n              if (!filteredTagLocations.length || filteredTagLocations[filteredTagLocations.length - 1][0] !== tag.lastOpeningBracketAt) {\n                filteredTagLocations.push([startingPoint, i + 1]);\n              }\n              let whiteSpaceCompensation = calculateWhitespaceToInsert(\n                str,\n                i,\n                startingPoint,\n                i + 1,\n                startingPoint,\n                i + 1\n              );\n              let deleteUpTo = i + 1;\n              if (str[deleteUpTo] && !str[deleteUpTo].trim()) {\n                for (let z2 = deleteUpTo; z2 < len; z2++) {\n                  if (str[z2].trim()) {\n                    deleteUpTo = z2;\n                    break;\n                  }\n                }\n              }\n              resolvedOpts.cb({\n                tag,\n                deleteFrom: startingPoint,\n                deleteTo: deleteUpTo,\n                insert: whiteSpaceCompensation,\n                rangesArr: rangesToDelete,\n                proposedReturn: [\n                  startingPoint,\n                  deleteUpTo,\n                  whiteSpaceCompensation\n                ]\n              });\n            }\n            break;\n          }\n        }\n      }\n    }\n    if (!isDoctype && str[i] === \"/\" && !tag.quotes?.value && Number.isInteger(tag.lastOpeningBracketAt) && !Number.isInteger(tag.lastClosingBracketAt)) {\n      tag.slashPresent = i;\n    }\n    if (str[i] === '\"' || str[i] === \"'\") {\n      if (!isDoctype && tag.nameStarts && tag?.quotes?.value === str[i]) {\n        attrObj.valueEnds = i;\n        attrObj.value = str.slice(attrObj.valueStarts, i);\n        tag.attributes.push(attrObj);\n        attrObj = {};\n        delete tag.quotes;\n        let hrefVal;\n        if (resolvedOpts.dumpLinkHrefsNearby?.enabled && !rangedOpeningTagsForDeletion.length && tag.attributes.some((obj) => {\n          if (typeof obj.name === \"string\" && obj.name.toLowerCase() === \"href\") {\n            hrefVal = `${resolvedOpts.dumpLinkHrefsNearby?.wrapHeads || \"\"}${obj.value}${resolvedOpts.dumpLinkHrefsNearby?.wrapTails || \"\"}`;\n            return true;\n          }\n        })) {\n          hrefDump = {\n            tagName: tag.name,\n            hrefValue: hrefVal,\n            openingTagEnds: void 0\n          };\n        }\n      } else if (!isDoctype && !tag.quotes && tag.nameStarts) {\n        tag.quotes = {};\n        tag.quotes.value = str[i];\n        tag.quotes.start = i;\n        tag.quotes.next = str.indexOf(str[i], i + 1);\n        if (attrObj.nameStarts && attrObj.nameEnds && attrObj.nameEnds < i && attrObj.nameStarts < i && !attrObj.valueStarts) {\n          attrObj.name = str.slice(attrObj.nameStarts, attrObj.nameEnds);\n        }\n      }\n    }\n    if (tag.nameStarts !== void 0 && tag.nameEnds === void 0 && (!str[i].trim() || !characterSuitableForNames(str[i]))) {\n      tag.nameEnds = i;\n      tag.name = str.slice(\n        tag.nameStarts,\n        tag.nameEnds + /* c8 ignore next */\n        (!isClosingAt(i) && str[i] !== \"/\" && str[i + 1] === void 0 ? 1 : 0)\n      );\n      if (\n        // if we caught \"----\" from \"<----\" or \"---->\", bail:\n        str[tag.nameStarts - 1] !== \"!\" && // protection against <!--\n        !tag.name.replace(/-/g, \"\").length || // if tag name starts with a number character\n        /^\\d+$/.test(tag.name[0])\n      ) {\n        tag = {};\n        continue;\n      }\n      if (typeof tag.name === \"string\" && tag.name.toLowerCase() === \"doctype\") {\n        isDoctype = true;\n      }\n      if (isOpeningAt(i)) {\n        calculateHrefToBeInserted(resolvedOpts);\n        let whiteSpaceCompensation = calculateWhitespaceToInsert(\n          str,\n          i,\n          tag.leftOuterWhitespace,\n          i,\n          tag.lastOpeningBracketAt,\n          i\n        );\n        if (resolvedOpts.stripTogetherWithTheirContents.includes(tag.name) || resolvedOpts.stripTogetherWithTheirContents.includes(\"*\")) {\n          filteredTagLocations = filteredTagLocations.filter(\n            ([from, upto]) => !(from === tag.leftOuterWhitespace && upto === i)\n          );\n        }\n        resolvedOpts.cb({\n          tag,\n          deleteFrom: tag.leftOuterWhitespace,\n          deleteTo: i,\n          insert: `${whiteSpaceCompensation}${stringToInsertAfter}${whiteSpaceCompensation}`,\n          rangesArr: rangesToDelete,\n          proposedReturn: [\n            tag.leftOuterWhitespace,\n            i,\n            `${whiteSpaceCompensation}${stringToInsertAfter}${whiteSpaceCompensation}`\n          ]\n        });\n        resetHrefMarkers();\n        treatRangedTags(i, resolvedOpts, rangesToDelete);\n      }\n    }\n    if (tag.quotes?.start && tag.quotes.start < i && !tag.quotes.end && attrObj.nameEnds && attrObj.equalsAt && !attrObj.valueStarts) {\n      attrObj.valueStarts = i;\n    }\n    if (!tag.quotes && attrObj.nameEnds && str[i] === \"=\" && !attrObj.valueStarts && !attrObj.equalsAt) {\n      attrObj.equalsAt = i;\n    }\n    if (!tag.quotes && attrObj.nameStarts && attrObj.nameEnds && !attrObj.valueStarts && str[i].trim() && str[i] !== \"=\") {\n      tag.attributes.push(attrObj);\n      attrObj = {};\n    }\n    if (!tag.quotes && attrObj.nameStarts && !attrObj.nameEnds) {\n      if (isDoctype && `'\"`.includes(str[attrObj.nameStarts])) {\n        if (\n          // opening is in front:\n          // <!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\"\n          //                       ^                  ^\n          //               attrObj.nameStarts      we're here let's say\n          attrObj.nameStarts < i && // quote pair is matched\n          str[i] === str[attrObj.nameStarts]\n        ) {\n          attrObj.nameEnds = i + 1;\n          attrObj.name = str.slice(attrObj.nameStarts, attrObj.nameEnds);\n        }\n      } else if (!str[i].trim()) {\n        attrObj.nameEnds = i;\n        attrObj.name = str.slice(attrObj.nameStarts, attrObj.nameEnds);\n      } else if (str[i] === \"=\") {\n        if (!attrObj.equalsAt) {\n          attrObj.nameEnds = i;\n          attrObj.equalsAt = i;\n          attrObj.name = str.slice(attrObj.nameStarts, attrObj.nameEnds);\n        }\n      } else if (str[i] === \"/\" || isClosingAt(i)) {\n        attrObj.nameEnds = i;\n        attrObj.name = str.slice(attrObj.nameStarts, attrObj.nameEnds);\n        tag.attributes.push(attrObj);\n        attrObj = {};\n      } else if (isOpeningAt(i)) {\n        attrObj.nameEnds = i;\n        attrObj.name = str.slice(attrObj.nameStarts, attrObj.nameEnds);\n        tag.attributes.push(attrObj);\n        attrObj = {};\n      }\n    }\n    if (!tag.quotes && tag.nameEnds < i && !str[i - 1].trim() && str[i].trim() && !`<>/!`.includes(str[i]) && !attrObj.nameStarts && !tag.lastClosingBracketAt) {\n      attrObj.nameStarts = i;\n    }\n    if (tag.lastOpeningBracketAt !== null && tag.lastOpeningBracketAt < i && str[i] === \"/\" && tag.onlyPlausible) {\n      tag.onlyPlausible = false;\n    }\n    if (tag.lastOpeningBracketAt !== null && tag.lastOpeningBracketAt < i && str[i] !== \"/\") {\n      if (tag.onlyPlausible === void 0) {\n        if ((!str[i].trim() || isOpeningAt(i)) && !tag.slashPresent) {\n          tag.onlyPlausible = true;\n        } else {\n          tag.onlyPlausible = false;\n        }\n      }\n      if (str[i].trim() && tag.nameStarts === void 0 && !isOpeningAt(i) && str[i] !== \"/\" && !isClosingAt(i) && str[i] !== \"!\") {\n        tag.nameStarts = i;\n        tag.nameContainsLetters = false;\n      }\n    }\n    if (tag.nameStarts && !tag.quotes && typeof str[i] === \"string\" && str[i].toLowerCase() !== str[i].toUpperCase()) {\n      tag.nameContainsLetters = true;\n    }\n    if (\n      // it's closing bracket\n      isClosingAt(i) && //\n      // precaution against JSP comparison\n      // .. <c:when test=\"${!empty ab.cd && ab.cd > 0.00}\"> ..\n      //                                          ^\n      //                                        we're here, it's false ending\n      //\n      (notWithinAttrQuotes(tag, str, i) || //\n      // precaution against double opening quotes\n      // a<div class=\"\"zzzz\">x</div>b\n      //                    ^\n      //            we're here\n      tag.quotes.value && typeof tag.lastOpeningBracketAt === \"number\" && countInstancesOf(\n        tag.quotes.value,\n        str.slice(tag.lastOpeningBracketAt, i)\n      ) % 2 === 1 && // precaution against tags within attributes:\n      //\n      // <a href=\"<b>c</b>\">d</a>\n      //            ^\n      //     we're here\n      !str.slice(tag.lastOpeningBracketAt + 1, i).includes(\"<\") && !str.slice(tag.lastOpeningBracketAt + 1, i).includes(\">\"))\n    ) {\n      if (tag.lastOpeningBracketAt !== void 0) {\n        tag.lastClosingBracketAt = i;\n        spacesChunkWhichFollowsTheClosingBracketEndsAt = null;\n        if (Object.keys(attrObj).length) {\n          tag.attributes.push(attrObj);\n          attrObj = {};\n        }\n        if (resolvedOpts.dumpLinkHrefsNearby?.enabled && hrefDump.tagName && !hrefDump.openingTagEnds) {\n          hrefDump.openingTagEnds = i;\n        }\n      }\n    } else {\n    }\n    if ((!isDoctype || str[i] === \">\") && tag.lastOpeningBracketAt !== void 0) {\n      if (tag.lastClosingBracketAt === void 0) {\n        if (tag.lastOpeningBracketAt < i && !isOpeningAt(i) && // to prevent cases like \"text <<<<<< text\"\n        (str[i + 1] === void 0 || isOpeningAt(i + 1) && !tag?.quotes?.value) && tag.nameContainsLetters && typeof tag.nameStarts === \"number\") {\n          tag.name = str.slice(tag.nameStarts, tag.nameEnds || i + 1).toLowerCase();\n          if (!allTagLocations.length || allTagLocations[allTagLocations.length - 1][0] !== tag.lastOpeningBracketAt) {\n            allTagLocations.push([tag.lastOpeningBracketAt, i + 1]);\n          }\n          if (\n            // if it's an ignored tag\n            resolvedOpts.ignoreTags.includes(tag.name) || // or ignored ranged tag\n            checkIgnoreTagsWithTheirContents(i, resolvedOpts, tag) || // it's not a known HTML tag and...\n            !definitelyTagNames.has(tag.name) && // ...EITHER situation is suspicious\n            (tag.onlyPlausible || // ...OR user instructed to strip only definitely HTML\n            resolvedOpts.stripRecognisedHTMLOnly)\n          ) {\n            tag = {};\n            attrObj = {};\n            continue;\n          }\n          if ((definitelyTagNames.has(tag.name) || singleLetterTags.has(tag.name)) && (tag.onlyPlausible === false || tag.onlyPlausible === true && tag.attributes.length) || str[i + 1] === void 0) {\n            calculateHrefToBeInserted(resolvedOpts);\n            let whiteSpaceCompensation = calculateWhitespaceToInsert(\n              str,\n              i,\n              tag.leftOuterWhitespace,\n              i + 1,\n              tag.lastOpeningBracketAt,\n              tag.lastClosingBracketAt\n            );\n            if (isInsideScript && tag.name === \"script\" && tag.slashPresent) {\n              isInsideScript = false;\n            }\n            let insert;\n            if (whiteSpaceCompensation === null || stringToInsertAfter === null) {\n              insert = null;\n            } else {\n              insert = `${whiteSpaceCompensation}${stringToInsertAfter}${whiteSpaceCompensation}`;\n            }\n            resolvedOpts.cb({\n              tag,\n              deleteFrom: tag.leftOuterWhitespace,\n              deleteTo: i + 1,\n              insert,\n              rangesArr: rangesToDelete,\n              proposedReturn: [tag.leftOuterWhitespace, i + 1, insert]\n            });\n            resetHrefMarkers();\n            treatRangedTags(i, resolvedOpts, rangesToDelete);\n          }\n          if (!filteredTagLocations.length || filteredTagLocations[filteredTagLocations.length - 1][0] !== tag.lastOpeningBracketAt && filteredTagLocations[filteredTagLocations.length - 1][1] !== i + 1) {\n            if (resolvedOpts.stripTogetherWithTheirContents.includes(tag.name) || resolvedOpts.stripTogetherWithTheirContents.includes(\"*\")) {\n              let lastRangedOpeningTag;\n              for (let z2 = rangedOpeningTagsForDeletion.length; z2--; ) {\n                if (rangedOpeningTagsForDeletion[z2].name === tag.name) {\n                  lastRangedOpeningTag = rangedOpeningTagsForDeletion[z2];\n                }\n              }\n              if (lastRangedOpeningTag) {\n                filteredTagLocations = filteredTagLocations.filter(\n                  ([from]) => from !== lastRangedOpeningTag.lastOpeningBracketAt\n                );\n                filteredTagLocations.push([\n                  lastRangedOpeningTag.lastOpeningBracketAt,\n                  i + 1\n                ]);\n              } else {\n                filteredTagLocations.push([tag.lastOpeningBracketAt, i + 1]);\n              }\n            } else {\n              filteredTagLocations.push([tag.lastOpeningBracketAt, i + 1]);\n            }\n          }\n        }\n      } else if (i > tag.lastClosingBracketAt && str[i].trim() || str[i + 1] === void 0 || // on markdown-friendly settings, when indentations are ignored,\n      // stop at the first line break\n      resolvedOpts.ignoreIndentations && `\\r\n`.includes(str[i])) {\n        let endingRangeIndex = tag.lastClosingBracketAt === i ? i + 1 : i;\n        if (resolvedOpts.trimOnlySpaces && endingRangeIndex === len - 1 && spacesChunkWhichFollowsTheClosingBracketEndsAt !== null && spacesChunkWhichFollowsTheClosingBracketEndsAt < i) {\n          endingRangeIndex = spacesChunkWhichFollowsTheClosingBracketEndsAt;\n        }\n        if (!allTagLocations.length || allTagLocations[allTagLocations.length - 1][0] !== tag.lastOpeningBracketAt) {\n          allTagLocations.push([\n            tag.lastOpeningBracketAt,\n            tag.lastClosingBracketAt + 1\n          ]);\n        }\n        let ignoreTags = resolvedOpts.ignoreTags.includes(tag.name);\n        let ignoreTagsWithTheirContents = checkIgnoreTagsWithTheirContents(\n          i,\n          resolvedOpts,\n          tag\n        );\n        if (!strip || resolvedOpts.stripRecognisedHTMLOnly && typeof tag.name === \"string\" && !definitelyTagNames.has(tag.name.toLowerCase()) && !singleLetterTags.has(tag.name.toLowerCase()) || !onlyStripTagsMode && (ignoreTags || ignoreTagsWithTheirContents) || onlyStripTagsMode && !resolvedOpts.onlyStripTags.includes(tag.name) || resolvedOpts.ignoreTagsWithTheirContents.includes(tag.name)) {\n          if (ignoreTagsWithTheirContents) {\n            if (tag.slashPresent) {\n              for (let y2 = rangedOpeningTagsForIgnoring.length; y2--; ) {\n                if (rangedOpeningTagsForIgnoring[y2].name === tag.name) {\n                  rangedOpeningTagsForIgnoring.splice(y2, 1);\n                  break;\n                }\n              }\n              if (!rangedOpeningTagsForIgnoring.length) {\n                strip = true;\n              }\n            } else {\n              if (strip) {\n                strip = false;\n              }\n              rangedOpeningTagsForIgnoring.push(tag);\n            }\n          }\n          resolvedOpts.cb({\n            tag,\n            deleteFrom: null,\n            deleteTo: null,\n            insert: null,\n            rangesArr: rangesToDelete,\n            proposedReturn: null\n          });\n          tag = {};\n          attrObj = {};\n        } else if (!tag.onlyPlausible || // tag name is recognised and there are no attributes:\n        tag.attributes.length === 0 && tag.name && (definitelyTagNames.has(tag.name.toLowerCase()) || singleLetterTags.has(tag.name.toLowerCase())) || // OR there is at least one equals that follow the attribute's name:\n        tag.attributes?.some((attrObj2) => attrObj2.equalsAt)) {\n          if (!filteredTagLocations.length || filteredTagLocations[filteredTagLocations.length - 1][0] !== tag.lastOpeningBracketAt) {\n            filteredTagLocations.push([\n              tag.lastOpeningBracketAt,\n              tag.lastClosingBracketAt + 1\n            ]);\n          }\n          let whiteSpaceCompensation = calculateWhitespaceToInsert(\n            str,\n            i,\n            // currCharIdx\n            tag.leftOuterWhitespace,\n            // fromIdx\n            endingRangeIndex,\n            // toIdx\n            tag.lastOpeningBracketAt,\n            // lastOpeningBracketAt\n            tag.lastClosingBracketAt\n            // lastClosingBracketAt\n          );\n          stringToInsertAfter = \"\";\n          hrefInsertionActive = false;\n          calculateHrefToBeInserted(resolvedOpts, endingRangeIndex);\n          let insert;\n          if (typeof stringToInsertAfter === \"string\" && stringToInsertAfter.length) {\n            insert = `${whiteSpaceCompensation}${stringToInsertAfter}${whiteSpaceCompensation === \"\\n\\n\" ? \"\\n\" : whiteSpaceCompensation}`;\n            if (\n              // if there is no whitespace after the tag we're deleting\n              // (equivalent to calculateWhitespaceToInsert(): toIdx === lastClosingBracketAt + 1)\n              endingRangeIndex === tag.lastClosingBracketAt + 1 && // but don't add space if there's a trailing punctuation\n              // imagine a full stop instead of \"b\" above!\n              (!str[endingRangeIndex] || !punctuationTrailing.has(str[endingRangeIndex]))\n            ) {\n              insert += \" \";\n            }\n            if (\n              // no whitespace in front detected:\n              tag.leftOuterWhitespace === tag.lastOpeningBracketAt && // (because any frontal whitespace tag.leftOuterWhitespace would extend in\n              //  front of tag.leftOuterWhitespace)\n              //\n              // and there are ranges recorded so far\n              rangesToDelete.last() && // and the last of the recorded ranges does not extend to this range\n              // we're about to push (meaning we're about to cut out tightly and make\n              // a concatenation)\n              rangesToDelete.last()[1] < tag.lastOpeningBracketAt && (!resolvedOpts?.dumpLinkHrefsNearby?.putOnNewLine || !punctuationTrailing.has(str[endingRangeIndex]))\n            ) {\n              insert = \" \" + insert;\n            }\n          } else {\n            insert = whiteSpaceCompensation;\n          }\n          if (insert !== null && (tag.leftOuterWhitespace === 0 || !E(str, endingRangeIndex - 1)) && (!resolvedOpts.dumpLinkHrefsNearby?.enabled || tag.name !== \"a\")) {\n            insert = void 0;\n          }\n          let punctuationCorrection = 0;\n          if (hrefInsertionActive && punctuationTrailing.has(str[endingRangeIndex])) {\n            if (resolvedOpts.dumpLinkHrefsNearby?.putOnNewLine) {\n              insert = `${str[endingRangeIndex]}${insert ? insert : \"\"}`;\n            }\n            let nextCharOnTheRight = E(str, endingRangeIndex);\n            if (nextCharOnTheRight && insert?.endsWith(\"\\n\")) {\n              punctuationCorrection += nextCharOnTheRight - i;\n            } else if (!nextCharOnTheRight || nextCharOnTheRight > i) {\n              punctuationCorrection++;\n            }\n          }\n          resolvedOpts.cb({\n            tag,\n            deleteFrom: tag.leftOuterWhitespace,\n            deleteTo: endingRangeIndex + punctuationCorrection,\n            insert,\n            rangesArr: rangesToDelete,\n            proposedReturn: [\n              tag.leftOuterWhitespace,\n              endingRangeIndex + punctuationCorrection,\n              insert\n            ]\n          });\n          resetHrefMarkers();\n          treatRangedTags(i, resolvedOpts, rangesToDelete);\n        } else {\n          tag = {};\n        }\n        if (!isClosingAt(i)) {\n          tag = {};\n        }\n      }\n      if (isDoctype) {\n        isDoctype = false;\n      }\n    }\n    if (\n      // Don't catch tags inside <script>:\n      //\n      // EITHER it's not inside <script>\n      (!isInsideScript || // OR it's the same script tag's closing counterpart\n      //\n      // < body > text < script > zzz <    /    script < / body >\n      //                              ^\n      //                          we're here\n      str[i] === \"<\" && E(str, E(str, i)) && str[E(str, i)] === \"/\" && str.startsWith(\n        \"script\",\n        E(str, E(str, i))\n      )) && isOpeningAt(i) && !isOpeningAt(i - 1) && !`'\"`.includes(str[i + 1]) && (!`'\"`.includes(str[i + 2]) || /\\w/.test(str[i + 1])) && //\n      // precaution JSP,\n      // against <c:\n      !(str[i + 1] === \"c\" && str[i + 2] === \":\") && // against <fmt:\n      !(str[i + 1] === \"f\" && str[i + 2] === \"m\" && str[i + 3] === \"t\" && str[i + 4] === \":\") && // against <sql:\n      !(str[i + 1] === \"s\" && str[i + 2] === \"q\" && str[i + 3] === \"l\" && str[i + 4] === \":\") && // against <x:\n      !(str[i + 1] === \"x\" && str[i + 2] === \":\") && // against <fn:\n      !(str[i + 1] === \"f\" && str[i + 2] === \"n\" && str[i + 3] === \":\") && //\n      // kl <c:when test=\"${!empty ab.cd && ab.cd < 0.00}\"> mn\n      //                                          ^\n      //                                  we're here, it's false alarm\n      notWithinAttrQuotes(tag, str, i)\n    ) {\n      if (isClosingAt(E(str, i))) {\n        continue;\n      } else {\n        if (tag.nameEnds && tag.nameEnds < i && !tag.lastClosingBracketAt) {\n          if (tag.onlyPlausible === true && tag.attributes && tag.attributes.length || tag.onlyPlausible === false) {\n            let whiteSpaceCompensation = calculateWhitespaceToInsert(\n              str,\n              i,\n              tag.leftOuterWhitespace,\n              i,\n              tag.lastOpeningBracketAt,\n              i\n            );\n            resolvedOpts.cb({\n              tag,\n              deleteFrom: tag.leftOuterWhitespace,\n              deleteTo: i,\n              insert: whiteSpaceCompensation,\n              rangesArr: rangesToDelete,\n              proposedReturn: [\n                tag.leftOuterWhitespace,\n                i,\n                whiteSpaceCompensation\n              ]\n            });\n            treatRangedTags(i, resolvedOpts, rangesToDelete);\n            tag = {};\n            attrObj = {};\n          }\n        }\n        if (tag.lastOpeningBracketAt !== void 0 && tag.onlyPlausible && tag.name && !tag.quotes) {\n          tag.lastOpeningBracketAt = void 0;\n          tag.name = void 0;\n          tag.onlyPlausible = false;\n        }\n        if ((tag.lastOpeningBracketAt === void 0 || !tag.onlyPlausible) && !tag.quotes) {\n          tag.lastOpeningBracketAt = i;\n          tag.slashPresent = false;\n          tag.attributes = [];\n          if (chunkOfWhitespaceStartsAt === null) {\n            tag.leftOuterWhitespace = i;\n          } else if (resolvedOpts.trimOnlySpaces && chunkOfWhitespaceStartsAt === 0) {\n            tag.leftOuterWhitespace = chunkOfSpacesStartsAt || i;\n          } else {\n            tag.leftOuterWhitespace = chunkOfWhitespaceStartsAt;\n          }\n          if (`${str[i + 1]}${str[i + 2]}${str[i + 3]}` === \"!--\" || `${str[i + 1]}${str[i + 2]}${str[i + 3]}${str[i + 4]}${str[i + 5]}${str[i + 6]}${str[i + 7]}${str[i + 8]}` === \"![CDATA[\") {\n            let cdata = true;\n            if (str[i + 2] === \"-\") {\n              cdata = false;\n            }\n            let closingFoundAt;\n            for (let y2 = i; y2 < len; y2++) {\n              if (!closingFoundAt && cdata && `${str[y2 - 2]}${str[y2 - 1]}${str[y2]}` === \"]]>\" || !cdata && `${str[y2 - 2]}${str[y2 - 1]}${str[y2]}` === \"-->\") {\n                closingFoundAt = y2;\n              }\n              if (closingFoundAt && (closingFoundAt < y2 && str[y2].trim() || str[y2 + 1] === void 0)) {\n                let rangeEnd = y2;\n                if (str[y2 + 1] === void 0 && !str[y2].trim() || str[y2] === \">\") {\n                  rangeEnd += 1;\n                }\n                if (!allTagLocations.length || allTagLocations[allTagLocations.length - 1][0] !== tag.lastOpeningBracketAt) {\n                  allTagLocations.push([\n                    tag.lastOpeningBracketAt,\n                    closingFoundAt + 1\n                  ]);\n                }\n                if (!filteredTagLocations.length || filteredTagLocations[filteredTagLocations.length - 1][0] !== tag.lastOpeningBracketAt) {\n                  filteredTagLocations.push([\n                    tag.lastOpeningBracketAt,\n                    closingFoundAt + 1\n                  ]);\n                }\n                let whiteSpaceCompensation = calculateWhitespaceToInsert(\n                  str,\n                  y2,\n                  tag.leftOuterWhitespace,\n                  rangeEnd,\n                  tag.lastOpeningBracketAt,\n                  closingFoundAt\n                );\n                resolvedOpts.cb({\n                  tag,\n                  deleteFrom: tag.leftOuterWhitespace,\n                  deleteTo: rangeEnd,\n                  insert: whiteSpaceCompensation,\n                  rangesArr: rangesToDelete,\n                  proposedReturn: [\n                    tag.leftOuterWhitespace,\n                    rangeEnd,\n                    whiteSpaceCompensation\n                  ]\n                });\n                i = y2 - 1;\n                if (str[y2] === \">\") {\n                  i = y2;\n                }\n                tag = {};\n                attrObj = {};\n                break;\n              }\n            }\n          }\n        }\n      }\n    }\n    if (!str[i].trim() || str[i].charCodeAt(0) === 847) {\n      if (chunkOfWhitespaceStartsAt === null) {\n        chunkOfWhitespaceStartsAt = i;\n        if (tag.lastOpeningBracketAt !== void 0 && tag.lastOpeningBracketAt < i && tag.nameStarts && tag.nameStarts < tag.lastOpeningBracketAt && i === tag.lastOpeningBracketAt + 1 && // insurance against tail part of ranged tag being deleted:\n        !rangedOpeningTagsForDeletion.some(\n          // eslint-disable-next-line no-loop-func\n          (rangedTagObj) => rangedTagObj.name === tag.name\n        )) {\n          tag.onlyPlausible = true;\n          tag.name = void 0;\n          tag.nameStarts = void 0;\n        }\n      }\n      if (str[i] === \"\\n\" || str[i] === \"\\r\") {\n        lastLFCRAt = i;\n        if (nonWhitespaceCharMetSinceLastLFCR) {\n          nonWhitespaceCharMetSinceLastLFCR = false;\n        }\n      }\n    } else {\n      if (chunkOfWhitespaceStartsAt !== null) {\n        if (!tag.quotes && attrObj.equalsAt > chunkOfWhitespaceStartsAt - 1 && attrObj.nameEnds && attrObj.equalsAt > attrObj.nameEnds && str[i] !== '\"' && str[i] !== \"'\") {\n          if (d(attrObj)) {\n            tag.attributes.push(attrObj);\n          }\n          attrObj = {};\n          tag.equalsSpottedAt = void 0;\n        }\n        chunkOfWhitespaceStartsAt = null;\n      }\n      if (!nonWhitespaceCharMetSinceLastLFCR) {\n        nonWhitespaceCharMetSinceLastLFCR = true;\n        if (strip && !isInsideScript && typeof lastLFCRAt === \"number\" && i && lastLFCRAt < i - 1) {\n          if (\n            // belt and braces, double-check maybe something went wrong\n            // and some non-whitespace got in\n            str.slice(lastLFCRAt + 1, i).trim()\n          ) {\n            lastLFCRAt = null;\n          } else if (!resolvedOpts.ignoreIndentations) {\n            rangesToDelete.push([lastLFCRAt + 1, i]);\n          }\n        }\n      }\n    }\n    if (str[i] === \" \") {\n      if (chunkOfSpacesStartsAt === null) {\n        chunkOfSpacesStartsAt = i;\n      }\n    } else if (chunkOfSpacesStartsAt !== null) {\n      chunkOfSpacesStartsAt = null;\n    }\n    if (tag.name === \"script\") {\n      isInsideScript = !tag.slashPresent;\n    }\n  }\n  if (str && // indentations can be trimmed\n  !resolvedOpts.ignoreIndentations && // if only spaces were meant to be trimmed,\n  (resolvedOpts.trimOnlySpaces && // and first character is a space\n  str[0] === \" \" || // if normal trim is requested\n  !resolvedOpts.trimOnlySpaces && // and the first character is whitespace character\n  !str[0].trim())) {\n    for (let i2 = 0; i2 < len; i2++) {\n      if (resolvedOpts.trimOnlySpaces && str[i2] !== \" \" || !resolvedOpts.trimOnlySpaces && str[i2].trim()) {\n        rangesToDelete.push([0, i2]);\n        break;\n      } else if (!str[i2 + 1]) {\n        rangesToDelete.push([0, i2 + 1]);\n      }\n    }\n  }\n  if (str && // if only spaces were meant to be trimmed,\n  (resolvedOpts.trimOnlySpaces && // and last character is a space\n  str[~-str.length] === \" \" || // if normal trim is requested\n  !resolvedOpts.trimOnlySpaces && // and the last character is whitespace character\n  !str[~-str.length].trim())) {\n    for (let i3 = str.length; i3--; ) {\n      if (resolvedOpts.trimOnlySpaces && str[i3] !== \" \" || !resolvedOpts.trimOnlySpaces && str[i3].trim()) {\n        rangesToDelete.push([i3 + 1, len]);\n        break;\n      }\n    }\n  }\n  let curr = rangesToDelete.current();\n  if (!opts?.cb && curr) {\n    if (curr[0] && !curr[0][0]) {\n      let startingIdx = curr[0][1];\n      rangesToDelete.ranges[0] = [\n        rangesToDelete.ranges[0][0],\n        rangesToDelete.ranges[0][1]\n      ];\n    }\n    if (curr[curr.length - 1] && curr[curr.length - 1][1] === str.length) {\n      let startingIdx = curr[curr.length - 1][0];\n      if (rangesToDelete.ranges) {\n        let startingIdx2 = rangesToDelete.ranges[rangesToDelete.ranges.length - 1][0];\n        if (str[startingIdx2 - 1] && (resolvedOpts.trimOnlySpaces && str[startingIdx2 - 1] === \" \" || !resolvedOpts.trimOnlySpaces && !str[startingIdx2 - 1].trim())) {\n          startingIdx2 -= 1;\n        }\n        let backupWhatToAdd = rangesToDelete.ranges[rangesToDelete.ranges.length - 1][2];\n        rangesToDelete.ranges[rangesToDelete.ranges.length - 1] = [\n          startingIdx2,\n          rangesToDelete.ranges[rangesToDelete.ranges.length - 1][1]\n        ];\n        if (backupWhatToAdd?.trim()) {\n          rangesToDelete.ranges[rangesToDelete.ranges.length - 1].push(\n            backupWhatToAdd.trimEnd()\n          );\n        }\n      }\n    }\n  }\n  return {\n    log: {\n      timeTakenInMilliseconds: Date.now() - start\n    },\n    result: _(str, rangesToDelete.current()),\n    ranges: rangesToDelete.current(),\n    allTagLocations,\n    filteredTagLocations\n  };\n}\n// Annotate the CommonJS export names for ESM import in node:\n0 && (0);\n/**\n * @name codsen-utils\n * @fileoverview Various utility functions\n * @version 1.5.0\n * @author Roy Revelt, Codsen Ltd\n * @license MIT\n * {@link https://codsen.com/os/codsen-utils/}\n */\n/**\n * @name ranges-sort\n * @fileoverview Sort string index ranges\n * @version 6.0.8\n * @author Roy Revelt, Codsen Ltd\n * @license MIT\n * {@link https://codsen.com/os/ranges-sort/}\n */\n/**\n * @name ranges-merge\n * @fileoverview Merge and sort string index ranges\n * @version 9.0.9\n * @author Roy Revelt, Codsen Ltd\n * @license MIT\n * {@link https://codsen.com/os/ranges-merge/}\n */\n/**\n * @name ranges-apply\n * @fileoverview Take an array of string index ranges, delete/replace the string according to them\n * @version 7.0.9\n * @author Roy Revelt, Codsen Ltd\n * @license MIT\n * {@link https://codsen.com/os/ranges-apply/}\n */\n/**\n * @name string-collapse-leading-whitespace\n * @fileoverview Collapse the leading and trailing whitespace of a string\n * @version 7.0.5\n * @author Roy Revelt, Codsen Ltd\n * @license MIT\n * {@link https://codsen.com/os/string-collapse-leading-whitespace/}\n */\n/**\n * @name ranges-push\n * @fileoverview Gather string index ranges\n * @version 7.0.9\n * @author Roy Revelt, Codsen Ltd\n * @license MIT\n * {@link https://codsen.com/os/ranges-push/}\n */\n/**\n * @name string-left-right\n * @fileoverview Looks up the first non-whitespace character to the left/right of a given index\n * @version 6.0.12\n * @author Roy Revelt, Codsen Ltd\n * @license MIT\n * {@link https://codsen.com/os/string-left-right/}\n */\n/*! Bundled license information:\n\nlodash-es/lodash.js:\n  (**\n   * @license\n   * Lodash (Custom Build) <https://lodash.com/>\n   * Build: `lodash modularize exports=\"es\" -o ./`\n   * Copyright OpenJS Foundation and other contributors <https://openjsf.org/>\n   * Released under MIT license <https://lodash.com/license>\n   * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n   * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n   *)\n*/\n\n\n//# sourceURL=webpack://frontend/../node_modules/string-strip-html/dist/string-strip-html.cjs.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => (module['default']) :
/******/ 				() => (module);
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/global */
/******/ 	(() => {
/******/ 		__webpack_require__.g = (function() {
/******/ 			if (typeof globalThis === 'object') return globalThis;
/******/ 			try {
/******/ 				return this || new Function('return this')();
/******/ 			} catch (e) {
/******/ 				if (typeof window === 'object') return window;
/******/ 			}
/******/ 		})();
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.js");
/******/ 	
/******/ })()
;